/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/



/************************************************************/
/*****               Create Tables                      *****/
/************************************************************/



/************************************************************/
/*****                  Alter Tables                    *****/
/************************************************************/
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_SubscriptionSC') AND type in (N'U'))
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_SubscriptionSC') AND name = N'OrderDetailID')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_SubscriptionSC
		ADD
			[OrderDetailID] [INT]
	END
END
GO



/************************************************************/
/*****              Drop Functions                      *****/
/************************************************************/
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_FxGetProductTopLevelCategory') AND type in (N'FN', N'TF'))
    DROP FUNCTION {databaseOwner}{objectQualifier}RZC_FxGetProductTopLevelCategory
GO



/************************************************************/
/*****              Create Functions                    *****/
/************************************************************/
CREATE FUNCTION {databaseOwner}{objectQualifier}RZC_FxGetProductTopLevelCategory
(
    @ProductID INT
)
RETURNS @table TABLE
(
	[CategoryID] INT,
    [CategoryName] VARCHAR(50),
	[ParentID] INT,
	[Level] INT
)
BEGIN
    ;WITH [CategoryPage] AS
	(
		SELECT
			C1.[CategoryID], C1.[CategoryName], C1.[ParentID], 0 AS [Level]
		FROM
			{databaseOwner}{objectQualifier}Smith_Category C1
		INNER JOIN
			{databaseOwner}{objectQualifier}Smith_CategoryProduct CP
		ON
			CP.[CategoryID] = C1.[CategoryID]
		WHERE
			CP.[ProductID] = @ProductID
		UNION ALL
		SELECT
			C2.[CategoryID], C2.[CategoryName], C2.[ParentID], [Level] + 1 AS [Level]
		FROM
			{databaseOwner}{objectQualifier}Smith_Category C2
		INNER JOIN
			[CategoryPage] CTE
		ON
			C2.[CategoryID] = CTE.[ParentID]
	)
	INSERT INTO
		@table
	SELECT TOP 1
		CTE.*
	FROM
		[CategoryPage] CTE
	ORDER BY CTE.[Level] DESC
	RETURN
END
GO



/************************************************************/
/*****                Drop Sprocs                       *****/
/************************************************************/
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListUserProductOrders') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListUserProductOrders
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetOrdersRevenueSummary') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetOrdersRevenueSummary
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListCategoriesRevenueByFilter') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListCategoriesRevenueByFilter
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListSubscriptionsByFilter') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListSubscriptionsByFilter
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateSubscription') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateSubscription
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateSubscription') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateSubscription
GO



/************************************************************/
/*****               Create Sprocs                      *****/
/************************************************************/
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListUserProductOrders
	@DNNLogin VARCHAR(128) = NULL,
	@ProductID INT = NULL,
	@Length INT = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT TOP (@Length)
		OD.*, O.[OrderID], O.[OrderDate], O.[Status]
	FROM
		{databaseOwner}{objectQualifier}Smith_StoreOrders O
	INNER JOIN
		{databaseOwner}{objectQualifier}Smith_StoreOrderDetails OD
	ON
		OD.[OrderID] = O.[OrderID]
	INNER JOIN
		{databaseOwner}{objectQualifier}Smith_Customer C
	ON
		C.[CustomerID] = O.[CustomerID]
	INNER JOIN
			{databaseOwner}{objectQualifier}Smith_PayHist P
		ON
			P.[OrderID] = O.[OrderID]
	WHERE
		C.[DNNLogin] = @DNNLogin
		AND OD.[ProductID] = @ProductID
		AND O.[DeletedFlag] <> 1
		AND O.[Status] NOT IN ('BillMeLater', 'Cancelled', 'Incomplete', 'Returned')
		AND P.[Success] = 1
		AND P.[TransType] = 'Sale'
		AND (O.[StoreID] = @StoreID OR O.[TabModuleId] = @StoreID OR @StoreID = -1)
		AND O.[PortalID] = @PortalID
	ORDER BY
		O.[OrderDate] DESC
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetOrdersRevenueSummary
	@From DATETIME = NULL,
	@To DATETIME = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		COUNT(O.[OrderID]) AS [CountTotal],
		SUM(O.[SubTotal]) AS [SubTotal], SUM(O.[ShippingTotal]) AS [ShippingTotal],
		SUM(O.[Discount]) AS [Discount], SUM(O.[MemberDiscount]) AS [MemberDiscount],
		SUM(O.[TaxTotal]) AS [TaxTotal], SUM(O.[GrandTotal]) AS [GrandTotal]
	FROM
		{databaseOwner}{objectQualifier}Smith_StoreOrders O
	INNER JOIN
		{databaseOwner}{objectQualifier}Smith_PayHist P
	ON
		P.[OrderID] = O.[OrderID]
	WHERE
		O.[DeletedFlag] <> 1
		AND O.[Status] NOT IN ('BillMeLater', 'Cancelled', 'Incomplete', 'Returned')
		AND (
			CONVERT(DATE, O.[OrderDate]) BETWEEN ISNULL(@From, CAST(-53690 AS DATETIME)) AND ISNULL(@To, GETDATE())
		)
		AND P.[Success] = 1
		AND P.[TransType] = 'Sale'
		AND (O.[StoreID] = @StoreID OR O.[TabModuleId] = @StoreID OR @StoreID = -1)
		AND O.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListCategoriesRevenueByFilter
	@PageNumber INT = NULL,
	@PageSize INT = NULL,
	@From DATETIME = NULL,
	@To DATETIME = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @PageRecordStart INT
	DECLARE @PageRecordEnd INT
	SET @PageRecordStart = ((@PageNumber - 1) * @PageSize) + 1
	SET @PageRecordEnd = @PageNumber * @PageSize

	;WITH [SalePage] AS
	(
		SELECT
			ROW_NUMBER() OVER (ORDER BY MAX(C.[CategoryName]) ASC, OD.[ProductID] ASC) AS [RowNo],
			OD.[ProductID], MAX(OD.[ProductSKU]) AS [ProductSKU], MAX(OD.[ProductName]) AS [ProductName], MAX(C.[CategoryName]) AS [CategoryName],
			COUNT(O.[OrderID]) AS [TotalOrders], SUM(OD.[Quantity] * OD.[UnitCost]) AS [Revenue]
		FROM
			{databaseOwner}{objectQualifier}Smith_StoreOrderDetails OD
		INNER JOIN
			{databaseOwner}{objectQualifier}Smith_StoreOrders O
		ON
			O.[OrderID] = OD.[OrderID]
		INNER JOIN
			{databaseOwner}{objectQualifier}Smith_PayHist P
		ON
			P.[OrderID] = O.[OrderID]
		OUTER APPLY (
			SELECT
				[CategoryName]
			FROM
				{databaseOwner}{objectQualifier}RZC_FxGetProductTopLevelCategory(OD.[ProductID])
		) C
		WHERE
			O.[DeletedFlag] <> 1
			AND O.[Status] NOT IN ('BillMeLater', 'Cancelled', 'Incomplete', 'Returned')
			AND (
				CONVERT(DATE, O.[OrderDate]) BETWEEN ISNULL(@From, CAST(-53690 AS DATETIME)) AND ISNULL(@To, GETDATE())
			)
			AND P.[Success] = 1
			AND P.[TransType] = 'Sale'
			AND (O.[StoreID] = @StoreID OR O.[TabModuleId] = @StoreID OR @StoreID = -1)
			AND O.[PortalID] = @PortalID
		GROUP BY
			OD.[ProductID], OD.[ProductSKU]
	)
	SELECT
		*,
		TotalRecords = (
			SELECT COUNT(*) FROM [SalePage]
		),
		MoreRecords = (
			SELECT COUNT(*) FROM [SalePage]
			WHERE [RowNo] > @PageRecordEnd
		)
	FROM
		[SalePage]
	WHERE
		[RowNo] BETWEEN @PageRecordStart AND @PageRecordEnd
	ORDER BY
		[RowNo];
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListSubscriptionsByFilter
	@PageNumber INT = NULL,
	@PageSize INT = NULL,
	@OrderColumn VARCHAR(128) = NULL,
	@OrderDirection VARCHAR(4) = NULL,
	@SearchValue NVARCHAR(256) = NULL,
	@CustomerID INT = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @PageRecordStart INT
	DECLARE @PageRecordEnd INT

	SET @PageRecordStart = ((@PageNumber - 1) * @PageSize) + 1
	SET @PageRecordEnd = @PageNumber * @PageSize

	;WITH [SubscriptionsPage] AS
	(
		SELECT
			(
				CASE
					WHEN @OrderColumn = 'OrderID' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY S.[OrderID] ASC)
					WHEN @OrderColumn = 'OrderID' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY S.[OrderID] DESC)
					WHEN @OrderColumn = 'CustomerID' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY S.[CustomerID] ASC)
					WHEN @OrderColumn = 'CustomerID' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY S.[CustomerID] DESC)
					WHEN @OrderColumn = 'CreateDate' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY S.[CreateDate] ASC)
					WHEN @OrderColumn = 'CreateDate' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY S.[CreateDate] DESC)
					WHEN @OrderColumn = 'CancelDate' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY S.[CancelDate] ASC)
					WHEN @OrderColumn = 'CancelDate' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY S.[CancelDate] DESC)
					WHEN @OrderColumn = 'Amount' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY S.[Amount] ASC)
					WHEN @OrderColumn = 'Amount' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY S.[Amount] DESC)
					WHEN @OrderColumn = 'Active' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY S.[Active] ASC)
					WHEN @OrderColumn = 'Active' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY S.[Active] DESC)
					WHEN @OrderColumn = 'Suspend' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY S.[Suspend] ASC)
					WHEN @OrderColumn = 'Suspend' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY S.[Suspend] DESC)
					WHEN @OrderColumn = 'NextPaymentDate' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY S.[NextPaymentDate] ASC)
					WHEN @OrderColumn = 'NextPaymentDate' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY S.[NextPaymentDate] DESC)
				ELSE ROW_NUMBER() OVER (ORDER BY S.[SubscriptionID] ASC)
				END
			) AS [RowNo], S.*
		FROM
			{databaseOwner}{objectQualifier}Smith_SubscriptionSC S
		WHERE
			(NULLIF(@SearchValue, '') IS NULL
				OR (
					(LEFT(@SearchValue, 1) = '#' AND S.[OrderID] = TRY_CONVERT(INT, SUBSTRING(@SearchValue, 2, LEN(@SearchValue))))
					OR (LEFT(@SearchValue, 1) <> '#'
						AND (
							S.[BillingName] LIKE '%' + @SearchValue + '%'
							OR S.[BillingAddress] LIKE '%' + @SearchValue + '%'
							OR S.[BillingCity] LIKE '%' + @SearchValue + '%'
							OR S.[BillingZip] LIKE '%' + @SearchValue + '%'
							OR S.[BillingState] LIKE '%' + @SearchValue + '%'
							OR S.[BillingCountry] LIKE '%' + @SearchValue + '%'
							OR S.[IPAddress] LIKE '%' + @SearchValue + '%'
							OR S.[TransID] LIKE '%' + @SearchValue + '%'
							OR S.[PayType] LIKE '%' + @SearchValue + '%'
						)
					)
				)
			)
			AND (NULLIF(@CustomerID, '-1') IS NULL OR S.[CustomerID] = @CustomerID)
			AND (S.[StoreID] = @StoreID OR @StoreID = -1)
			AND S.[PortalID] = @PortalID
	)
	SELECT
		*,
		TotalRecords = (
			SELECT COUNT(*) FROM [SubscriptionsPage]
		),
		MoreRecords = (
			SELECT COUNT(*) FROM [SubscriptionsPage]
			WHERE [RowNo] > @PageRecordEnd
		)
	FROM
		[SubscriptionsPage]
	WHERE
		[RowNo] BETWEEN @PageRecordStart AND @PageRecordEnd
	ORDER BY
		[RowNo];
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateSubscription
	@CustomerID INT = NULL,
	@ProductID INT = NULL,
	@CreateDate DATETIME = NULL,
	@CancelDate DATETIME = NULL,
	@SubStartDate DATETIME = NULL,
	@SubEndDate DATETIME = NULL,
	@TransID VARCHAR(50) = NULL,
	@PortalID INT = NULL,
	@IPAddress VARCHAR(50) = NULL,
	@CreatedBy NVARCHAR(100) = NULL,
	@ModifiedBy NVARCHAR(100) = NULL,
	@DateModified DATETIME = NULL,
	@OrderID INT = NULL,
	@OrderDetailID INT = NULL,
	@Amount MONEY = NULL,
	@Interval NVARCHAR(50) = NULL,
	@Occurrences INT = NULL,
	@BillingName NVARCHAR(50) = NULL,
	@BillingAddress NVARCHAR(50) = NULL,
	@BillingCity NVARCHAR(50) = NULL,
	@BillingState NVARCHAR(50) = NULL,
	@BillingCountry NVARCHAR(50) = NULL,
	@BillingZip NVARCHAR(50) = NULL,
	@AcctNo VARCHAR(64) = NULL,
	@MaskAcctNo VARCHAR(50) = NULL,
	@ExpRoute VARCHAR(50) = NULL,
	@Active BIT = NULL,
	@Suspend SMALLINT = NULL,
	@NextPaymentDate DATE = NULL,
	@PayMethodID INT = NULL,
	@PayType VARCHAR(50) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO {databaseOwner}{objectQualifier}Smith_SubscriptionSC
		([CustomerID]
		,[ProductID]
		,[CreateDate]
		,[CancelDate]
		,[SubStartDate]
		,[SubEndDate]
		,[TransID]
		,[PortalID]
		,[IPAddress]
		,[CreatedBy]
		,[ModifiedBy]
		,[DateModified]
		,[TabModuleId]
		,[OrderID]
		,[OrderDetailID]
		,[Amount]
		,[Interval]
		,[Occurrences]
		,[BillingName]
		,[BillingAddress]
		,[BillingCity]
		,[BillingState]
		,[BillingCountry]
		,[BillingZip]
		,[AcctNo]
		,[MaskAcctNo]
		,[ExpRoute]
		,[Active]
		,[Suspend]
		,[NextPaymentDate]
		,[PayMethodID]
		,[PayType]
		,[StoreID])
	VALUES
		(@CustomerID
		,@ProductID
		,@CreateDate
		,@CancelDate
		,@SubStartDate
		,@SubEndDate
		,@TransID
		,@PortalID
		,@IPAddress
		,@CreatedBy
		,@ModifiedBy
		,@DateModified
		,@StoreID
		,@OrderID
		,@OrderDetailID
		,@Amount
		,@Interval
		,@Occurrences
		,@BillingName
		,@BillingAddress
		,@BillingCity
		,@BillingState
		,@BillingCountry
		,@BillingZip
		,@AcctNo
		,@MaskAcctNo
		,@ExpRoute
		,@Active
		,@Suspend
		,@NextPaymentDate
		,@PayMethodID
		,@PayType
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateSubscription
	@SubscriptionID INT = NULL,
	@CustomerID INT = NULL,
	@ProductID INT = NULL,
	@CreateDate DATETIME = NULL,
	@CancelDate DATETIME = NULL,
	@SubStartDate DATETIME = NULL,
	@SubEndDate DATETIME = NULL,
	@TransID VARCHAR(50) = NULL,
	@PortalID INT = NULL,
	@IPAddress VARCHAR(50) = NULL,
	@CreatedBy NVARCHAR(100) = NULL,
	@ModifiedBy NVARCHAR(100) = NULL,
	@DateModified DATETIME = NULL,
	@TabModuleId INT = NULL,
	@OrderID INT = NULL,
	@OrderDetailID INT = NULL,
	@Amount MONEY = NULL,
	@Interval NVARCHAR(50) = NULL,
	@Occurrences INT = NULL,
	@BillingName NVARCHAR(50) = NULL,
	@BillingAddress NVARCHAR(50) = NULL,
	@BillingCity NVARCHAR(50) = NULL,
	@BillingState NVARCHAR(50) = NULL,
	@BillingCountry NVARCHAR(50) = NULL,
	@BillingZip NVARCHAR(50) = NULL,
	@AcctNo VARCHAR(64) = NULL,
	@MaskAcctNo VARCHAR(50) = NULL,
	@ExpRoute VARCHAR(50) = NULL,
	@Active BIT = NULL,
	@Suspend SMALLINT = NULL,
	@NextPaymentDate DATE = NULL,
	@PayMethodID INT = NULL,
	@PayType VARCHAR(50) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_SubscriptionSC
	SET
		[CustomerID] = @CustomerID,
		[ProductID] = @ProductID,
		[CreateDate] = @CreateDate,
		[CancelDate] = @CancelDate,
		[SubStartDate] = @SubStartDate,
		[SubEndDate] = @SubEndDate,
		[TransID] = @TransID,
		[IPAddress] = @IPAddress,
		[CreatedBy] = @CreatedBy,
		[ModifiedBy] = @ModifiedBy,
		[DateModified] = @DateModified,
		[TabModuleId] = @TabModuleId,
		[OrderID] = @OrderID,
		[OrderDetailID] = @OrderDetailID,
		[Amount] = @Amount,
		[Interval] = @Interval,
		[Occurrences] = @Occurrences,
		[BillingName] = @BillingName,
		[BillingAddress] = @BillingAddress,
		[BillingCity] = @BillingCity,
		[BillingState] = @BillingState,
		[BillingCountry] = @BillingCountry,
		[BillingZip] = @BillingZip,
		[AcctNo] = @AcctNo,
		[MaskAcctNo] = @MaskAcctNo,
		[ExpRoute] = @ExpRoute,
		[Active] = @Active,
		[Suspend] = @Suspend,
		[NextPaymentDate] = @NextPaymentDate,
		[PayMethodID] = @PayMethodID,
		[PayType] = @PayType,
		[StoreID] = @StoreID
	WHERE
		[SubscriptionID] = @SubscriptionID
		AND [PortalID] = @PortalID
END
GO



/************************************************************/
/*****               End of Script                      *****/
/************************************************************/