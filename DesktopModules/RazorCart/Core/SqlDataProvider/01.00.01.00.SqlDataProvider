/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/



/************************************************************/
/*****               Create Tables                      *****/
/************************************************************/
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_BookingDisabledDates') AND type in (N'U'))
BEGIN
	CREATE TABLE {databaseOwner}{objectQualifier}Smith_BookingDisabledDates
	(
		[ID] [INT] IDENTITY(1,1) NOT NULL,
		[ProductID] [INT] NOT NULL,
		[Type] [VARCHAR](32) NULL,
		[DisableDay] [INT] NULL,
		[DisableDate] [DATETIME] NULL,
		[DisableDateRangeFrom] [DATETIME] NULL,
		[DisableDateRangeTo] [DATETIME] NULL,
		[EveryYear] [BIT] NULL,
		[Calendar] [VARCHAR](32) NULL,
		[CreatedDate] [DATETIME] NULL,
		[CreatedBy] [INT] NULL,
		CONSTRAINT [PK_{objectQualifier}Smith_BookingDisabledDates] PRIMARY KEY CLUSTERED
		(
			[ID] ASC
		)
	)
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_InvoiceTemplate') AND type in (N'U'))
BEGIN
	CREATE TABLE {databaseOwner}{objectQualifier}Smith_InvoiceTemplate
	(
		[TemplateID] [INT] IDENTITY(1,1) NOT NULL,
		[Name] [NVARCHAR](100) NOT NULL,
		[PortalID] [INT] NOT NULL,
		[LanguageLocale] [NVARCHAR](20) NOT NULL,
		[Template] [NTEXT],
		[StoreID] [INT] NULL,
		CONSTRAINT [PK_{objectQualifier}Smith_InvoiceTemplate] PRIMARY KEY CLUSTERED
		(
			[TemplateID] ASC
		)
	)
END
GO



/************************************************************/
/*****                  Alter Tables                    *****/
/************************************************************/
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_Products2') AND type in (N'U'))
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_Products2') AND name = N'BookingFields')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_Products2
		ADD
			[BookingFields] [VARCHAR](16)
	END
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_Products2') AND name = N'BookingDuration')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_Products2
		ADD
			[BookingDuration] [VARCHAR](32)
	END
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_Products2') AND name = N'MinBookingDuration')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_Products2
		ADD
			[MinBookingDuration] [INT]
	END
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_Products2') AND name = N'MaxBookingDuration')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_Products2
		ADD
			[MaxBookingDuration] [INT]
	END
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_Products2') AND name = N'FirstBookingDate')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_Products2
		ADD
			[FirstBookingDate] [INT]
	END
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_VendorBooking') AND type in (N'U'))
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_VendorBooking') AND name = N'IsConfirmed')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_VendorBooking
		ADD
			[IsConfirmed] [BIT]
	END
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_PaymentMethods') AND type in (N'U'))
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_PaymentMethods') AND name = N'GatewayCode')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_PaymentMethods
		ADD
			[GatewayCode] [NVARCHAR](64)
	END
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_PaymentMethods') AND name = N'GatewayUserID')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_PaymentMethods
		ADD
			[GatewayUserID] [NVARCHAR](64)
	END
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_PaymentMethods') AND name = N'GatewayPassword')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_PaymentMethods
		ADD
			[GatewayPassword] [NVARCHAR](64)
	END
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_PaymentMethods') AND name = N'GatewayKey')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_PaymentMethods
		ADD
			[GatewayKey] [NVARCHAR](128)
	END
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_ShipZone') AND type in (N'U'))
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_ShipZone') AND name = N'StoreID')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_ShipZone
		ADD
			[StoreID] [INT]
	END
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_ShipCategories') AND type in (N'U'))
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_ShipCategories') AND name = N'StoreID')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_ShipCategories
		ADD
			[StoreID] [INT]
	END
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_ShipFree') AND type in (N'U'))
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_ShipFree') AND name = N'StoreID')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_ShipFree
		ADD
			[StoreID] [INT]
	END
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_LicenseKey') AND type in (N'U'))
BEGIN
	IF EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_LicenseKey') AND name = N'LicenseKey')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_LicenseKey
		ALTER COLUMN
			[LicenseKey] [VARCHAR](MAX)
	END
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_StoreOrderDetails') AND type in (N'U'))
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_StoreOrderDetails') AND name = N'OtherDetailFields')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_StoreOrderDetails
		ADD
			[OtherDetailFields] [NVARCHAR](MAX)
	END
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_InvoiceTemplate') AND type in (N'U'))
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_InvoiceTemplate') AND name = N'TemplateID')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_InvoiceTemplate
		ADD
			[TemplateID] [INT] IDENTITY
	END
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_InvoiceTemplate') AND name = N'Template')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_InvoiceTemplate
		ADD
			[Template] [NTEXT]
	END
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_InvoiceTemplate') AND name = N'StoreID')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_InvoiceTemplate
		ADD
			[StoreID] [INT]
	END
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_Manufacturer') AND type in (N'U'))
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_Manufacturer') AND name = N'Share')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_Manufacturer
		ADD
			[Share] [BIT]
	END
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_Manufacturer') AND name = N'AccountNumber')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_Manufacturer
		ADD
			[AccountNumber] [VARCHAR](50)
	END
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_Manufacturer') AND name = N'RoutingNumber')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_Manufacturer
		ADD
			[RoutingNumber] [VARCHAR](50)
	END
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_Manufacturer') AND name = N'StoreID')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_Manufacturer
		ADD
			[StoreID] [INT]
	END
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_ProductReviews') AND type in (N'U'))
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_ProductReviews') AND name = N'Approved')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_ProductReviews
		ADD
			[Approved] [SMALLINT]
	END
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_ProductReviews') AND name = N'DateApproved')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_ProductReviews
		ADD
			[DateApproved] [DATETIME]
	END
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_Category') AND type in (N'U'))
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Smith_Category') AND name = N'BreadCrumb')
	BEGIN
		ALTER TABLE
			{databaseOwner}{objectQualifier}Smith_Category
		ADD
			[BreadCrumb] [NVARCHAR](200)
	END
END
GO



/************************************************************/
/*****                Drop Sprocs                       *****/
/************************************************************/
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateProductReview') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductReview
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetProductReviewByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetProductReviewByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListProductReviews') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListProductReviews
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListStoreReviewsByFilter') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListStoreReviewsByFilter
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateProductReview') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductReview
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteProductReview') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductReview
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListFeaturedProducts') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListFeaturedProducts
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateRelatedProduct') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateRelatedProduct
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListRelatedProducts') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListRelatedProducts
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ClearRelatedProducts') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ClearRelatedProducts
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListRecommendedProducts') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListRecommendedProducts
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListPortalBookableProducts') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListPortalBookableProducts
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateBookableProductDisabledDate') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateBookableProductDisabledDate
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteBookableProductDisabledDate') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteBookableProductDisabledDate
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListBookableProductDisabledDates') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListBookableProductDisabledDates
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateProductStock') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductStock
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateBookingHistoty') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateBookingHistoty
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ConfirmBookingHistoty') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ConfirmBookingHistoty
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListBookingHistotyByFilter') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListBookingHistotyByFilter
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateStore') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateStore
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetStoreByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetStoreByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreatePaymentMethod') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreatePaymentMethod
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetPaymentMethodByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetPaymentMethodByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetPaymentMethodByType') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetPaymentMethodByType
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdatePaymentMethod') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdatePaymentMethod
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeletePaymentMethod') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeletePaymentMethod
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListProductsByFilterAdmin') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListProductsByFilterAdmin
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateCustomShipMethod') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateCustomShipMethod
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetCustomShipMethodByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetCustomShipMethodByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListCustomShipMethods') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListCustomShipMethods
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateCustomShipMethod') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateCustomShipMethod
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteCustomShipMethod') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteCustomShipMethod
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateShippingZone') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateShippingZone
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetShippingZoneByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetShippingZoneByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListShippingZones') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListShippingZones
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateShippingZone') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateShippingZone
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteShippingZone') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteShippingZone
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateShippingCategory') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateShippingCategory
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListShippingCategories') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListShippingCategories
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteShippingCategory') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteShippingCategory
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ClearShippingCategories') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ClearShippingCategories
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateShippingWeightCost') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateShippingWeightCost
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetShippingWeightCostByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetShippingWeightCostByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListShippingWeightCosts') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListShippingWeightCosts
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateShippingWeightCost') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateShippingWeightCost
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteShippingWeightCost') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteShippingWeightCost
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateShippingQuantityCost') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateShippingQuantityCost
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetShippingQuantityCostByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetShippingQuantityCostByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListShippingQuantityCosts') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListShippingQuantityCosts
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateShippingQuantityCost') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateShippingQuantityCost
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteShippingQuantityCost') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteShippingQuantityCost
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateShippingAmountCost') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateShippingAmountCost
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetShippingAmountCostByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetShippingAmountCostByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListShippingAmountCosts') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListShippingAmountCosts
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateShippingAmountCost') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateShippingAmountCost
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteShippingAmountCost') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteShippingAmountCost
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateShippingPostalCost') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateShippingPostalCost
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetShippingPostalCostByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetShippingPostalCostByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListShippingPostalCosts') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListShippingPostalCosts
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateShippingPostalCost') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateShippingPostalCost
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteShippingPostalCost') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteShippingPostalCost
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateFreeShipping') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateFreeShipping
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetFreeShippingByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetFreeShippingByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListFreeShippings') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListFreeShippings
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateFreeShipping') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateFreeShipping
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteFreeShipping') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteFreeShipping
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListTaxesByFilter') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListTaxesByFilter
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ClearTaxTable') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ClearTaxTable
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateRegionalTax') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateRegionalTax
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetRegionalTaxByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetRegionalTaxByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListRegionalTaxesByFilter') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListRegionalTaxesByFilter
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateRegionalTax') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateRegionalTax
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteRegionalTax') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteRegionalTax
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateLicenseKey') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateLicenseKey
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteLicenseKey') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteLicenseKey
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateCoupon') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateCoupon
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetCouponByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetCouponByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListCouponsByFilter') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListCouponsByFilter
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateCoupon') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateCoupon
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteCoupon') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteCoupon
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListCustomersByFilter') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListCustomersByFilter
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteCustomer') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteCustomer
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListOrdersByFilter') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListOrdersByFilter
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateOrder') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateOrder
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteOrder') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteOrder
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListPaymentsByOrderID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListPaymentsByOrderID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateOrderNote') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateOrderNote
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetOrderNoteByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetOrderNoteByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListOrderNotes') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListOrderNotes
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateOrderNote') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateOrderNote
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteOrderNote') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteOrderNote
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteOrderDetail') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteOrderDetail
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetPaymentByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetPaymentByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListPaymentsByFilter') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListPaymentsByFilter
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeletePayment') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeletePayment
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateOrderDiscount') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateOrderDiscount
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetOrderDiscountByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetOrderDiscountByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListOrderDiscounts') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListOrderDiscounts
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateOrderDiscount') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateOrderDiscount
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteOrderDiscount') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteOrderDiscount
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreatePriceClass') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreatePriceClass
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetPriceClassByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetPriceClassByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListPriceClasses') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListPriceClasses
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdatePriceClass') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdatePriceClass
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeletePriceClass') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeletePriceClass
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetOrdersStateSummary') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetOrdersStateSummary
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetOrdersRevenueStatistics') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetOrdersRevenueStatistics
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetTopProductsRevenue') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetTopProductsRevenue
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetTopStoreNotifications') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetTopStoreNotifications
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateEmailTemplate') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateEmailTemplate
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetEmailTemplateByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetEmailTemplateByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetEmailTemplateByName') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetEmailTemplateByName
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListEmailTemplates') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListEmailTemplates
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateEmailTemplate') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateEmailTemplate
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteEmailTemplate') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteEmailTemplate
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateInvoiceTemplate') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateInvoiceTemplate
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetInvoiceTemplateByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetInvoiceTemplateByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetInvoiceTemplateByName') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetInvoiceTemplateByName
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListInvoiceTemplates') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListInvoiceTemplates
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateInvoiceTemplate') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateInvoiceTemplate
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteInvoiceTemplate') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteInvoiceTemplate
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateCategory') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateCategory
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetCategoryByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetCategoryByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateCategory') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateCategory
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteCategory') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteCategory
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateManufacturer') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateManufacturer
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetManufacturerByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetManufacturerByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListManufacturers') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListManufacturers
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateManufacturer') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateManufacturer
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteManufacturer') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteManufacturer
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateProductCategory') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductCategory
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListProductCategories') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListProductCategories
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListProductStoreCategories') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListProductStoreCategories
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteProductCategory') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductCategory
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ClearProductCategories') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ClearProductCategories
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateProduct') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProduct
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateProduct') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProduct
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteProduct') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProduct
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateProductII') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductII
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateProductII') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductII
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteProductII') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductII
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateProductImage') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductImage
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateProductImage') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductImage
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteProductImage') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductImage
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateProductVariantGroup') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductVariantGroup
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetProductVariantGroupByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetProductVariantGroupByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateProductVariantGroup') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductVariantGroup
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteProductVariantGroup') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductVariantGroup
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateProductVariant') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductVariant
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateProductVariant') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductVariant
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteProductVariant') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductVariant
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateVariantConditionalGroup') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateVariantConditionalGroup
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ClearVariantConditionalGroups') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ClearVariantConditionalGroups
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateProductQuantityDiscount') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductQuantityDiscount
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetProductQuantityDiscountByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetProductQuantityDiscountByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateProductQuantityDiscount') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductQuantityDiscount
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteProductQuantityDiscount') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductQuantityDiscount
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_CreateProductRoleDiscount') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductRoleDiscount
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetProductRoleDiscountByID') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetProductRoleDiscountByID
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_UpdateProductRoleDiscount') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductRoleDiscount
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_DeleteProductRoleDiscount') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductRoleDiscount
GO



/************************************************************/
/*****               Create Sprocs                      *****/
/************************************************************/
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductReview
	@ProductID INT = NULL,
	@DNNUserName VARCHAR(50) = NULL,
	@Rate DECIMAL(4,2) = NULL,
	@Comments VARCHAR(2000) = NULL,
	@NickName VARCHAR(50) = NULL
AS
BEGIN
	DECLARE @ReviewID [INT]

	SELECT
		@ReviewID = PR.[ReviewID]
	FROM
		{databaseOwner}{objectQualifier}Smith_ProductReviews PR
	WHERE
		PR.[ProductID] = @ProductID
		AND (
			PR.[DNNUserName] = @DNNUserName
			OR (
				PR.[NickName] = @NickName AND (PR.[DNNUserName] IS NULL OR PR.[DNNUserName] = '')
			)
		)

	IF @ReviewID IS NOT NULL
		BEGIN
			UPDATE
				{databaseOwner}{objectQualifier}Smith_ProductReviews
			SET
				[Rate] = @Rate,
				[Comments] = @Comments,
				[NickName] = @NickName,
				[ReviewDate] = GETDATE(),
				[Approved] = 0,
				[DateApproved] = NULL
			WHERE
				[ReviewID] = @ReviewID
			SELECT @ReviewID
		END
	ELSE
		BEGIN
			INSERT INTO {databaseOwner}{objectQualifier}Smith_ProductReviews
				([ProductID]
				,[DNNUserName]
				,[Rate]
				,[Comments]
				,[NickName]
				,[ReviewDate]
				,[Approved]
				,[DateApproved])
			 VALUES
				(@ProductID
				,@DNNUserName
				,@Rate
				,@Comments
				,@NickName
				,GETDATE()
				,0
				,NULL)
			SELECT SCOPE_IDENTITY()
		END
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetProductReviewByID
	@ReviewID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		PR.*
	FROM
		{databaseOwner}{objectQualifier}Smith_ProductReviews PR
	INNER JOIN
		{databaseOwner}{objectQualifier}Smith_Products P
	ON
		P.[ProductID] = PR.[ProductID]
	WHERE
		PR.[ReviewID] = @ReviewID
		AND P.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListProductReviews
	@ProductID INT = NULL
AS
BEGIN
	SELECT
		PR.*
	FROM
		{databaseOwner}{objectQualifier}Smith_ProductReviews PR
	WHERE
		PR.[ProductID] = @ProductID
		AND PR.[Approved] <> 0
	ORDER BY
		PR.[ReviewDate] DESC
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListStoreReviewsByFilter
	@PageNumber INT = NULL,
	@PageSize INT = NULL,
	@OrderColumn VARCHAR(128) = NULL,
	@OrderDirection VARCHAR(4) = NULL,
	@SearchValue NVARCHAR(256) = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @PageRecordStart INT
	DECLARE @PageRecordEnd INT

	SET @PageRecordStart = ((@PageNumber - 1) * @PageSize) + 1
	SET @PageRecordEnd = @PageNumber * @PageSize

	;WITH [ReviewsPage] AS
	(
		SELECT
			(
				CASE
					WHEN @OrderColumn = 'ProductID' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY PR.[ProductID] ASC)
					WHEN @OrderColumn = 'ProductID' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY PR.[ProductID] DESC)
					WHEN @OrderColumn = 'DNNUserName' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY PR.[DNNUserName] ASC)
					WHEN @OrderColumn = 'DNNUserName' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY PR.[DNNUserName] DESC)
					WHEN @OrderColumn = 'Rate' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY PR.[Rate] ASC)
					WHEN @OrderColumn = 'Rate' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY PR.[Rate] DESC)
					WHEN @OrderColumn = 'NickName' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY PR.[NickName] ASC)
					WHEN @OrderColumn = 'NickName' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY PR.[NickName] DESC)
					WHEN @OrderColumn = 'ReviewDate' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY PR.[ReviewDate] ASC)
					WHEN @OrderColumn = 'ReviewDate' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY PR.[ReviewDate] DESC)
					WHEN @OrderColumn = 'Approved' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY PR.[Approved] ASC)
					WHEN @OrderColumn = 'Approved' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY PR.[Approved] DESC)
					WHEN @OrderColumn = 'DateApproved' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY PR.[DateApproved] ASC)
					WHEN @OrderColumn = 'DateApproved' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY PR.[DateApproved] DESC)
				ELSE ROW_NUMBER() OVER (ORDER BY PR.[ReviewID] ASC)
				END
			) AS [RowNo], PR.*
		FROM
			{databaseOwner}{objectQualifier}Smith_ProductReviews PR
		INNER JOIN
			{databaseOwner}{objectQualifier}Smith_Products P
		ON
			P.[ProductID] = PR.[ProductID]
		WHERE
			(P.[StoreID] = @StoreID OR @StoreID = -1)
			AND P.[PortalID] = @PortalID
			AND (
				PR.[DNNUserName] LIKE '%' + @SearchValue + '%'
				OR PR.[Comments] LIKE '%' + @SearchValue + '%'
				OR PR.[NickName] LIKE '%' + @SearchValue + '%'
				OR P.[ModelNumber] LIKE '%' + @SearchValue + '%'
				OR P.[ModelName] LIKE '%' + @SearchValue + '%'
				OR P.[Summary] LIKE '%' + @SearchValue + '%'
				OR P.[Description] LIKE '%' + @SearchValue + '%'
			)
	)
	SELECT
		*,
		TotalRecords = (
			SELECT COUNT(*) FROM [ReviewsPage]
		),
		MoreRecords = (
			SELECT COUNT(*) FROM [ReviewsPage]
			WHERE [RowNo] > @PageRecordEnd
		)
	FROM
		[ReviewsPage]
	WHERE
		[RowNo] BETWEEN @PageRecordStart AND @PageRecordEnd
	ORDER BY
		[RowNo]
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductReview
	@ReviewID INT = NULL,
	@ProductID INT = NULL,
	@DNNUserName VARCHAR(50) = NULL,
	@Rate DECIMAL(4,2) = NULL,
	@Comments VARCHAR(2000) = NULL,
	@NickName VARCHAR(50) = NULL,
	@ReviewDate DATETIME = NULL,
	@Approved SMALLINT = NULL,
	@DateApproved DATETIME = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_ProductReviews
	SET
		[ProductID] = @ProductID,
		[DNNUserName] = @DNNUserName,
		[Rate] = @Rate,
		[Comments] = @Comments,
		[NickName] = @NickName,
		[ReviewDate] = @ReviewDate,
		[Approved] = @Approved,
		[DateApproved] = @DateApproved
	WHERE
		[ReviewID] = @ReviewID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductReview
	@ReviewID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE PR FROM
		{databaseOwner}{objectQualifier}Smith_ProductReviews PR
	INNER JOIN
		{databaseOwner}{objectQualifier}Smith_Products P
	ON
		P.[ProductID] = PR.[ProductID]
	WHERE
		PR.[ReviewID] = @ReviewID
		AND P.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListFeaturedProducts
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		P.*, I.[ThumbImage], I.[LargeImage], I.[ZoomImage], V.[HasVariants]
	FROM
		{databaseOwner}{objectQualifier}Smith_Products P
	OUTER APPLY
	(
		SELECT TOP 1
			PI.*
		FROM
			{databaseOwner}{objectQualifier}Smith_ProductImages PI
		WHERE
			PI.[ProductID] = P.[ProductID]
		ORDER BY
			PI.[SortOrder]
	) I
	CROSS APPLY
	(
		SELECT CASE WHEN EXISTS
		(
			SELECT
				PV.[VariantID]
			FROM
				{databaseOwner}{objectQualifier}Smith_ProductVariant PV
			WHERE
				PV.[ProductID] = P.[ProductID]
		)
		THEN
			CAST(1 AS BIT)
		ELSE
			CAST(0 AS BIT)
		END
		AS [HasVariants]
	) V
	WHERE
		P.[Featured] = 1
		AND (P.[StoreID] = @StoreID OR P.[TabModuleId] = @StoreID OR P.[Share] = 1)
		AND P.[PortalID] = @PortalID
		AND (
			P.[LogicallyDeleted] <> 1
			AND P.[Archived] <> 1
			AND P.[HideProduct] <> 1
		)
	ORDER BY
		P.[SortOrder] ASC
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateRelatedProduct
	@ProductID INT = NULL,
	@RelatedProductID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_RelatedProducts
		([ProductID]
		,[RelatedProductID])
	VALUES
		(@ProductID
		,@RelatedProductID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListRelatedProducts
	@ProductID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		P.*, I.[ThumbImage], I.[LargeImage], I.[ZoomImage], V.[HasVariants]
	FROM
		{databaseOwner}{objectQualifier}Smith_Products P
	INNER JOIN
		{databaseOwner}{objectQualifier}Smith_RelatedProducts RP
	ON
		P.[ProductID] = RP.[RelatedProductID]
	OUTER APPLY
	(
		SELECT TOP 1
			PI.*
		FROM
			{databaseOwner}{objectQualifier}Smith_ProductImages PI
		WHERE
			PI.[ProductID] = P.[ProductID]
		ORDER BY
			PI.[SortOrder]
	) I
	CROSS APPLY
	(
		SELECT CASE WHEN EXISTS
		(
			SELECT
				PV.[VariantID]
			FROM
				{databaseOwner}{objectQualifier}Smith_ProductVariant PV
			WHERE
				PV.[ProductID] = P.[ProductID]
		)
		THEN
			CAST(1 AS BIT)
		ELSE
			CAST(0 AS BIT)
		END
		AS [HasVariants]
	) V
	WHERE
		RP.[ProductID] = @ProductID
		AND P.[PortalID] = @PortalID
		AND (
			P.[LogicallyDeleted] <> 1
			AND P.[Archived] <> 1
			AND P.[HideProduct] <> 1
		)
	ORDER BY
		P.[SortOrder] ASC
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ClearRelatedProducts
	@ProductID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE RP FROM
		{databaseOwner}{objectQualifier}Smith_RelatedProducts RP
	INNER JOIN
		{databaseOwner}{objectQualifier}Smith_Products P
	ON
		P.[ProductID] = RP.[ProductID]
	WHERE
		RP.[ProductID] = @ProductID
		AND P.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListRecommendedProducts
	@ProductID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	;WITH Phase1 AS
	(
		SELECT
			DISTINCT OD.[ProductID], COUNT(OD.[ProductID]) AS [PurchaseCount]
		FROM
			{databaseOwner}{objectQualifier}Smith_StoreOrderDetails OD
		WHERE
			OD.[OrderID] IN
			(
				SELECT
					DISTINCT OD.[OrderID]
				FROM
					{databaseOwner}{objectQualifier}Smith_StoreOrderDetails OD
				WHERE
					OD.[ProductID] = @ProductID
					AND OD.[PortalID] = @PortalID
				GROUP BY
					OD.[OrderID]
			)
			AND OD.[ProductID] <> @ProductID
		GROUP BY
			OD.[ProductID]
		UNION
		(
			SELECT
				RP.[RelatedProductID], 0
			FROM
				{databaseOwner}{objectQualifier}Smith_RelatedProducts RP
			WHERE
				RP.[ProductID] = @ProductID
		)
	),
	Phase2 AS
	(
		SELECT
			MAX(P1.[ProductID]) AS [ProductID], SUM(P1.[PurchaseCount]) AS [PurchaseCount], MAX(R.[Rate]) AS [Rate]
		FROM
			Phase1 P1
		CROSS APPLY
		(
			SELECT
				CONVERT(DECIMAL(10,2), ISNULL(SUM(PR.[Rate]) / COUNT(PR.[Rate]), 0)) AS [Rate]
			FROM
				{databaseOwner}{objectQualifier}Smith_ProductReviews PR
			WHERE
				PR.[ProductID] = P1.[ProductID]
		) R
		GROUP BY
			P1.[ProductID]
	),
	Phase3 AS
	(
		SELECT
			P.*, P2.[PurchaseCount], P2.[Rate], I.[ThumbImage], I.[LargeImage], I.[ZoomImage], V.[HasVariants]
		FROM
			{databaseOwner}{objectQualifier}Smith_Products P
		INNER JOIN
			Phase2 P2
		ON
			P.[ProductID] = P2.[ProductID]
		OUTER APPLY
		(
			SELECT TOP 1
				PI.*
			FROM
				{databaseOwner}{objectQualifier}Smith_ProductImages PI
			WHERE
				PI.[ProductID] = P.[ProductID]
			ORDER BY
				PI.[SortOrder]
		) I
		CROSS APPLY
		(
			SELECT CASE WHEN EXISTS
			(
				SELECT
					PV.[VariantID]
				FROM
					{databaseOwner}{objectQualifier}Smith_ProductVariant PV
				WHERE
					PV.[ProductID] = P.[ProductID]
			)
			THEN
				CAST(1 AS BIT)
			ELSE
				CAST(0 AS BIT)
			END
			AS [HasVariants]
		) V
	)
	SELECT
		P3.*
	FROM
		Phase3 P3
	ORDER BY
		P3.[PurchaseCount] DESC, P3.[Rate] DESC
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListPortalBookableProducts
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		P.*, I.[ThumbImage], I.[LargeImage], I.[ZoomImage]
	FROM
		{databaseOwner}{objectQualifier}Smith_Products P
	CROSS APPLY
	(
		SELECT TOP 1
			[ThumbImage], [LargeImage], [ZoomImage]
		FROM
			{databaseOwner}{objectQualifier}Smith_ProductImages
		WHERE
			[ProductID] = P.[ProductID]
		ORDER BY
			[SortOrder] ASC
		UNION ALL SELECT
			NULL, NULL, NULL
		WHERE
		(
			SELECT
				COUNT(*)
			FROM
				{databaseOwner}{objectQualifier}Smith_ProductImages
			WHERE
				[ProductID] = P.[ProductID]
		) = 0
	) I
	WHERE
		(P.[LogicallyDeleted] <> 1 AND P.[Archived] <> 1 AND P.[HideProduct] <> 1)
		AND P.[PortalID] = @PortalID
		AND P.[Booking] = 1
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateBookableProductDisabledDate
	@ProductID INT = NULL,
	@Type VARCHAR(50) = NULL,
	@DisableDay INT = NULL,
	@DisableDate DATETIME = NULL,
	@DisableDateRangeFrom DATETIME = NULL,
	@DisableDateRangeTo DATETIME = NULL,
	@EveryYear BIT = NULL,
	@Calendar VARCHAR(50) = NULL,
	@CreatedBy INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_BookingDisabledDates
		([ProductID]
		,[Type]
		,[DisableDay]
		,[DisableDate]
		,[DisableDateRangeFrom]
		,[DisableDateRangeTo]
		,[EveryYear]
		,[Calendar]
		,[CreatedDate]
		,[CreatedBy])
	VALUES
		(@ProductID
		,@Type
		,@DisableDay
		,@DisableDate
		,@DisableDateRangeFrom
		,@DisableDateRangeTo
		,@EveryYear
		,@Calendar
		,GETDATE()
		,@CreatedBy)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteBookableProductDisabledDate
	@ID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_BookingDisabledDates
	WHERE
		[ID] = @ID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListBookableProductDisabledDates
	@ProductID INT = NULL
AS
BEGIN
	SELECT
		BDD.*
	FROM
		{databaseOwner}{objectQualifier}Smith_BookingDisabledDates BDD
	WHERE
		BDD.[ProductID] = @ProductID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductStock
	@ProductID INT = NULL,
	@OrderQuantity  INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_Products
	SET
		[QuantityOnHand] += @OrderQuantity
	WHERE
		[ProductID] = @ProductID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateBookingHistoty
	@VendorProductID INT = NULL,
	@OrderDetailID INT = NULL,
	@CustomerID INT = NULL,
	@StartDate DATETIME = NULL,
	@EndDate DATETIME = NULL,
	@BookQtyReserved INT = NULL,
	@BookQtyPurchased INT = NULL,
	@AllDay BIT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_VendorBooking
		([VendorProductID]
		,[OrderDetailID]
		,[CustomerID]
		,[StartDate]
		,[EndDate]
		,[BookQtyReserved]
		,[BookQtyPurchased]
		,[AllDay]
		,[PortalID])
	VALUES
		(@VendorProductID
		,@OrderDetailID
		,@CustomerID
		,@StartDate
		,@EndDate
		,@BookQtyReserved
		,@BookQtyPurchased
		,@AllDay
		,@PortalID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ConfirmBookingHistoty
	@VendorProductID INT = NULL,
	@OrderDetailID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_VendorBooking
	SET
		[IsConfirmed] = 1
	WHERE
		[VendorProductID] = @VendorProductID
		AND [OrderDetailID] = @OrderDetailID
		AND [PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListBookingHistotyByFilter
	@VendorProductID INT = NULL,
	@StartDate DATETIME = NULL,
	@EndDate DATETIME = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		VB.*
	FROM
		{databaseOwner}{objectQualifier}Smith_VendorBooking VB
	WHERE
		VB.[VendorProductID] = @VendorProductID
		AND
		(
			VB.[StartDate] >= @StartDate
			AND VB.[EndDate] <= @EndDate
		)
		AND VB.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateStore
	@StoreName NVARCHAR(150) = NULL,
	@CreatedBy NVARCHAR(150) = NULL,
	@PortalID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_Stores
		([StoreName]
		,[CreatedDate]
		,[CreatedBy]
		,[PortalID])
	VALUES
		(@StoreName
		,GETDATE()
		,@CreatedBy
		,@PortalID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetStoreByID
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		S.*
	FROM
		{databaseOwner}{objectQualifier}Smith_Stores S
	WHERE
		S.[StoreID] = @StoreID
		AND S.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreatePaymentMethod
	@PayZoneID INT = NULL,
	@Name NVARCHAR(100) = NULL,
	@Roles VARCHAR(150) = NULL,
	@SurchargeAmount DECIMAL(18,2) = NULL,
	@SurchargePercentage DECIMAL(18,2) = NULL,
	@Step2Label1 NVARCHAR(200) = NULL,
	@Step2Label2 NVARCHAR(200) = NULL,
	@EmailMessage NVARCHAR(500) = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@Type VARCHAR(150) = NULL,
	@SortOrder INT = NULL,
	@PriceFrom DECIMAL(18,2) = NULL,
	@PriceTo DECIMAL(18,2) = NULL,
	@MonthlyLimit DECIMAL(18,2) = NULL,
	@Active BIT = NULL,
	@DepositRequired BIT = NULL,
	@DepositPercent DECIMAL(18,2) = NULL,
	@Share BIT = NULL,
	@StoreID INT = NULL,
	@GatewayCode NVARCHAR(64) = NULL,
	@GatewayUserID NVARCHAR(64) = NULL,
	@GatewayPassword NVARCHAR(64) = NULL,
	@GatewayKey NVARCHAR(128) = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_PaymentMethods
		([PayZoneID]
		,[Name]
		,[Roles]
		,[SurchargeAmount]
		,[SurchargePercentage]
		,[Step2Label1]
		,[Step2Label2]
		,[EmailMessage]
		,[TabModuleId]
		,[PortalId]
		,[Type]
		,[SortOrder]
		,[PriceFrom]
		,[PriceTo]
		,[MonthlyLimit]
		,[Active]
		,[DepositRequired]
		,[DepositPercent]
		,[Share]
		,[StoreID]
		,[GatewayCode]
		,[GatewayUserID]
		,[GatewayPassword]
		,[GatewayKey])
	VALUES
		(@PayZoneID
		,@Name
		,@Roles
		,@SurchargeAmount
		,@SurchargePercentage
		,@Step2Label1
		,@Step2Label2
		,@EmailMessage
		,@TabModuleId
		,@PortalID
		,@Type
		,@SortOrder
		,@PriceFrom
		,@PriceTo
		,@MonthlyLimit
		,@Active
		,@DepositRequired
		,@DepositPercent
		,@Share
		,@StoreID
		,@GatewayCode
		,@GatewayUserID
		,@GatewayPassword
		,@GatewayKey)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetPaymentMethodByID
	@PayMethodID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		PM.*
	FROM
		{databaseOwner}{objectQualifier}Smith_PaymentMethods PM
	WHERE
		PM.[PayMethodID] = @PayMethodID
		AND PM.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetPaymentMethodByType
	@Type VARCHAR(100) = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		PM.*
	FROM
		{databaseOwner}{objectQualifier}Smith_PaymentMethods PM
	WHERE
		PM.[Type] = @Type
		AND (PM.[StoreID] = @StoreID OR PM.[TabModuleId] = @StoreID OR PM.[Share] = 1)
		AND PM.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdatePaymentMethod
	@PayMethodID INT = NULL,
	@PayZoneID INT = NULL,
	@Name NVARCHAR(100) = NULL,
	@Roles VARCHAR(150) = NULL,
	@SurchargeAmount DECIMAL(18,2) = NULL,
	@SurchargePercentage DECIMAL(18,2) = NULL,
	@Step2Label1 NVARCHAR(200) = NULL,
	@Step2Label2 NVARCHAR(200) = NULL,
	@EmailMessage NVARCHAR(500) = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@Type VARCHAR(150) = NULL,
	@SortOrder INT = NULL,
	@PriceFrom DECIMAL(18,2) = NULL,
	@PriceTo DECIMAL(18,2) = NULL,
	@MonthlyLimit DECIMAL(18,2) = NULL,
	@Active BIT = NULL,
	@DepositRequired BIT = NULL,
	@DepositPercent DECIMAL(18,2) = NULL,
	@Share BIT = NULL,
	@StoreID INT = NULL,
	@GatewayCode NVARCHAR(64) = NULL,
	@GatewayUserID NVARCHAR(64) = NULL,
	@GatewayPassword NVARCHAR(64) = NULL,
	@GatewayKey NVARCHAR(128) = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_PaymentMethods
	SET
		[PayZoneID] = @PayZoneID,
		[Name] = @Name,
		[Roles] = @Roles,
		[SurchargeAmount] = @SurchargeAmount,
		[SurchargePercentage] = @SurchargePercentage,
		[Step2Label1] = @Step2Label1,
		[Step2Label2] = @Step2Label2,
		[EmailMessage] = @EmailMessage,
		[TabModuleId] = @TabModuleId,
		[PortalId] = @PortalID,
		[Type] = @Type,
		[SortOrder] = @SortOrder,
		[PriceFrom] = @PriceFrom,
		[PriceTo] = @PriceTo,
		[MonthlyLimit] = @MonthlyLimit,
		[Active] = @Active,
		[DepositRequired] = @DepositRequired,
		[DepositPercent] = @DepositPercent,
		[Share] = @Share,
		[StoreID] = @StoreID,
		[GatewayCode] = @GatewayCode,
		[GatewayUserID] = @GatewayUserID,
		[GatewayPassword] = @GatewayPassword,
		[GatewayKey] = @GatewayKey
	WHERE
		[PayMethodID] = @PayMethodID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeletePaymentMethod
	@PayMethodID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_PaymentMethods
	WHERE
		[PayMethodID] = @PayMethodID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListProductsByFilterAdmin
	@PageNumber INT = NULL,
	@PageSize INT = NULL,
	@SortExpression NVARCHAR(128) = NULL,
	@SearchText NVARCHAR(100) = NULL,
	@MinPrice MONEY,
	@MaxPrice MONEY,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DECLARE @PageRecordStart INT = ((@PageNumber - 1 ) * @PageSize) + 1
	DECLARE @PageRecordEnd INT = @PageNumber * @PageSize

	;WITH [Products_Page1] AS
	(
		SELECT
			P.*, I.[ThumbImage], I.[LargeImage], I.[ZoomImage], PV.[HasVariants]
		FROM
			{databaseOwner}{objectQualifier}Smith_Products P
		OUTER APPLY
		(
			SELECT TOP 1 IMG.*
			FROM {databaseOwner}{objectQualifier}Smith_ProductImages IMG
			WHERE IMG.[ProductID] = P.[ProductID]
			ORDER BY IMG.[SortOrder]
		) I
		CROSS APPLY
		(
			SELECT CASE WHEN EXISTS
			(
				SELECT PVT.[VariantID]
				FROM {databaseOwner}{objectQualifier}Smith_ProductVariant PVT
				WHERE PVT.[ProductID] = P.[ProductID]
			)
			THEN
				CAST(1 AS BIT)
			ELSE
				CAST(0 AS BIT)
			END
			AS [HasVariants]
		) PV
		WHERE
			P.[PortalID] = @PortalID
			AND (P.[StoreID] = @StoreID OR P.[TabModuleId] = @StoreID OR P.[Share] = 1)
			AND P.[LogicallyDeleted] <> 1
			AND (P.[UnitCost] >= @MinPrice OR @MinPrice = -1)
			AND (P.[UnitCost] <= @MaxPrice OR @MaxPrice = -1)
			AND (
				P.[ModelName] LIKE '%' + @SearchText + '%'
				OR P.[ModelNumber] LIKE '%' + @SearchText + '%'
				OR P.[Description] Like '%' + @SearchText + '%'
				OR P.[Summary] Like '%' + @SearchText + '%'
			)
	)
	,[Products_Page2] AS
	(
	SELECT
		P1.*,
		(
			CASE
				WHEN @SortExpression = 'ProductID-ASC' THEN ROW_NUMBER() OVER (ORDER BY P1.[ProductID] ASC)
				WHEN @SortExpression = 'ProductID-DESC' THEN ROW_NUMBER() OVER (ORDER BY P1.[ProductID] DESC)
				WHEN @SortExpression = 'SortOrder-ASC' THEN ROW_NUMBER() OVER (ORDER BY P1.[SortOrder] ASC)
				WHEN @SortExpression = 'SortOrder-DESC' THEN ROW_NUMBER() OVER (ORDER BY P1.[SortOrder] DESC)
				WHEN @SortExpression = 'CreatedDate-ASC' THEN ROW_NUMBER() OVER (ORDER BY P1.[CreatedDate] ASC)
				WHEN @SortExpression = 'CreatedDate-DESC' THEN ROW_NUMBER() OVER (ORDER BY P1.[CreatedDate] DESC)
				WHEN @SortExpression = 'UnitCost-ASC' THEN ROW_NUMBER() OVER (ORDER BY P1.[UnitCost] ASC)
				WHEN @SortExpression = 'UnitCost-DESC' THEN ROW_NUMBER() OVER (ORDER BY P1.[UnitCost] DESC)
				WHEN @SortExpression = 'ModelName-ASC' THEN ROW_NUMBER() OVER (ORDER BY P1.[ModelName] ASC)
				WHEN @SortExpression = 'ModelName-DESC' THEN ROW_NUMBER() OVER (ORDER BY P1.[ModelName] DESC)
				WHEN @SortExpression = 'ModelNumber-ASC' THEN ROW_NUMBER() OVER (ORDER BY P1.[ModelNumber] ASC)
				WHEN @SortExpression = 'ModelNumber-DESC' THEN ROW_NUMBER() OVER (ORDER BY P1.[ModelNumber] DESC)
				WHEN @SortExpression = 'Manufacturer-ASC' THEN ROW_NUMBER() OVER (ORDER BY P1.[Manufacturer] ASC)
				WHEN @SortExpression = 'Manufacturer-DESC' THEN ROW_NUMBER() OVER (ORDER BY P1.[Manufacturer] DESC)
				WHEN @SortExpression = 'QuantityOnHand-ASC' THEN ROW_NUMBER() OVER (ORDER BY P1.[QuantityOnHand] ASC)
				WHEN @SortExpression = 'QuantityOnHand-DESC' THEN ROW_NUMBER() OVER (ORDER BY P1.[QuantityOnHand] DESC)
			ELSE ROW_NUMBER() OVER (ORDER BY P1.[SortOrder] ASC)
			END
		) AS [RowNo]
		FROM
			[Products_Page1] P1
	)
	SELECT
		*,
		TotalRecords = (
			SELECT COUNT(*)
			FROM [Products_Page2]
		),
		MoreRecords = (
			SELECT COUNT(*)
			FROM [Products_Page2]
			WHERE [RowNo] > @PageRecordEnd
		)
	FROM
		[Products_Page2]
	WHERE
		[RowNo] BETWEEN @PageRecordStart AND @PageRecordEnd
	ORDER BY
		[RowNo]
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateCustomShipMethod
	@ShipMethodName VARCHAR(50) = NULL,
	@ShipMethodAmount DECIMAL(18,2) = NULL,
	@Share BIT = NULL,
	@TabModuleId INT = NULL,
	@SortOrder INT = NULL,
	@PortalID INT = NULL,
	@SurchargePercentage DECIMAL(18,2) = NULL,
	@SurchargeAmount DECIMAL(18,2) = NULL,
	@RoleID INT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_ShipMethods
		([ShipMethodName]
		,[ShipMethodAmount]
		,[Share]
		,[TabModuleId]
		,[SortOrder]
		,[PortalID]
		,[SurchargePercentage]
		,[SurchargeAmount]
		,[RoleID]
		,[StoreID])
	VALUES
		(@ShipMethodName
		,@ShipMethodAmount
		,@Share
		,@TabModuleId
		,@SortOrder
		,@PortalID
		,@SurchargePercentage
		,@SurchargeAmount
		,@RoleID
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetCustomShipMethodByID
	@ShipMethodID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		SM.*
	FROM
		{databaseOwner}{objectQualifier}Smith_ShipMethods SM
	WHERE
		SM.[ShipMethodID] = @ShipMethodID
		AND SM.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListCustomShipMethods
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		SM.*
	FROM
		{databaseOwner}{objectQualifier}Smith_ShipMethods SM
	WHERE
		(SM.[StoreID] = @StoreID OR SM.[TabModuleId] = @StoreID OR SM.[Share] = 1)
		AND SM.[PortalID] = @PortalID
	ORDER BY
		SM.[SortOrder] ASC
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateCustomShipMethod
	@ShipMethodID INT = NULL,
	@ShipMethodName NVARCHAR(50) = NULL,
	@ShipMethodAmount DECIMAL(18,2) = NULL,
	@Share BIT = NULL,
	@TabModuleId INT = NULL,
	@SortOrder INT = NULL,
	@PortalID INT = NULL,
	@SurchargePercentage DECIMAL(18,2) = NULL,
	@SurchargeAmount DECIMAL(18,2) = NULL,
	@RoleID INT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_ShipMethods
	SET
		[ShipMethodName] = @ShipMethodName,
		[ShipMethodAmount] = @ShipMethodAmount,
		[Share] = @Share,
		[TabModuleId] = @TabModuleId,
		[SortOrder] = @SortOrder,
		[PortalID] = @PortalID,
		[SurchargePercentage] = @SurchargePercentage,
		[SurchargeAmount] = @SurchargeAmount,
		[RoleID] = @RoleID,
		[StoreID] = @StoreID
	WHERE
		[ShipMethodID] = @ShipMethodID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteCustomShipMethod
	@ShipMethodID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_ShipMethods
	WHERE
		[ShipMethodID] = @ShipMethodID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateShippingZone
	@ZoneName VARCHAR(200) = NULL,
	@Country VARCHAR(1000) = NULL,
	@State VARCHAR(500) = NULL,
	@Price DECIMAL(18,2) = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@FreeShipOverAmount DECIMAL(18,2) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_ShipZone
		([ZoneName]
		,[Country]
		,[State]
		,[Price]
		,[TabModuleId]
		,[PortalId]
		,[FreeShipOverAmount]
		,[StoreID])
	VALUES
		(@ZoneName
		,@Country
		,@State
		,@Price
		,@TabModuleId
		,@PortalID
		,@FreeShipOverAmount
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetShippingZoneByID
	@ZoneID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		SZ.*
	FROM
		{databaseOwner}{objectQualifier}Smith_ShipZone SZ
	WHERE
		SZ.[ZoneID] = @ZoneID
		AND SZ.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListShippingZones
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		SZ.*
	FROM
		{databaseOwner}{objectQualifier}Smith_ShipZone SZ
	WHERE
		(SZ.[StoreID] = @StoreID OR SZ.[TabModuleId] = @StoreID)
		AND SZ.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateShippingZone
	@ZoneID INT = NULL,
	@ZoneName VARCHAR(200) = NULL,
	@Country VARCHAR(1000) = NULL,
	@State VARCHAR(500) = NULL,
	@Price DECIMAL(18,2) = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@FreeShipOverAmount DECIMAL(18,2) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_ShipZone
	SET
		[ZoneName] = @ZoneName,
		[Country] = @Country,
		[State] = @State,
		[Price] = @Price,
		[TabModuleId] = @TabModuleId,
		[PortalID] = @PortalID,
		[FreeShipOverAmount] = @FreeShipOverAmount,
		[StoreID] = @StoreID
	WHERE
		[ZoneID] = @ZoneID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteShippingZone
	@ZoneID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_ShipZone
	WHERE
		[ZoneID] = @ZoneID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateShippingCategory
	@CategoryID INT = NULL,
	@TabModelID INT = NULL,
	@PortalID INT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_ShipCategories
		([CategoryID]
		,[TabModelID]
		,[PortalID]
		,[StoreID])
	VALUES
		(@CategoryID
		,@TabModelID
		,@PortalID
		,@StoreID)
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListShippingCategories
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		SC.*, C.[CategoryName]
	FROM
		{databaseOwner}{objectQualifier}Smith_ShipCategories SC
	INNER JOIN
		{databaseOwner}{objectQualifier}Smith_Category C
	ON
		SC.[CategoryID] = C.[CategoryID]
	WHERE
		(SC.[StoreID] = @StoreID OR SC.[TabModelID] = @StoreID)
		AND SC.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteShippingCategory
	@CategoryID INT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_ShipCategories
	WHERE
		[CategoryID] = @CategoryID
		AND [StoreID] = @StoreID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ClearShippingCategories
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_ShipCategories
	WHERE
		[StoreID] = @StoreID
		AND [PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateShippingWeightCost
	@WeightFrom DECIMAL(18,2) = NULL,
	@WeightTo DECIMAL(18,2) = NULL,
	@Price MONEY = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@ShipMethodID INT = NULL,
	@CategoryID INT = NULL,
	@ZoneID INT = NULL,
	@ZoneName VARCHAR(200) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_ShippingByWeight
		([WeightFrom]
		,[WeightTo]
		,[Price]
		,[TabModuleId]
		,[PortalID]
		,[ShipMethodID]
		,[CategoryID]
		,[ZoneID]
		,[ZoneName]
		,[StoreID])
	VALUES
		(@WeightFrom
		,@WeightTo
		,@Price
		,@TabModuleId
		,@PortalID
		,@ShipMethodID
		,@CategoryID
		,@ZoneID
		,@ZoneName
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetShippingWeightCostByID
	@ShipCostID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		SW.*,
		ISNULL(SM.[ShipMethodName], 'No Ship Method') AS [ShipMethodName],
		ISNULL(SN.[ZoneName], 'No Zone') AS [ZoneName],
		ISNULL(C.[CategoryName], 'All Categories') AS [CategoryName]
	FROM
		{databaseOwner}{objectQualifier}Smith_ShippingByWeight SW
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipMethods SM
	ON
		SW.[ShipMethodID] = SM.[ShipMethodID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipZone SN
	ON
		SW.[ZoneID] = SN.[ZoneID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipCategories SC
	ON
		SW.[CategoryID] = SC.[CategoryID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_Category C
	ON
		SC.[CategoryID] = C.[CategoryID]
	WHERE
		SW.[ShipCostID] = @ShipCostID
		AND SW.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListShippingWeightCosts
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		SW.*,
		ISNULL(SM.[ShipMethodName], 'No Ship Method') AS [ShipMethodName],
		ISNULL(SN.[ZoneName], 'No Zone') AS [ZoneName],
		ISNULL(C.[CategoryName], 'All Categories') AS [CategoryName]
	FROM
		{databaseOwner}{objectQualifier}Smith_ShippingByWeight SW
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipMethods SM
	ON
		SW.[ShipMethodID] = SM.[ShipMethodID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipZone SN
	ON
		SW.[ZoneID] = SN.[ZoneID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipCategories SC
	ON
		SW.[CategoryID] = SC.[CategoryID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_Category C
	ON
		SC.[CategoryID] = C.[CategoryID]
	WHERE
		(SW.[StoreID] = @StoreID OR SW.[TabModuleId] = @StoreID)
		AND SW.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateShippingWeightCost
	@ShipCostID INT = NULL,
	@WeightFrom DECIMAL(18,2) = NULL,
	@WeightTo DECIMAL(18,2) = NULL,
	@Price MONEY = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@ShipMethodID INT = NULL,
	@CategoryID INT = NULL,
	@ZoneID INT = NULL,
	@ZoneName VARCHAR(200) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_ShippingByWeight
	SET
		[WeightFrom] = @WeightFrom,
		[WeightTo] = @WeightTo,
		[Price] = @Price,
		[TabModuleId] = @TabModuleId,
		[PortalID] = @PortalID,
		[ShipMethodID] = @ShipMethodID,
		[CategoryID] = @CategoryID,
		[ZoneID] = @ZoneID,
		[ZoneName] = @ZoneName,
		[StoreID] = @StoreID
	WHERE
		[ShipCostID] = @ShipCostID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteShippingWeightCost
	@ShipCostID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_ShippingByWeight
	WHERE
		[ShipCostID] = @ShipCostID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateShippingQuantityCost
	@QuantityFrom INT = NULL,
	@QuantityTo INT = NULL,
	@Price MONEY = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@ShipMethodID INT = NULL,
	@CategoryID INT = NULL,
	@ZoneID INT = NULL,
	@ZoneName VARCHAR(200) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_ShippingByQuantity
		([QuantityFrom]
		,[QuantityTo]
		,[Price]
		,[TabModuleId]
		,[PortalID]
		,[ShipMethodID]
		,[CategoryID]
		,[ZoneID]
		,[ZoneName]
		,[StoreID])
	VALUES
		(@QuantityFrom
		,@QuantityTo
		,@Price
		,@TabModuleId
		,@PortalID
		,@ShipMethodID
		,@CategoryID
		,@ZoneID
		,@ZoneName
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetShippingQuantityCostByID
	@ShipCostID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		SQ.*,
		ISNULL(SM.[ShipMethodName], 'No Ship Method') AS [ShipMethodName],
		ISNULL(SN.[ZoneName], 'No Zone') AS [ZoneName],
		ISNULL(C.[CategoryName], 'All Categories') AS [CategoryName]
	FROM
		{databaseOwner}{objectQualifier}Smith_ShippingByQuantity SQ
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipMethods SM
	ON
		SQ.[ShipMethodID] = SM.[ShipMethodID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipZone SN
	ON
		SQ.[ZoneID] = SN.[ZoneID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipCategories SC
	ON
		SQ.[CategoryID] = SC.[CategoryID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_Category C
	ON
		SC.[CategoryID] = C.[CategoryID]
	WHERE
		SQ.[ShipCostID] = @ShipCostID
		AND SQ.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListShippingQuantityCosts
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		SQ.*,
		ISNULL(SM.[ShipMethodName], 'No Ship Method') AS [ShipMethodName],
		ISNULL(SN.[ZoneName], 'No Zone') AS [ZoneName],
		ISNULL(C.[CategoryName], 'All Categories') AS [CategoryName]
	FROM
		{databaseOwner}{objectQualifier}Smith_ShippingByQuantity SQ
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipMethods SM
	ON
		SQ.[ShipMethodID] = SM.[ShipMethodID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipZone SN
	ON
		SQ.[ZoneID] = SN.[ZoneID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipCategories SC
	ON
		SQ.[CategoryID] = SC.[CategoryID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_Category C
	ON
		SC.[CategoryID] = C.[CategoryID]
	WHERE
		(SQ.[StoreID] = @StoreID OR SQ.[TabModuleId] = @StoreID)
		AND SQ.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateShippingQuantityCost
	@ShipCostID INT = NULL,
	@QuantityFrom INT = NULL,
	@QuantityTo INT = NULL,
	@Price MONEY = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@ShipMethodID INT = NULL,
	@CategoryID INT = NULL,
	@ZoneID INT = NULL,
	@ZoneName VARCHAR(200) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_ShippingByQuantity
	SET
		[QuantityFrom] = @QuantityFrom,
		[QuantityTo] = @QuantityTo,
		[Price] = @Price,
		[TabModuleId] = @TabModuleId,
		[PortalID] = @PortalID,
		[ShipMethodID] = @ShipMethodID,
		[CategoryID] = @CategoryID,
		[ZoneID] = @ZoneID,
		[ZoneName] = @ZoneName,
		[StoreID] = @StoreID
	WHERE
		[ShipCostID] = @ShipCostID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteShippingQuantityCost
	@ShipCostID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_ShippingByQuantity
	WHERE
		[ShipCostID] = @ShipCostID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateShippingAmountCost
	@AmountFrom DECIMAL(18,2) = NULL,
	@AmountTo DECIMAL(18,2) = NULL,
	@Price MONEY = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@ShipMethodID INT = NULL,
	@CategoryID INT = NULL,
	@IsIntl BIT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_ShippingByAmount
		([AmountFrom]
		,[AmountTo]
		,[Price]
		,[TabModuleId]
		,[PortalID]
		,[ShipMethodID]
		,[CategoryID]
		,[IsIntl]
		,[StoreID])
	VALUES
		(@AmountFrom
		,@AmountTo
		,@Price
		,@TabModuleId
		,@PortalID
		,@ShipMethodID
		,@CategoryID
		,@IsIntl
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetShippingAmountCostByID
	@ShipCostID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		SA.*,
		ISNULL(SM.[ShipMethodName], 'No Ship Method') AS [ShipMethodName],
		ISNULL(C.[CategoryName], 'All Categories') AS [CategoryName]
	FROM
		{databaseOwner}{objectQualifier}Smith_ShippingByAmount SA
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipMethods SM
	ON
		SA.[ShipMethodID] = SM.[ShipMethodID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipCategories SC
	ON
		SA.[CategoryID] = SC.[CategoryID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_Category C
	ON
		SC.[CategoryID] = C.[CategoryID]
	WHERE
		SA.[ShipCostID] = @ShipCostID
		AND SA.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListShippingAmountCosts
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		SA.*,
		ISNULL(SM.[ShipMethodName], 'No Ship Method') AS [ShipMethodName],
		ISNULL(C.[CategoryName], 'All Categories') AS [CategoryName]
	FROM
		{databaseOwner}{objectQualifier}Smith_ShippingByAmount SA
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipMethods SM
	ON
		SA.[ShipMethodID] = SM.[ShipMethodID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipCategories SC
	ON
		SA.[CategoryID] = SC.[CategoryID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_Category C
	ON
		SC.[CategoryID] = C.[CategoryID]
	WHERE
		(SA.[StoreID] = @StoreID OR SA.[TabModuleId] = @StoreID)
		AND SA.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateShippingAmountCost
	@ShipCostID INT = NULL,
	@AmountFrom DECIMAL(18,2) = NULL,
	@AmountTo DECIMAL(18,2) = NULL,
	@Price MONEY = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@ShipMethodID INT = NULL,
	@CategoryID INT = NULL,
	@IsIntl BIT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_ShippingByAmount
	SET
		[AmountFrom] = @AmountFrom,
		[AmountTo] = @AmountTo,
		[Price] = @Price,
		[TabModuleId] = @TabModuleId,
		[PortalID] = @PortalID,
		[ShipMethodID] = @ShipMethodID,
		[CategoryID] = @CategoryID,
		[IsIntl] = @IsIntl,
		[StoreID] = @StoreID
	WHERE
		[ShipCostID] = @ShipCostID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteShippingAmountCost
	@ShipCostID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_ShippingByAmount
	WHERE
		[ShipCostID] = @ShipCostID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateShippingPostalCost
	@ZipCode VARCHAR(50) = NULL,
	@Price MONEY = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@ShipMethodID INT = NULL,
	@CategoryID INT = NULL,
	@Country VARCHAR(50) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_ShippingByZipCode
		([ZipCode]
		,[Price]
		,[TabModuleId]
		,[PortalID]
		,[ShipMethodID]
		,[CategoryID]
		,[Country]
		,[StoreID])
	VALUES
		(@ZipCode
		,@Price
		,@TabModuleId
		,@PortalID
		,@ShipMethodID
		,@CategoryID
		,@Country
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetShippingPostalCostByID
	@ShipCostID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		SZ.*,
		ISNULL(SM.[ShipMethodName], 'No Ship Method') AS [ShipMethodName],
		ISNULL(C.[CategoryName], 'All Categories') AS [CategoryName]
	FROM
		{databaseOwner}{objectQualifier}Smith_ShippingByZipCode SZ
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipMethods SM
	ON
		SZ.[ShipMethodID] = SM.[ShipMethodID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipCategories SC
	ON
		SZ.[CategoryID] = SC.[CategoryID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_Category C
	ON
		SC.[CategoryID] = C.[CategoryID]
	WHERE
		SZ.[ShipCostID] = @ShipCostID
		AND SZ.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListShippingPostalCosts
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		SZ.*,
		ISNULL(SM.[ShipMethodName], 'No Ship Method') AS [ShipMethodName],
		ISNULL(C.[CategoryName], 'All Categories') AS [CategoryName]
	FROM
		{databaseOwner}{objectQualifier}Smith_ShippingByZipCode SZ
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipMethods SM
	ON
		SZ.[ShipMethodID] = SM.[ShipMethodID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipCategories SC
	ON
		SZ.[CategoryID] = SC.[CategoryID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_Category C
	ON
		SC.[CategoryID] = C.[CategoryID]
	WHERE
		(SZ.[StoreID] = @StoreID OR SZ.[TabModuleId] = @StoreID)
		AND SZ.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateShippingPostalCost
	@ShipCostID INT = NULL,
	@ZipCode VARCHAR(50) = NULL,
	@Price MONEY = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@ShipMethodID INT = NULL,
	@CategoryID INT = NULL,
	@Country VARCHAR(50) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_ShippingByZipCode
	SET
		[ZipCode] = @ZipCode,
		[Price] = @Price,
		[TabModuleId] = @TabModuleId,
		[PortalID] = @PortalID,
		[ShipMethodID] = @ShipMethodID,
		[CategoryID] = @CategoryID,
		[Country] = @Country,
		[StoreID] = @StoreID
	WHERE
		[ShipCostID] = @ShipCostID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteShippingPostalCost
	@ShipCostID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_ShippingByZipCode
	WHERE
		[ShipCostID] = @ShipCostID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateFreeShipping
	@ZipCode VARCHAR(50) = NULL,
	@ShipMethodID INT = NULL,
	@CategoryID INT = NULL,
	@Country VARCHAR(50) = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_ShipFree
		([ZipCode]
		,[ShipMethodID]
		,[CategoryID]
		,[Country]
		,[TabModuleId]
		,[PortalID]
		,[StoreID])
	VALUES
		(@ZipCode
		,@ShipMethodID
		,@CategoryID
		,@Country
		,@TabModuleId
		,@PortalID
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetFreeShippingByID
	@ID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		SF.*,
		ISNULL(SM.[ShipMethodName], 'No Ship Method') AS [ShipMethodName],
		ISNULL(C.[CategoryName], 'All Categories') AS [CategoryName]
	FROM
		{databaseOwner}{objectQualifier}Smith_ShipFree SF
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipMethods SM
	ON
		SF.[ShipMethodID] = SM.[ShipMethodID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipCategories SC
	ON
		SF.[CategoryID] = SC.[CategoryID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_Category C
	ON
		SC.[CategoryID] = C.[CategoryID]
	WHERE
		SF.[ID] = @ID
		AND SF.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListFreeShippings
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		SF.*,
		ISNULL(SM.[ShipMethodName], 'No Ship Method') AS [ShipMethodName],
		ISNULL(C.[CategoryName], 'All Categories') AS [CategoryName]
	FROM
		{databaseOwner}{objectQualifier}Smith_ShipFree SF
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipMethods SM
	ON
		SF.[ShipMethodID] = SM.[ShipMethodID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_ShipCategories SC
	ON
		SF.[CategoryID] = SC.[CategoryID]
	LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Smith_Category C
	ON
		SC.[CategoryID] = C.[CategoryID]
	WHERE
		(SF.[StoreID] = @StoreID OR SF.[TabModuleId] = @StoreID)
		AND SF.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateFreeShipping
	@ID INT = NULL,
	@ZipCode VARCHAR(50) = NULL,
	@ShipMethodID INT = NULL,
	@CategoryID INT = NULL,
	@Country VARCHAR(50) = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_ShipFree
	SET
		[ZipCode] = @ZipCode,
		[ShipMethodID] = @ShipMethodID,
		[CategoryID] = @CategoryID,
		[Country] = @Country,
		[TabModuleId] = @TabModuleId,
		[PortalID] = @PortalID,
		[StoreID] = @StoreID
	WHERE
		[ID] = @ID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteFreeShipping
	@ID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_ShipFree
	WHERE
		[ID] = @ID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListTaxesByFilter
	@PageNumber INT = NULL,
	@PageSize INT = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @PageRecordStart INT
	DECLARE @PageRecordEnd INT

	SET @PageRecordStart = ((@PageNumber - 1) * @PageSize) + 1
	SET @PageRecordEnd = @PageNumber * @PageSize

	;WITH [TaxesPage] AS
	(
		SELECT
			ROW_NUMBER() OVER (ORDER BY T.[TaxId] ASC) AS [RowNo], T.*
		FROM
			{databaseOwner}{objectQualifier}Smith_Tax T
		WHERE
			(T.[StoreID] = @StoreID OR T.[StoreID] IS NULL)
			AND T.[PortalID] = @PortalID
	)
	SELECT
		*,
		TotalRecords = (
			SELECT COUNT(*) FROM [TaxesPage]
		),
		MoreRecords = (
			SELECT COUNT(*) FROM [TaxesPage]
			WHERE [RowNo] > @PageRecordEnd
		)
	FROM
		[TaxesPage]
	WHERE
		[RowNo] BETWEEN @PageRecordStart AND @PageRecordEnd
	ORDER BY
		[RowNo];
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ClearTaxTable
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_Tax
	WHERE
		[StoreID] = @StoreID
		AND [PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateRegionalTax
	@StateText VARCHAR(200) = NULL,
	@State VARCHAR(50) = NULL,
	@CountryCode VARCHAR(50) = NULL,
	@PortalID INT = NULL,
	@ZipCode VARCHAR(50) = NULL,
	@TaxExemptAmount DECIMAL(18,2) = NULL,
	@TabModuleId INT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_TaxStates
		([StateText]
		,[State]
		,[CountryCode]
		,[PortalID]
		,[ZipCode]
		,[TaxExemptAmount]
		,[TabModuleId]
		,[StoreID])
	VALUES
		(@StateText
		,@State
		,@CountryCode
		,@PortalID
		,@ZipCode
		,@TaxExemptAmount
		,@TabModuleId
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetRegionalTaxByID
	@TaxStateId INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		TS.*
	FROM
		{databaseOwner}{objectQualifier}Smith_TaxStates TS
	WHERE
		TS.[TaxStateId] = @TaxStateId
		AND TS.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListRegionalTaxesByFilter
	@PageNumber INT = NULL,
	@PageSize INT = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @PageRecordStart INT
	DECLARE @PageRecordEnd INT

	SET @PageRecordStart = ((@PageNumber - 1) * @PageSize) + 1
	SET @PageRecordEnd = @PageNumber * @PageSize

	;WITH [TaxesPage] AS
	(
		SELECT
			ROW_NUMBER() OVER (ORDER BY TS.[TaxStateId] ASC) AS [RowNo], TS.*
		FROM
			{databaseOwner}{objectQualifier}Smith_TaxStates TS
		WHERE
			(TS.[StoreID] = @StoreID OR TS.[TabModuleId] = @StoreID)
			AND TS.[PortalID] = @PortalID
	)
	SELECT
		*,
		TotalRecords = (
			SELECT COUNT(*) FROM [TaxesPage]
		),
		MoreRecords = (
			SELECT COUNT(*) FROM [TaxesPage]
			WHERE [RowNo] > @PageRecordEnd
		)
	FROM
		[TaxesPage]
	WHERE
		[RowNo] BETWEEN @PageRecordStart AND @PageRecordEnd
	ORDER BY
		[RowNo];
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateRegionalTax
	@TaxStateId INT = NULL,
	@StateText VARCHAR(200) = NULL,
	@State VARCHAR(50) = NULL,
	@CountryCode VARCHAR(50) = NULL,
	@PortalID INT = NULL,
	@ZipCode VARCHAR(50) = NULL,
	@TaxExemptAmount DECIMAL(18,2) = NULL,
	@TabModuleId INT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_TaxStates
	SET
		[StateText] = @StateText,
		[State] = @State,
		[CountryCode] = @CountryCode,
		[PortalID] = @PortalID,
		[ZipCode] = @ZipCode,
		[TaxExemptAmount] = @TaxExemptAmount,
		[TabModuleId] = @TabModuleId,
		[StoreID] = @StoreID
	WHERE
		[TaxStateId] = @TaxStateId
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteRegionalTax
	@TaxStateId INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_TaxStates
	WHERE
		[TaxStateId] = @TaxStateId
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateLicenseKey
	@Hostname VARCHAR(256) = NULL,
	@LicenseKey VARCHAR(MAX) = NULL,
	@CreateDate DATETIME = NULL,
	@CreatedByUser INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_LicenseKey
		([Hostname]
		,[LicenseKey]
		,[CreateDate]
		,[CreatedByUser]
		,[PortalID])
	VALUES
		(@Hostname
		,@LicenseKey
		,@CreateDate
		,@CreatedByUser
		,@PortalID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteLicenseKey
	@LicenseKeyID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_LicenseKey
	WHERE
		[LicenseKeyID] = @LicenseKeyID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateCoupon
	@CouponCode VARCHAR(50) = NULL,
	@CouponName VARCHAR(255) = NULL,
	@CouponAmount MONEY = NULL,
	@CouponQuantity VARCHAR(50) = NULL,
	@DiscountByItem BIT = NULL,
	@CreatedByUser VARCHAR(100) = NULL,
	@CreatedDate DATETIME = NULL,
	@ProductId INT = NULL,
	@CouponLimit INT = NULL,
	@CouponShipping MONEY = NULL,
	@DiscountPercent DECIMAL(18,2) = NULL,
	@PortalID INT = NULL,
	@ExpireDate DATETIME = NULL,
	@DiscountFirstPaymentOnly BIT = NULL,
	@CouponRoleExists BIT = NULL,
	@MaxUseProduct INT = NULL,
	@Active BIT = NULL,
	@StartDate DATETIME = NULL,
	@MinOrderAmount MONEY = NULL,
	@FreeStandardShipping BIT = NULL,
	@UpgradeShipping BIT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_Coupons
		([CouponCode]
		,[CouponName]
		,[CouponAmount]
		,[CouponQuantity]
		,[DiscountByItem]
		,[CreatedByUser]
		,[CreatedDate]
		,[ProductId]
		,[CouponLimit]
		,[CouponShipping]
		,[DiscountPercent]
		,[PortalID]
		,[ExpireDate]
		,[DiscountFirstPaymentOnly]
		,[CouponRoleExists]
		,[MaxUseProduct]
		,[Active]
		,[StartDate]
		,[MinOrderAmount]
		,[FreeStandardShipping]
		,[UpgradeShipping]
		,[StoreID])
	VALUES
		(@CouponCode
		,@CouponName
		,@CouponAmount
		,@CouponQuantity
		,@DiscountByItem
		,@CreatedByUser
		,@CreatedDate
		,@ProductId
		,@CouponLimit
		,@CouponShipping
		,@DiscountPercent
		,@PortalID
		,@ExpireDate
		,@DiscountFirstPaymentOnly
		,@CouponRoleExists
		,@MaxUseProduct
		,@Active
		,@StartDate
		,@MinOrderAmount
		,@FreeStandardShipping
		,@UpgradeShipping
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetCouponByID
	@CouponID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		C.*
	FROM
		{databaseOwner}{objectQualifier}Smith_Coupons C
	WHERE
		C.[CouponID] = @CouponID
		AND C.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListCouponsByFilter
	@PageNumber INT = NULL,
	@PageSize INT = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @PageRecordStart INT
	DECLARE @PageRecordEnd INT

	SET @PageRecordStart = ((@PageNumber - 1) * @PageSize) + 1
	SET @PageRecordEnd = @PageNumber * @PageSize

	;WITH [CouponsPage] AS
	(
		SELECT
			ROW_NUMBER() OVER (ORDER BY C.[CouponID] ASC) AS [RowNo], C.*
		FROM
			{databaseOwner}{objectQualifier}Smith_Coupons C
		WHERE
			(C.[StoreID] = @StoreID)
			AND C.[PortalID] = @PortalID
	)
	SELECT
		*,
		TotalRecords = (
			SELECT COUNT(*) FROM [CouponsPage]
		),
		MoreRecords = (
			SELECT COUNT(*) FROM [CouponsPage]
			WHERE [RowNo] > @PageRecordEnd
		)
	FROM
		[CouponsPage]
	WHERE
		[RowNo] BETWEEN @PageRecordStart AND @PageRecordEnd
	ORDER BY
		[RowNo];
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateCoupon
	@CouponID INT = NULL,
	@CouponCode VARCHAR(50) = NULL,
	@CouponName VARCHAR(255) = NULL,
	@CouponAmount MONEY = NULL,
	@CouponQuantity VARCHAR(50) = NULL,
	@DiscountByItem BIT = NULL,
	@CreatedByUser VARCHAR(100) = NULL,
	@CreatedDate DATETIME = NULL,
	@ProductId INT = NULL,
	@CouponLimit INT = NULL,
	@CouponShipping MONEY = NULL,
	@DiscountPercent DECIMAL(18,2) = NULL,
	@PortalID INT = NULL,
	@ExpireDate DATETIME = NULL,
	@DiscountFirstPaymentOnly BIT = NULL,
	@CouponRoleExists BIT = NULL,
	@MaxUseProduct INT = NULL,
	@Active BIT = NULL,
	@StartDate DATETIME = NULL,
	@MinOrderAmount MONEY = NULL,
	@FreeStandardShipping BIT = NULL,
	@UpgradeShipping BIT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_Coupons
	SET
		[CouponCode] = @CouponCode,
		[CouponName] = @CouponName,
		[CouponAmount] = @CouponAmount,
		[CouponQuantity] = @CouponQuantity,
		[DiscountByItem] = @DiscountByItem,
		[CreatedByUser] = @CreatedByUser,
		[CreatedDate] = @CreatedDate,
		[ProductId] = @ProductId,
		[CouponLimit] = @CouponLimit,
		[CouponShipping] = @CouponShipping,
		[DiscountPercent] = @DiscountPercent,
		[PortalID] = @PortalID,
		[ExpireDate] = @ExpireDate,
		[DiscountFirstPaymentOnly] = @DiscountFirstPaymentOnly,
		[CouponRoleExists] = @CouponRoleExists,
		[MaxUseProduct] = @MaxUseProduct,
		[Active] = @Active,
		[StartDate] = @StartDate,
		[MinOrderAmount] = @MinOrderAmount,
		[FreeStandardShipping] = @FreeStandardShipping,
		[UpgradeShipping] = @UpgradeShipping,
		[StoreID] = @StoreID
	WHERE
		[CouponID] = @CouponID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteCoupon
	@CouponID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_Coupons
	WHERE
		[CouponID] = @CouponID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListCustomersByFilter
	@PageNumber INT = NULL,
	@PageSize INT = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @PageRecordStart INT
	DECLARE @PageRecordEnd INT

	SET @PageRecordStart = ((@PageNumber - 1) * @PageSize) + 1
	SET @PageRecordEnd = @PageNumber * @PageSize

	;WITH [CustomersPage] AS
	(
		SELECT
			ROW_NUMBER() OVER (ORDER BY C.[CustomerID] ASC) AS [RowNo], C.*
		FROM
			{databaseOwner}{objectQualifier}Smith_Customer C
		WHERE
			(C.[StoreID] = @StoreID OR @StoreID = -1)
			AND C.[PortalID] = @PortalID
	)
	SELECT
		*,
		TotalRecords = (
			SELECT COUNT(*) FROM [CustomersPage]
		),
		MoreRecords = (
			SELECT COUNT(*) FROM [CustomersPage]
			WHERE [RowNo] > @PageRecordEnd
		)
	FROM
		[CustomersPage]
	WHERE
		[RowNo] BETWEEN @PageRecordStart AND @PageRecordEnd
	ORDER BY
		[RowNo];
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteCustomer
	@CustomerID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_Customer
	WHERE
		[CustomerID] = @CustomerID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListOrdersByFilter
	@PageNumber INT = NULL,
	@PageSize INT = NULL,
	@OrderColumn VARCHAR(128) = NULL,
	@OrderDirection VARCHAR(4) = NULL,
	@SearchValue NVARCHAR(256) = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @PageRecordStart INT
	DECLARE @PageRecordEnd INT

	SET @PageRecordStart = ((@PageNumber - 1) * @PageSize) + 1
	SET @PageRecordEnd = @PageNumber * @PageSize

	;WITH [OrdersPage] AS
	(
		SELECT
			(
				CASE
					WHEN @OrderColumn = 'Status' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY O.[Status] ASC)
					WHEN @OrderColumn = 'Status' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY O.[Status] DESC)
					WHEN @OrderColumn = 'OrderID' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY O.[OrderID] ASC)
					WHEN @OrderColumn = 'OrderID' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY O.[OrderID] DESC)
					WHEN @OrderColumn = 'OrderDate' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY O.[OrderDate] ASC)
					WHEN @OrderColumn = 'OrderDate' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY O.[OrderDate] DESC)
					WHEN @OrderColumn = 'GrandTotal' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY O.[GrandTotal] ASC)
					WHEN @OrderColumn = 'GrandTotal' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY O.[GrandTotal] DESC)
				ELSE ROW_NUMBER() OVER (ORDER BY O.[OrderID] ASC)
				END
			) AS [RowNo], O.*
		FROM
			{databaseOwner}{objectQualifier}Smith_StoreOrders O
		WHERE
			(O.[StoreID] = @StoreID OR @StoreID = -1)
			AND O.[PortalID] = @PortalID
			AND (
				O.[ShipFirstName] LIKE '%' + @SearchValue + '%'
				OR O.[ShipLastName] LIKE '%' + @SearchValue + '%'
				OR O.[ShipAddress1] LIKE '%' + @SearchValue + '%'
				OR O.[ShipAddress2] LIKE '%' + @SearchValue + '%'
				OR O.[ShipCity] LIKE '%' + @SearchValue + '%'
				OR O.[ShipZipcode] LIKE '%' + @SearchValue + '%'
				OR O.[Status] LIKE '%' + @SearchValue + '%'
				OR O.[ShipMethod] LIKE '%' + @SearchValue + '%'
				OR O.[SpecialInstructions] LIKE '%' + @SearchValue + '%'
			)
	)
	SELECT
		*,
		TotalRecords = (
			SELECT COUNT(*) FROM [OrdersPage]
		),
		MoreRecords = (
			SELECT COUNT(*) FROM [OrdersPage]
			WHERE [RowNo] > @PageRecordEnd
		)
	FROM
		[OrdersPage]
	WHERE
		[RowNo] BETWEEN @PageRecordStart AND @PageRecordEnd
	ORDER BY
		[RowNo];
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateOrder
	@OrderID INT = NULL,
	@CustomerID INT = NULL,
	@OrderDate DATETIME = NULL,
	@PayHistID INT = NULL,
	@ShippingTotal MONEY = NULL,
	@TaxTotal MONEY = NULL,
	@HandlingCharge MONEY = NULL,
	@ShipFirstName NVARCHAR(50) = NULL,
	@ShipLastName NVARCHAR(50) = NULL,
	@ShipAddress1 VARCHAR(200) = NULL,
	@ShipAddress2 VARCHAR(200) = NULL,
	@ShipCity VARCHAR(60) = NULL,
	@ShipState VARCHAR(60) = NULL,
	@ShipZipcode VARCHAR(25) = NULL,
	@ShipCountry VARCHAR(50) = NULL,
	@Status VARCHAR(20) = NULL,
	@ShipMethod NVARCHAR(50) = NULL,
	@AffiliateId VARCHAR(20) = NULL,
	@CouponId INT = NULL,
	@Discount MONEY = NULL,
	@MemberDiscount MONEY = NULL,
	@MemberRole NVARCHAR(50) = NULL,
	@TrackingNumber VARCHAR(50) = NULL,
	@PortalID INT = NULL,
	@Surcharge MONEY = NULL,
	@SpecialInstructions NVARCHAR(500) = NULL,
	@ShipDate DATETIME = NULL,
	@DeletedFlag BIT = NULL,
	@ShipCarrier NVARCHAR(50) = NULL,
	@DNNUserID INT = 0,
	@ResidentialStatus VARCHAR(100) = NULL,
	@IPAddress VARCHAR(50) = NULL,
	@ModifiedBy NVARCHAR(100) = NULL,
	@AuctionID INT = NULL,
	@SubTotal MONEY = NULL,
	@GrandTotal MONEY = NULL,
	@RecalcTax BIT = NULL,
	@RecalcShipping BIT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_StoreOrders
	SET
		[CustomerID] = @CustomerID,
		[OrderDate] = @OrderDate,
		[PayHistID] = @PayHistID,
		[ShippingTotal] = @ShippingTotal,
		[TaxTotal] = @TaxTotal,
		[HandlingCharge] = @HandlingCharge,
		[ShipFirstName] = @ShipFirstName,
		[ShipLastName] = @ShipLastName,
		[ShipAddress1] = @ShipAddress1,
		[ShipAddress2] = @ShipAddress2,
		[ShipCity] = @ShipCity,
		[ShipState] = @ShipState,
		[ShipZipcode] = @ShipZipcode,
		[ShipCountry] = @ShipCountry,
		[Status] = @Status,
		[ShipMethod] = @ShipMethod,
		[AffiliateId] = @AffiliateId,
		[CouponId] = @CouponId,
		[Discount] = @Discount,
		[MemberDiscount] = @MemberDiscount,
		[MemberRole] = @MemberRole,
		[TrackingNumber] = @TrackingNumber,
		[PortalID] = @PortalID,
		[Surcharge] = @Surcharge,
		[SpecialInstructions] = @SpecialInstructions,
		[ShipDate] = @ShipDate,
		[DeletedFlag] = @DeletedFlag,
		[ShipCarrier] = @ShipCarrier,
		[DNNUserID] = @DNNUserID,
		[ResidentialStatus] = @ResidentialStatus,
		[IPAddress] = @IPAddress,
		[ModifiedBy] = @ModifiedBy,
		[DateModified] = GETDATE(),
		[AuctionID] = @AuctionID,
		[SubTotal] = @SubTotal,
		[GrandTotal] = @GrandTotal,
		[RecalcTax] = @RecalcTax,
		[RecalcShipping] = @RecalcShipping,
		[StoreID] = @StoreID
	WHERE
		[OrderID] = @OrderID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteOrder
	@OrderID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_StoreOrders
	WHERE
		[OrderID] = @OrderID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListPaymentsByOrderID
	@OrderID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		P.*
	FROM
		{databaseOwner}{objectQualifier}Smith_PayHist P
	WHERE
		P.[OrderID] = @OrderID
		AND P.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateOrderNote
	@OrderID INT = NULL,
	@Notes NVARCHAR(MAX) = NULL,
	@ModifiedBy NVARCHAR(100) = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_OrderNotes
		([OrderID]
		,[Notes]
		,[ModifiedBy]
		,[DateModified]
		,[DateCreated])
	VALUES
		(@OrderID
		,@Notes
		,@ModifiedBy
		,GETDATE()
		,GETDATE())
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetOrderNoteByID
	@ID INT = NULL,
	@OrderID INT = NULL
AS
BEGIN
	SELECT
		N.*
	FROM
		{databaseOwner}{objectQualifier}Smith_OrderNotes N
	WHERE
		N.[ID] = @ID
		AND N.[OrderID] = @OrderID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListOrderNotes
	@OrderID INT = NULL
AS
BEGIN
	SELECT
		N.*
	FROM
		{databaseOwner}{objectQualifier}Smith_OrderNotes N
	WHERE
		N.[OrderID] = @OrderID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateOrderNote
	@ID INT = NULL,
	@OrderID INT = NULL,
	@Notes NVARCHAR(MAX) = NULL,
	@ModifiedBy NVARCHAR(100) = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_OrderNotes
	SET
		[OrderID] = @OrderID,
		[Notes] = @Notes,
		[ModifiedBy] = @ModifiedBy,
		[DateModified] = GETDATE()
	WHERE
		[ID] = @ID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteOrderNote
	@ID INT = NULL,
	@OrderID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_OrderNotes
	WHERE
		[ID] = @ID
		AND [OrderID] = @OrderID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteOrderDetail
	@OrderDetailID INT = NULL,
	@OrderID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_StoreOrderDetails
	WHERE
		[OrderDetailID] = @OrderDetailID
		AND [OrderID] = @OrderID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetPaymentByID
	@PayHistID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT TOP 1
		P.*
	FROM
		{databaseOwner}{objectQualifier}Smith_PayHist P
	WHERE
		P.[PayHistID] = @PayHistID
		AND P.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListPaymentsByFilter
	@PageNumber INT = NULL,
	@PageSize INT = NULL,
	@OrderColumn VARCHAR(128) = NULL,
	@OrderDirection VARCHAR(4) = NULL,
	@SearchValue NVARCHAR(256) = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @PageRecordStart INT
	DECLARE @PageRecordEnd INT

	SET @PageRecordStart = ((@PageNumber - 1) * @PageSize) + 1
	SET @PageRecordEnd = @PageNumber * @PageSize

	;WITH [PaymentsPage] AS
	(
		SELECT
			(
				CASE
					WHEN @OrderColumn = 'OrderID' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY P.[OrderID] ASC)
					WHEN @OrderColumn = 'OrderID' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY P.[OrderID] DESC)
					WHEN @OrderColumn = 'CustomerID' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY P.[CustomerID] ASC)
					WHEN @OrderColumn = 'CustomerID' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY P.[CustomerID] DESC)
					WHEN @OrderColumn = 'PayType' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY P.[PayType] ASC)
					WHEN @OrderColumn = 'PayType' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY P.[PayType] DESC)
					WHEN @OrderColumn = 'PayDate' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY P.[PayDate] ASC)
					WHEN @OrderColumn = 'PayDate' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY P.[PayDate] DESC)
					WHEN @OrderColumn = 'Amount' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY P.[Amount] ASC)
					WHEN @OrderColumn = 'Amount' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY P.[Amount] DESC)
					WHEN @OrderColumn = 'Success' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY P.[Success] ASC)
					WHEN @OrderColumn = 'Success' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY P.[Success] DESC)
					WHEN @OrderColumn = 'TransType' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY P.[TransType] ASC)
					WHEN @OrderColumn = 'TransType' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY P.[TransType] DESC)
				ELSE ROW_NUMBER() OVER (ORDER BY P.[PayHistID] ASC)
				END
			) AS [RowNo], P.*
		FROM
			{databaseOwner}{objectQualifier}Smith_PayHist P
		WHERE
			(P.[StoreID] = @StoreID OR @StoreID = -1)
			AND P.[PortalID] = @PortalID
			AND (
				P.[BillingName] LIKE '%' + @SearchValue + '%'
				OR P.[BillingAddress] LIKE '%' + @SearchValue + '%'
				OR P.[BillingCity] LIKE '%' + @SearchValue + '%'
				OR P.[BillingZip] LIKE '%' + @SearchValue + '%'
				OR P.[Notes] LIKE '%' + @SearchValue + '%'
				OR P.[IPAddress] LIKE '%' + @SearchValue + '%'
				OR P.[TransID] LIKE '%' + @SearchValue + '%'
				OR P.[PayType] LIKE '%' + @SearchValue + '%'
				OR P.[TransType] LIKE '%' + @SearchValue + '%'
			)
	)
	SELECT
		*,
		TotalRecords = (
			SELECT COUNT(*) FROM [PaymentsPage]
		),
		MoreRecords = (
			SELECT COUNT(*) FROM [PaymentsPage]
			WHERE [RowNo] > @PageRecordEnd
		)
	FROM
		[PaymentsPage]
	WHERE
		[RowNo] BETWEEN @PageRecordStart AND @PageRecordEnd
	ORDER BY
		[RowNo];
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeletePayment
	@PayHistID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_PayHist
	WHERE
		[PayHistID] = @PayHistID
		AND [PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateOrderDiscount
	@RoleID INT = NULL,
	@DiscountPercent DECIMAL(6,2) = NULL,
	@DiscountAmount MONEY = NULL,
	@TextBox1Required BIT = NULL,
	@TextBox2Required BIT = NULL,
	@DateRequired BIT = NULL,
	@TabModuleID INT = NULL,
	@PortalID INT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_OrderDiscounts
		([RoleID]
		,[DiscountPercent]
		,[DiscountAmount]
		,[TextBox1Required]
		,[TextBox2Required]
		,[DateRequired]
		,[TabModuleID]
		,[PortalID]
		,[StoreID])
	VALUES
		(@RoleID
		,@DiscountPercent
		,@DiscountAmount
		,@TextBox1Required
		,@TextBox2Required
		,@DateRequired
		,@TabModuleID
		,@PortalID
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetOrderDiscountByID
	@OrderDiscountID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		OD.*
	FROM
		{databaseOwner}{objectQualifier}Smith_OrderDiscounts OD
	WHERE
		OD.[OrderDiscountID] = @OrderDiscountID
		AND OD.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListOrderDiscounts
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		OD.*
	FROM
		{databaseOwner}{objectQualifier}Smith_OrderDiscounts OD
	WHERE
		(OD.[StoreID] = @StoreID OR OD.[TabModuleID] = @StoreID)
		AND OD.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateOrderDiscount
	@OrderDiscountID INT = NULL,
	@RoleID INT = NULL,
	@DiscountPercent DECIMAL(6,2) = NULL,
	@DiscountAmount MONEY = NULL,
	@TextBox1Required BIT = NULL,
	@TextBox2Required BIT = NULL,
	@DateRequired BIT = NULL,
	@TabModuleID INT = NULL,
	@PortalID INT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_OrderDiscounts
	SET
		[RoleID] = @RoleID,
		[DiscountPercent] = @DiscountPercent,
		[DiscountAmount] = @DiscountAmount,
		[TextBox1Required] = @TextBox1Required,
		[TextBox2Required] = @TextBox2Required,
		[DateRequired] = @DateRequired,
		[TabModuleID] = @TabModuleID,
		[PortalID] = @PortalID,
		[StoreID] = @StoreID
	WHERE
		[OrderDiscountID] = @OrderDiscountID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteOrderDiscount
	@OrderDiscountID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_OrderDiscounts
	WHERE
		[OrderDiscountID] = @OrderDiscountID
		AND [PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreatePriceClass
	@PriceClass VARCHAR(20) = NULL,
	@QtyFrom INT = NULL,
	@QtyTo INT = NULL,
	@Price MONEY = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@DiscountPercent DECIMAL(10,2) = NULL,
	@AdjustType VARCHAR(50) = NULL,
	@Description VARCHAR(200) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_PriceClass
		([PriceClass]
		,[QtyFrom]
		,[QtyTo]
		,[Price]
		,[TabModuleId]
		,[PortalID]
		,[DiscountPercent]
		,[AdjustType]
		,[Description]
		,[StoreID])
	VALUES
		(@PriceClass
		,@QtyFrom
		,@QtyTo
		,@Price
		,@TabModuleId
		,@PortalID
		,@DiscountPercent
		,@AdjustType
		,@Description
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetPriceClassByID
	@PriceClassID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		PC.*
	FROM
		{databaseOwner}{objectQualifier}Smith_PriceClass PC
	WHERE
		PC.[PriceClassID] = @PriceClassID
		AND PC.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListPriceClasses
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		PC.*
	FROM
		{databaseOwner}{objectQualifier}Smith_PriceClass PC
	WHERE
		(PC.[StoreID] = @StoreID OR PC.[TabModuleId] = @StoreID)
		AND PC.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdatePriceClass
	@PriceClassID INT = NULL,
	@PriceClass VARCHAR(20) = NULL,
	@QtyFrom INT = NULL,
	@QtyTo INT = NULL,
	@Price MONEY = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL,
	@DiscountPercent DECIMAL(10,2) = NULL,
	@AdjustType VARCHAR(50) = NULL,
	@Description VARCHAR(200) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_PriceClass
	SET
		[PriceClass] = @PriceClass,
		[QtyFrom] = @QtyFrom,
		[QtyTo] = @QtyTo,
		[Price] = @Price,
		[TabModuleId] = @TabModuleId,
		[PortalID] = @PortalID,
		[DiscountPercent] = @DiscountPercent,
		[AdjustType] = @AdjustType,
		[Description] = @Description,
		[StoreID] = @StoreID
	WHERE
		[PriceClassID] = @PriceClassID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeletePriceClass
	@PriceClassID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_PriceClass
	WHERE
		[PriceClassID] = @PriceClassID
		AND [PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetOrdersStateSummary
	@Frame VARCHAR(16) = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	;WITH [Summary] ([YearVal], [QuarterVal], [MonthVal], [WeekVal], [DayVal], [StateVal], [TotalVal])
	AS
	(
		SELECT
			(CASE WHEN @Frame IN ('Yearly', 'Quarterly','Monthly', 'Weekly', 'Daily') THEN YEAR(O.[OrderDate]) ELSE 0 END),
			(CASE WHEN @Frame IN ('Quarterly') THEN DATEPART(QUARTER, O.[OrderDate]) ELSE 0 END),
			(CASE WHEN @Frame IN ('Monthly', 'Daily') THEN MONTH(O.[OrderDate]) ELSE 0 END),
			(CASE WHEN @Frame IN ('Weekly') THEN DATEPART(WEEK, O.[OrderDate]) ELSE 0 END),
			(CASE WHEN @Frame IN ('Daily') THEN DAY(O.[OrderDate]) ELSE 0 END),
			O.[Status], O.[GrandTotal]
		FROM
			{databaseOwner}{objectQualifier}Smith_StoreOrders O
		WHERE
			O.[OrderDate] >= (
				CASE @Frame
				WHEN 'Yearly' THEN DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)
				WHEN 'Quarterly' THEN DATEADD(QUARTER, DATEDIFF(QUARTER, 0, GETDATE()), 0)
				WHEN 'Monthly' THEN DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0)
				WHEN 'Weekly' THEN DATEADD(WEEK, DATEDIFF(WEEK, 0, GETDATE()), - 1)
				WHEN 'Daily' THEN DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), 0)
				ELSE GETDATE() END
			)
			AND O.[DeletedFlag] <> 1
			AND (O.[StoreID] = @StoreID OR O.[TabModuleID] = @StoreID)
			AND O.[PortalID] = @PortalID
	)
	SELECT TOP 1
		COUNT(CASE WHEN [StateVal] LIKE 'BillMeLater' THEN 1 END) [BillMeLater],
		COUNT(CASE WHEN [StateVal] LIKE 'Open' THEN 1 END) [Open],
		COUNT(CASE WHEN [StateVal] LIKE 'ReadyToShip' THEN 1 END) [ReadyToShip],
		COUNT(CASE WHEN [StateVal] LIKE 'Shipped' THEN 1 END) [Shipped],
		COUNT(CASE WHEN [StateVal] LIKE 'PickedUp' THEN 1 END) [PickedUp],
		COUNT(CASE WHEN [StateVal] LIKE 'Cancelled' THEN 1 END) [Cancelled],
		COUNT(CASE WHEN [StateVal] LIKE 'Incomplete' THEN 1 END) [Incomplete],
		COUNT(CASE WHEN [StateVal] LIKE 'OnHold' THEN 1 END) [OnHold],
		COUNT(CASE WHEN [StateVal] LIKE 'BackOrdered' THEN 1 END) [BackOrdered],
		COUNT(CASE WHEN [StateVal] LIKE 'Returned' THEN 1 END) [Returned],
		COUNT(CASE WHEN [StateVal] LIKE '%' THEN 1 END) [Total],
		COALESCE(SUM(CASE WHEN [StateVal] LIKE '%' THEN [TotalVal] END), 0) [Revenue]
	FROM
		[Summary]
	GROUP BY
		[YearVal], [QuarterVal], [MonthVal], [WeekVal], [DayVal]
	ORDER BY
		[YearVal] DESC, [QuarterVal] DESC, [MonthVal] DESC, [WeekVal] DESC, [DayVal] DESC
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetOrdersRevenueStatistics
	@Frame VARCHAR(16) = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	;WITH [Summary] ([YearVal], [QuarterVal], [MonthVal], [WeekVal], [DayVal], [TotalVal])
	AS
	(
		SELECT
			(CASE WHEN @Frame IN ('Yearly', 'Quarterly','Monthly', 'Weekly', 'Daily') THEN YEAR(O.[OrderDate]) ELSE 0 END),
			(CASE WHEN @Frame IN ('Quarterly') THEN DATEPART(QUARTER, O.[OrderDate]) ELSE 0 END),
			(CASE WHEN @Frame IN ('Monthly', 'Daily') THEN MONTH(O.[OrderDate]) ELSE 0 END),
			(CASE WHEN @Frame IN ('Weekly') THEN DATEPART(WEEK, O.[OrderDate]) ELSE 0 END),
			(CASE WHEN @Frame IN ('Daily') THEN DAY(O.[OrderDate]) ELSE 0 END),
			O.[GrandTotal]
		FROM
			{databaseOwner}{objectQualifier}Smith_StoreOrders O
		INNER JOIN
			{databaseOwner}{objectQualifier}Smith_PayHist P
		ON
			P.[OrderID] = O.[OrderID]
		WHERE
			O.[DeletedFlag] <> 1
			AND O.[Status] NOT IN ('BillMeLater', 'Cancelled', 'Incomplete', 'Returned')
			AND P.[Success] = 1
			AND P.[TransType] = 'Sale'
			AND (O.[StoreID] = @StoreID OR O.[TabModuleID] = @StoreID)
			AND O.[PortalID] = @PortalID
	)
	SELECT
		[YearVal] AS [Year], [QuarterVal] AS [Quarter], [MonthVal] AS [Month], [WeekVal] AS [Week], [DayVal] AS [Day],
		COUNT(*) AS [Total], SUM([TotalVal]) AS [Revenue]
	FROM
		[Summary]
	GROUP BY
		[YearVal], [QuarterVal], [MonthVal], [WeekVal], [DayVal]
	ORDER BY
		[YearVal] DESC, [QuarterVal] DESC, [MonthVal] DESC, [WeekVal] DESC, [DayVal] DESC
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetTopProductsRevenue
	@Top INT = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT TOP (@Top)
		P.[ProductID], MAX(P.[ModelNumber]) AS [ModelNumber], MAX(P.[ModelName]) AS [ModelName],
		MIN(OD.[UnitCost]) AS [MinPrice], MAX(OD.[UnitCost]) AS [MaxPrice], AVG(OD.[UnitCost]) AS [AvgPrice],
		SUM(OD.[Quantity]) AS [Quantity], SUM(OD.[UnitCost] * OD.[Quantity]) AS [Revenue]
	FROM
		{databaseOwner}{objectQualifier}Smith_StoreOrders O
	INNER JOIN
		{databaseOwner}{objectQualifier}Smith_PayHist PH
	ON
		PH.[OrderID] = O.[OrderID]
	INNER JOIN
		{databaseOwner}{objectQualifier}Smith_StoreOrderDetails OD
	ON
		OD.[OrderID] = O.[OrderID]
	INNER JOIN
		{databaseOwner}{objectQualifier}Smith_Products P
	ON
		P.[ProductID] = OD.[ProductID]
	WHERE
		O.[DeletedFlag] <> 1
		AND O.[Status] NOT IN ('BillMeLater', 'Cancelled', 'Incomplete', 'Returned')
		AND PH.[Success] = 1
		AND PH.[TransType] = 'Sale'
		AND (O.[StoreID] = @StoreID OR O.[TabModuleID] = @StoreID)
		AND O.[PortalID] = @PortalID
	GROUP BY
		P.[ProductID]
	ORDER BY
		[Revenue] DESC
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetTopStoreNotifications
	@Top INT = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	;WITH [Notifications] ([ID], [Date], [Description], [Type])
	AS
	(
		SELECT *
		FROM
			(
				SELECT TOP 10
					O.[OrderID] AS [ID], O.[OrderDate] AS [Date], CONCAT('Store Order #', O.[OrderID]) AS [Description], 'Order' AS [Type]
				FROM
					{databaseOwner}{objectQualifier}Smith_StoreOrders O
				WHERE
					(O.[StoreID] = @StoreID OR @StoreID = -1)
					AND O.[PortalID] = @PortalID
				ORDER BY
					O.[OrderDate] DESC
			) Orders
		UNION ALL SELECT *
		FROM
			(
				SELECT  TOP 10
					C.[CustomerID] AS [ID], C.[DateCreated] AS [Date], CONCAT('New Customer #', C.[CustomerID], ' has been created') AS [Description], 'Customer' AS [Type]
				FROM
					{databaseOwner}{objectQualifier}Smith_Customer C
				WHERE
					(C.[StoreID] = @StoreID OR @StoreID = -1)
					AND C.[PortalID] = @PortalID
				ORDER BY
					C.[DateCreated] DESC
			) Customers
		UNION ALL SELECT *
		FROM
			(
				SELECT TOP 10
					R.[ReviewID] AS [ID], R.[ReviewDate] AS [Date], CONCAT('Product Review #', R.[ReviewID], ' (Rate: ', R.[Rate], ')') AS [Description], 'Review' AS [Type]
				FROM
					{databaseOwner}{objectQualifier}Smith_ProductReviews R
				INNER JOIN
					{databaseOwner}{objectQualifier}Smith_Products P
				ON
					P.[ProductID] = R.[ProductID]
				WHERE
					(P.[StoreID] = @StoreID OR @StoreID = -1)
					AND P.[PortalID] = @PortalID
				ORDER BY
					R.[ReviewDate] DESC
			) Reviews
		UNION ALL SELECT *
		FROM
			(
				SELECT  TOP 10
					EL.[LogEventID] AS [ID], EL.[LogCreateDate] AS [Date], SUBSTRING([LogProperties].value('(/LogProperties/LogProperty/PropertyName)[1]', 'VARCHAR(MAX)'), 48, 100) AS [Description], 'Alert' AS [Type]
				FROM
					{databaseOwner}{objectQualifier}EventLog EL
				WHERE
					EL.[LogProperties].value('(/LogProperties/LogProperty/PropertyName)[1]', 'VARCHAR(MAX)') LIKE 'RazorCart Pipeline Action Failure%'
					AND EL.[LogPortalID] = @PortalID
				ORDER BY
					EL.[LogCreateDate] DESC
			) Alerts
	)
	SELECT TOP (@Top)
		[ID], [Date], [Description], [Type]
	FROM
		[Notifications]
	ORDER BY
		[Date] DESC
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateEmailTemplate
	@Name NVARCHAR(50) = NULL,
	@Subject NVARCHAR(50) = NULL,
	@Template NTEXT = NULL,
	@TabModuleID INT = NULL,
	@PortalID INT = NULL,
	@LanguageLocale NVARCHAR(20) = NULL,
	@Type NVARCHAR(150) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_EmailTemplateSC
		([Name]
		,[Subject]
		,[Template]
		,[TabModuleID]
		,[PortalID]
		,[LanguageLocale]
		,[Type]
		,[StoreID])
	VALUES
		(@Name
		,@Subject
		,@Template
		,@TabModuleID
		,@PortalID
		,@LanguageLocale
		,@Type
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetEmailTemplateByID
	@TemplateID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		ET.*
	FROM
		{databaseOwner}{objectQualifier}Smith_EmailTemplateSC ET
	WHERE
		ET.[TemplateID] = @TemplateID
		AND ET.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetEmailTemplateByName
	@Name NVARCHAR(50) = NULL,
	@Type NVARCHAR(150) = NULL,
	@LanguageLocale NVARCHAR(20) = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT TOP 1
		ET.*
	FROM
		{databaseOwner}{objectQualifier}Smith_EmailTemplateSC ET
	WHERE
		ET.[Name] = @Name
		AND ET.[Type] = @Type
		AND ET.[LanguageLocale] = @LanguageLocale
		AND (ET.[StoreID] = @StoreID OR ET.[TabModuleID] = @StoreID)
		AND ET.[PortalID] = @PortalID
	ORDER BY
		ET.[TemplateID] DESC
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListEmailTemplates
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		ET.*
	FROM
		{databaseOwner}{objectQualifier}Smith_EmailTemplateSC ET
	WHERE
		(ET.[StoreID] = @StoreID OR ET.[TabModuleID] = @StoreID)
		AND ET.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateEmailTemplate
	@TemplateID INT = NULL,
	@Name NVARCHAR(50) = NULL,
	@Subject NVARCHAR(50) = NULL,
	@Template NTEXT = NULL,
	@TabModuleID INT = NULL,
	@PortalID INT = NULL,
	@LanguageLocale NVARCHAR(20) = NULL,
	@Type NVARCHAR(150) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_EmailTemplateSC
	SET
		[Name] = @Name,
		[Subject] = @Subject,
		[Template] = @Template,
		[TabModuleID] = @TabModuleID,
		[PortalID] = @PortalID,
		[LanguageLocale] = @LanguageLocale,
		[Type] = @Type,
		[StoreID] = @StoreID
	WHERE
		[TemplateID] = @TemplateID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteEmailTemplate
	@TemplateID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_EmailTemplateSC
	WHERE
		[TemplateID] = @TemplateID
		AND [PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateInvoiceTemplate
	@Name NVARCHAR(100) = NULL,
	@Template NTEXT = NULL,
	@PortalID INT = NULL,
	@LanguageLocale NVARCHAR(20) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_InvoiceTemplate
		([Name]
		,[Template]
		,[PortalID]
		,[LanguageLocale]
		,[StoreID])
	VALUES
		(@Name
		,@Template
		,@PortalID
		,@LanguageLocale
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetInvoiceTemplateByID
	@TemplateID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		IT.*
	FROM
		{databaseOwner}{objectQualifier}Smith_InvoiceTemplate IT
	WHERE
		IT.[TemplateID] = @TemplateID
		AND IT.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetInvoiceTemplateByName
	@Name NVARCHAR(100) = NULL,
	@LanguageLocale NVARCHAR(20) = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT TOP 1
		IT.*
	FROM
		{databaseOwner}{objectQualifier}Smith_InvoiceTemplate IT
	WHERE
		IT.[Name] = @Name
		AND IT.[LanguageLocale] = @LanguageLocale
		AND IT.[StoreID] = @StoreID
		AND IT.[PortalID] = @PortalID
	ORDER BY
		IT.[TemplateID] DESC
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListInvoiceTemplates
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		IT.*
	FROM
		{databaseOwner}{objectQualifier}Smith_InvoiceTemplate IT
	WHERE
		IT.[StoreID] = @StoreID
		AND IT.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateInvoiceTemplate
	@TemplateID INT = NULL,
	@Name NVARCHAR(100) = NULL,
	@Template NTEXT = NULL,
	@PortalID INT = NULL,
	@LanguageLocale NVARCHAR(20) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_InvoiceTemplate
	SET
		[Name] = @Name,
		[Template] = @Template,
		[PortalID] = @PortalID,
		[LanguageLocale] = @LanguageLocale,
		[StoreID] = @StoreID
	WHERE
		[TemplateID] = @TemplateID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteInvoiceTemplate
	@TemplateID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_InvoiceTemplate
	WHERE
		[TemplateID] = @TemplateID
		AND [PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateCategory
	@CategoryName VARCHAR(50) = NULL,
	@SortOrder INT = NULL,
	@Share BIT = NULL,
	@TabModuleId INT = NULL,
	@ParentID INT = NULL,
	@PortalID INT = NULL,
	@CatSEOURL VARCHAR(50) = NULL,
	@CatDescription NTEXT = NULL,
	@ShowCategoryRole BIT = NULL,
	@MinOrderAmount MONEY = NULL,
	@MinOrderQty INT = NULL,
	@DepartmentID INT = NULL,
	@Featured BIT = NULL,
	@CatImage NVARCHAR(500) = NULL,
	@BreadCrumb NVARCHAR(200) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_Category
		([CategoryName]
		,[SortOrder]
		,[Share]
		,[TabModuleId]
		,[ParentID]
		,[PortalID]
		,[CatSEOURL]
		,[CatDescription]
		,[ShowCategoryRole]
		,[MinOrderAmount]
		,[MinOrderQty]
		,[DepartmentID]
		,[Featured]
		,[CatImage]
		,[BreadCrumb]
		,[StoreID])
	VALUES
		(@CategoryName
		,@SortOrder
		,@Share
		,@TabModuleId
		,@ParentID
		,@PortalID
		,@CatSEOURL
		,@CatDescription
		,@ShowCategoryRole
		,@MinOrderAmount
		,@MinOrderQty
		,@DepartmentID
		,@Featured
		,@CatImage
		,@BreadCrumb
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetCategoryByID
	@CategoryID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		C.*
	FROM
		{databaseOwner}{objectQualifier}Smith_Category C
	WHERE
		C.[CategoryID] = @CategoryID
		AND C.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateCategory
	@CategoryID INT = NULL,
	@CategoryName VARCHAR(50) = NULL,
	@SortOrder INT = NULL,
	@Share BIT = NULL,
	@TabModuleId INT = NULL,
	@ParentID INT = NULL,
	@PortalID INT = NULL,
	@CatSEOURL VARCHAR(50) = NULL,
	@CatDescription NTEXT = NULL,
	@ShowCategoryRole BIT = NULL,
	@MinOrderAmount MONEY = NULL,
	@MinOrderQty INT = NULL,
	@DepartmentID INT = NULL,
	@Featured BIT = NULL,
	@CatImage NVARCHAR(500) = NULL,
	@BreadCrumb NVARCHAR(200) = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_Category
	SET
		[CategoryName] = CategoryName,
		[SortOrder] = @SortOrder,
		[Share] = @Share,
		[TabModuleId] = @TabModuleId,
		[ParentID] = @ParentID,
		[PortalID] = @PortalID,
		[CatSEOURL] = @CatSEOURL,
		[CatDescription] = @CatDescription,
		[ShowCategoryRole] = @ShowCategoryRole,
		[MinOrderAmount] = @MinOrderAmount,
		[MinOrderQty] = @MinOrderQty,
		[DepartmentID] = @DepartmentID,
		[Featured] = @Featured,
		[CatImage] = @CatImage,
		[BreadCrumb] = @BreadCrumb,
		[StoreID] = @StoreID
	WHERE
		[CategoryID] = @CategoryID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteCategory
	@CategoryID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_Category
	WHERE
		[CategoryID] = @CategoryID
		AND [PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateManufacturer
	@ManufacturerName NVARCHAR(50) = NULL,
	@PortalID INT = NULL,
	@FirstName NVARCHAR(50) = NULL,
	@LastName NVARCHAR(50) = NULL,
	@Address1 NVARCHAR(50) = NULL,
	@Address2 NVARCHAR(50) = NULL,
	@City NVARCHAR(50) = NULL,
	@State NVARCHAR(50) = NULL,
	@Country NVARCHAR(50) = NULL,
	@Zip VARCHAR(50) = NULL,
	@Phone VARCHAR(50) = NULL,
	@Fax VARCHAR(50) = NULL,
	@Email VARCHAR(50) = NULL,
	@IDNumber VARCHAR(50) = NULL,
	@ContactName NVARCHAR(75) = NULL,
	@Description NVARCHAR(100) = NULL,
	@Occupation NVARCHAR(50) = NULL,
	@Comments NTEXT = NULL,
	@AccountNumber VARCHAR(50) = NULL,
	@RoutingNumber VARCHAR(50) = NULL,
	@Share BIT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_Manufacturer
		([ManufacturerName]
		,[PortalID]
		,[FirstName]
		,[LastName]
		,[Address1]
		,[Address2]
		,[City]
		,[State]
		,[Country]
		,[Zip]
		,[Phone]
		,[Fax]
		,[Email]
		,[IDNumber]
		,[ContactName]
		,[Description]
		,[Occupation]
		,[Comments]
		,[AccountNumber]
		,[RoutingNumber]
		,[Share]
		,[StoreID])
	VALUES
		(@ManufacturerName
		,@PortalID
		,@FirstName
		,@LastName
		,@Address1
		,@Address2
		,@City
		,@State
		,@Country
		,@Zip
		,@Phone
		,@Fax
		,@Email
		,@IDNumber
		,@ContactName
		,@Description
		,@Occupation
		,@Comments
		,@AccountNumber
		,@RoutingNumber
		,@Share
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetManufacturerByID
	@ManufacturerID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		M.*
	FROM
		{databaseOwner}{objectQualifier}Smith_Manufacturer M
	WHERE
		M.[ManufacturerID] = @ManufacturerID
		AND M.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListManufacturers
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		M.*
	FROM
		{databaseOwner}{objectQualifier}Smith_Manufacturer M
	WHERE
		(M.[StoreID] = @StoreID OR M.[Share] = 1)
		AND M.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateManufacturer
	@ManufacturerID INT = NULL,
	@ManufacturerName NVARCHAR(50) = NULL,
	@PortalID INT = NULL,
	@FirstName NVARCHAR(50) = NULL,
	@LastName NVARCHAR(50) = NULL,
	@Address1 NVARCHAR(50) = NULL,
	@Address2 NVARCHAR(50) = NULL,
	@City NVARCHAR(50) = NULL,
	@State NVARCHAR(50) = NULL,
	@Country NVARCHAR(50) = NULL,
	@Zip VARCHAR(50) = NULL,
	@Phone VARCHAR(50) = NULL,
	@Fax VARCHAR(50) = NULL,
	@Email VARCHAR(50) = NULL,
	@IDNumber VARCHAR(50) = NULL,
	@ContactName NVARCHAR(75) = NULL,
	@Description NVARCHAR(100) = NULL,
	@Occupation NVARCHAR(50) = NULL,
	@Comments NTEXT = NULL,
	@AccountNumber VARCHAR(50) = NULL,
	@RoutingNumber VARCHAR(50) = NULL,
	@Share BIT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_Manufacturer
	SET
		[ManufacturerName] = @ManufacturerName,
		[PortalID] = @PortalID,
		[FirstName] = @FirstName,
		[LastName] = @LastName,
		[Address1] = @Address1,
		[Address2] = @Address2,
		[City] = @City,
		[State] = @State,
		[Country] = @Country,
		[Zip] = @Zip,
		[Phone] = @Phone,
		[Fax] = @Fax,
		[Email] = @Email,
		[IDNumber] = @IDNumber,
		[ContactName] = @ContactName,
		[Description] = @Description,
		[Occupation] = @Occupation,
		[Comments] = @Comments,
		[AccountNumber] = @AccountNumber,
		[RoutingNumber] = @RoutingNumber,
		[Share] = @Share,
		[StoreID] = @StoreID
	WHERE
		[ManufacturerID] = @ManufacturerID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteManufacturer
	@ManufacturerID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_Manufacturer
	WHERE
		[ManufacturerID] = @ManufacturerID
		AND [PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductCategory
	@CategoryID INT = NULL,
	@ProductID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_CategoryProduct
		([CategoryID]
		,[ProductID])
	VALUES
		(@CategoryID
		,@ProductID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListProductCategories
	@ProductID INT = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		CP.*
	FROM
		{databaseOwner}{objectQualifier}Smith_CategoryProduct CP
	INNER JOIN
		{databaseOwner}{objectQualifier}Smith_Products P
	ON
		P.[ProductID] = CP.[ProductID]
	WHERE
		CP.[ProductID] = @ProductID
		AND (P.[StoreID] = @StoreID OR P.[TabModuleId] = @StoreID OR P.[Share] = 1)
		AND P.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListProductStoreCategories
	@ProductID INT = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		C.*
	FROM
		{databaseOwner}{objectQualifier}Smith_Category C
	INNER JOIN
		{databaseOwner}{objectQualifier}Smith_CategoryProduct CP
	ON
		CP.[CategoryID] = C.[CategoryID]
	WHERE
		CP.[ProductID] = @ProductID
		AND (C.[StoreID] = @StoreID OR C.[TabModuleId] = @StoreID OR C.[Share] = 1)
		AND C.[PortalID] = @PortalID
	ORDER BY
		C.[SortOrder] ASC, C.[ParentID] ASC
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductCategory
	@ID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE CP FROM
		{databaseOwner}{objectQualifier}Smith_CategoryProduct CP
	INNER JOIN
		{databaseOwner}{objectQualifier}Smith_Category C
	ON
		C.[CategoryID] = CP.[CategoryID]
	WHERE
		CP.[ID] = @ID
		AND C.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ClearProductCategories
	@ProductID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE CP FROM
		{databaseOwner}{objectQualifier}Smith_CategoryProduct CP
	INNER JOIN
		{databaseOwner}{objectQualifier}Smith_Products P
	ON
		P.[ProductID] = CP.[ProductID]
	WHERE
		P.[ProductID] = @ProductID
		AND P.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProduct
	@Manufacturer NVARCHAR(50) = NULL,
	@ModelNumber NVARCHAR(50) = NULL,
	@ModelName NVARCHAR(200) = NULL,
	@UnitCost MONEY = NULL,
	@QuantityOnHand INT = NULL,
	@Summary NVARCHAR(1000) = NULL,
	@Description NTEXT = NULL,
	@DownloadUrl NVARCHAR(1000) = NULL,
	@Featured BIT = NULL,
	@Archived BIT = NULL,
	@Weight DECIMAL(12,2) = NULL,
	@SortOrder INT = NULL,
	@ExcludeCoupon BIT = NULL,
	@Items INT = NULL,
	@Share BIT = NULL,
	@TabModuleId INT = NULL,
	@CreatedByUser NVARCHAR(100) = NULL,
	@CreatedDate DATETIME = NULL,
	@LogicallyDeleted BIT = NULL,
	@Recurring BIT = NULL,
	@SubscriptionInterval VARCHAR(50) = NULL,
	@RecurringOccurances INT = NULL,
	@UrlGUID VARCHAR(1000) = NULL,
	@EncryptUrl BIT = NULL,
	@AddDNNRole BIT = NULL,
	@RequireLogin BIT = NULL,
	@MasterBundleID INT = NULL,
	@BundleID INT = NULL,
	@RoleExpireDays NVARCHAR(500) = NULL,
	@MemberPrice MONEY = NULL,
	@TaxExempt BIT = NULL,
	@PortalID INT = NULL,
	@ShipCodes VARCHAR(100) = NULL,
	@ShipText NVARCHAR(500) = NULL,
	@AffiliateURL NVARCHAR(1000) = NULL,
	@TitleTag VARCHAR(85) = NULL,
	@DescriptionTag NVARCHAR(200) = NULL,
	@KeywordTag NVARCHAR(300) = NULL,
	@ShipCost MONEY = NULL,
	@RequireCoupon BIT = NULL,
	@Description2 NTEXT = NULL,
	@Description3 NTEXT = NULL,
	@Description4 NTEXT = NULL,
	@Description5 NTEXT = NULL,
	@TabName1 VARCHAR(50) = NULL,
	@TabName2 VARCHAR(50) = NULL,
	@TabName3 VARCHAR(50) = NULL,
	@TabName4 VARCHAR(50) = NULL,
	@TabName5 VARCHAR(50) = NULL,
	@AutoGUID BIT = NULL,
	@SEOURL VARCHAR(80) = NULL,
	@HideThumbnail BIT = NULL,
	@HidePrice BIT = NULL,
	@AltTag1 VARCHAR(150) = NULL,
	@AltTag2 VARCHAR(150) = NULL,
	@AltTag3 VARCHAR(150) = NULL,
	@AltTag4 VARCHAR(150) = NULL,
	@AltTag5 VARCHAR(150) = NULL,
	@AltTag6 VARCHAR(150) = NULL,
	@PriceClass VARCHAR(20) = NULL,
	@MinOrderQty INT = NULL,
	@ChargeHandling BIT = NULL,
	@LeadTime VARCHAR(50) = NULL,
	@HideQuantity BIT = NULL,
	@PriceUnits NVARCHAR(50) = NULL,
	@MaxOrderQty INT = NULL,
	@Width INT = NULL,
	@Height INT = NULL,
	@Length INT = NULL,
	@RecurringStartDate VARCHAR(15) = NULL,
	@ExcludeVariantRecur BIT = NULL,
	@WholesalePrice MONEY = NULL,
	@SalePrice MONEY = NULL,
	@HideProduct BIT = NULL,
	@RemoveDNNRole VARCHAR(70) = NULL,
	@ShowProductRole BIT = NULL,
	@TaxRate FLOAT = NULL,
	@Upsell BIT = NULL,
	@EnableTrial BIT = NULL,
	@TrialInterval VARCHAR(50) = NULL,
	@TrialOccurences VARCHAR(50) = NULL,
	@TrialAmount MONEY = NULL,
	@UseCompanyLogo BIT = NULL,
	@UserEnteredAmount BIT = NULL,
	@Booking BIT = NULL,
	@BookingUnits NVARCHAR(100) = NULL,
	@RecurStartDateSetup VARCHAR(50) = NULL,
	@UpdatedDate DATETIME = NULL,
	@ProductDetailUrl NVARCHAR(1000) = NULL,
	@GiftCard BIT = NULL,
	@TaxableAmount MONEY = NULL,
	@SaleStartDate DATETIME = NULL,
	@SaleEndDate DATETIME = NULL,
	@CompareGroup NVARCHAR(150) = NULL,
	@ProductTypeID INT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_Products
		([Manufacturer]
		,[ModelNumber]
		,[ModelName]
		,[UnitCost]
		,[QuantityOnHand]
		,[Summary]
		,[Description]
		,[DownloadUrl]
		,[Featured]
		,[Archived]
		,[Weight]
		,[SortOrder]
		,[ExcludeCoupon]
		,[Items]
		,[Share]
		,[TabModuleId]
		,[CreatedByUser]
		,[CreatedDate]
		,[LogicallyDeleted]
		,[Recurring]
		,[SubscriptionInterval]
		,[RecurringOccurances]
		,[UrlGUID]
		,[EncryptUrl]
		,[AddDNNRole]
		,[RequireLogin]
		,[MasterBundleID]
		,[BundleID]
		,[RoleExpireDays]
		,[MemberPrice]
		,[TaxExempt]
		,[PortalID]
		,[ShipCodes]
		,[ShipText]
		,[AffiliateURL]
		,[TitleTag]
		,[DescriptionTag]
		,[KeywordTag]
		,[ShipCost]
		,[RequireCoupon]
		,[Description2]
		,[Description3]
		,[Description4]
		,[Description5]
		,[TabName1]
		,[TabName2]
		,[TabName3]
		,[TabName4]
		,[TabName5]
		,[AutoGUID]
		,[SEOURL]
		,[HideThumbnail]
		,[HidePrice]
		,[AltTag1]
		,[AltTag2]
		,[AltTag3]
		,[AltTag4]
		,[AltTag5]
		,[AltTag6]
		,[PriceClass]
		,[MinOrderQty]
		,[ChargeHandling]
		,[LeadTime]
		,[HideQuantity]
		,[PriceUnits]
		,[MaxOrderQty]
		,[Width]
		,[Height]
		,[Length]
		,[RecurringStartDate]
		,[ExcludeVariantRecur]
		,[WholesalePrice]
		,[SalePrice]
		,[HideProduct]
		,[RemoveDNNRole]
		,[ShowProductRole]
		,[TaxRate]
		,[Upsell]
		,[EnableTrial]
		,[TrialInterval]
		,[TrialOccurences]
		,[TrialAmount]
		,[UseCompanyLogo]
		,[UserEnteredAmount]
		,[Booking]
		,[BookingUnits]
		,[RecurStartDateSetup]
		,[UpdatedDate]
		,[ProductDetailUrl]
		,[GiftCard]
		,[TaxableAmount]
		,[SaleStartDate]
		,[SaleEndDate]
		,[CompareGroup]
		,[ProductTypeID]
		,[StoreID])
	VALUES
		(@Manufacturer
		,@ModelNumber
		,@ModelName
		,@UnitCost
		,@QuantityOnHand
		,@Summary
		,@Description
		,@DownloadUrl
		,@Featured
		,@Archived
		,@Weight
		,@SortOrder
		,@ExcludeCoupon
		,@Items
		,@Share
		,@TabModuleId
		,@CreatedByUser
		,@CreatedDate
		,@LogicallyDeleted
		,@Recurring
		,@SubscriptionInterval
		,@RecurringOccurances
		,@UrlGUID
		,@EncryptUrl
		,@AddDNNRole
		,@RequireLogin
		,@MasterBundleID
		,@BundleID
		,@RoleExpireDays
		,@MemberPrice
		,@TaxExempt
		,@PortalID
		,@ShipCodes
		,@ShipText
		,@AffiliateURL
		,@TitleTag
		,@DescriptionTag
		,@KeywordTag
		,@ShipCost
		,@RequireCoupon
		,@Description2
		,@Description3
		,@Description4
		,@Description5
		,@TabName1
		,@TabName2
		,@TabName3
		,@TabName4
		,@TabName5
		,@AutoGUID
		,@SEOURL
		,@HideThumbnail
		,@HidePrice
		,@AltTag1
		,@AltTag2
		,@AltTag3
		,@AltTag4
		,@AltTag5
		,@AltTag6
		,@PriceClass
		,@MinOrderQty
		,@ChargeHandling
		,@LeadTime
		,@HideQuantity
		,@PriceUnits
		,@MaxOrderQty
		,@Width
		,@Height
		,@Length
		,@RecurringStartDate
		,@ExcludeVariantRecur
		,@WholesalePrice
		,@SalePrice
		,@HideProduct
		,@RemoveDNNRole
		,@ShowProductRole
		,@TaxRate
		,@Upsell
		,@EnableTrial
		,@TrialInterval
		,@TrialOccurences
		,@TrialAmount
		,@UseCompanyLogo
		,@UserEnteredAmount
		,@Booking
		,@BookingUnits
		,@RecurStartDateSetup
		,@UpdatedDate
		,@ProductDetailUrl
		,@GiftCard
		,@TaxableAmount
		,@SaleStartDate
		,@SaleEndDate
		,@CompareGroup
		,@ProductTypeID
		,@StoreID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProduct
	@ProductID INT = NULL,
	@Manufacturer NVARCHAR(50) = NULL,
	@ModelNumber NVARCHAR(50) = NULL,
	@ModelName NVARCHAR(200) = NULL,
	@UnitCost MONEY = NULL,
	@QuantityOnHand INT = NULL,
	@Summary NVARCHAR(1000) = NULL,
	@Description NTEXT = NULL,
	@DownloadUrl NVARCHAR(1000) = NULL,
	@Featured BIT = NULL,
	@Archived BIT = NULL,
	@Weight DECIMAL(12,2) = NULL,
	@SortOrder INT = NULL,
	@ExcludeCoupon BIT = NULL,
	@Items INT = NULL,
	@Share BIT = NULL,
	@TabModuleId INT = NULL,
	@CreatedByUser NVARCHAR(100) = NULL,
	@CreatedDate DATETIME = NULL,
	@LogicallyDeleted BIT = NULL,
	@Recurring BIT = NULL,
	@SubscriptionInterval VARCHAR(50) = NULL,
	@RecurringOccurances INT = NULL,
	@UrlGUID VARCHAR(1000) = NULL,
	@EncryptUrl BIT = NULL,
	@AddDNNRole BIT = NULL,
	@RequireLogin BIT = NULL,
	@MasterBundleID INT = NULL,
	@BundleID INT = NULL,
	@RoleExpireDays NVARCHAR(500) = NULL,
	@MemberPrice MONEY = NULL,
	@TaxExempt BIT = NULL,
	@PortalID INT = NULL,
	@ShipCodes VARCHAR(100) = NULL,
	@ShipText NVARCHAR(500) = NULL,
	@AffiliateURL NVARCHAR(1000) = NULL,
	@TitleTag VARCHAR(85) = NULL,
	@DescriptionTag NVARCHAR(200) = NULL,
	@KeywordTag NVARCHAR(300) = NULL,
	@ShipCost MONEY = NULL,
	@RequireCoupon BIT = NULL,
	@Description2 NTEXT = NULL,
	@Description3 NTEXT = NULL,
	@Description4 NTEXT = NULL,
	@Description5 NTEXT = NULL,
	@TabName1 VARCHAR(50) = NULL,
	@TabName2 VARCHAR(50) = NULL,
	@TabName3 VARCHAR(50) = NULL,
	@TabName4 VARCHAR(50) = NULL,
	@TabName5 VARCHAR(50) = NULL,
	@AutoGUID BIT = NULL,
	@SEOURL VARCHAR(80) = NULL,
	@HideThumbnail BIT = NULL,
	@HidePrice BIT = NULL,
	@AltTag1 VARCHAR(150) = NULL,
	@AltTag2 VARCHAR(150) = NULL,
	@AltTag3 VARCHAR(150) = NULL,
	@AltTag4 VARCHAR(150) = NULL,
	@AltTag5 VARCHAR(150) = NULL,
	@AltTag6 VARCHAR(150) = NULL,
	@PriceClass VARCHAR(20) = NULL,
	@MinOrderQty INT = NULL,
	@ChargeHandling BIT = NULL,
	@LeadTime VARCHAR(50) = NULL,
	@HideQuantity BIT = NULL,
	@PriceUnits NVARCHAR(50) = NULL,
	@MaxOrderQty INT = NULL,
	@Width INT = NULL,
	@Height INT = NULL,
	@Length INT = NULL,
	@RecurringStartDate VARCHAR(15) = NULL,
	@ExcludeVariantRecur BIT = NULL,
	@WholesalePrice MONEY = NULL,
	@SalePrice MONEY = NULL,
	@HideProduct BIT = NULL,
	@RemoveDNNRole VARCHAR(70) = NULL,
	@ShowProductRole BIT = NULL,
	@TaxRate FLOAT = NULL,
	@Upsell BIT = NULL,
	@EnableTrial BIT = NULL,
	@TrialInterval VARCHAR(50) = NULL,
	@TrialOccurences VARCHAR(50) = NULL,
	@TrialAmount MONEY = NULL,
	@UseCompanyLogo BIT = NULL,
	@UserEnteredAmount BIT = NULL,
	@Booking BIT = NULL,
	@BookingUnits NVARCHAR(100) = NULL,
	@RecurStartDateSetup VARCHAR(50) = NULL,
	@UpdatedDate DATETIME = NULL,
	@ProductDetailUrl NVARCHAR(1000) = NULL,
	@GiftCard BIT = NULL,
	@TaxableAmount MONEY = NULL,
	@SaleStartDate DATETIME = NULL,
	@SaleEndDate DATETIME = NULL,
	@CompareGroup NVARCHAR(150) = NULL,
	@ProductTypeID INT = NULL,
	@StoreID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_Products
	SET
		[Manufacturer] = @Manufacturer,
		[ModelNumber] = @ModelNumber,
		[ModelName] = @ModelName,
		[UnitCost] = @UnitCost,
		[QuantityOnHand] = @QuantityOnHand,
		[Summary] = @Summary,
		[Description] = @Description,
		[DownloadUrl] = @DownloadUrl,
		[Featured] = @Featured,
		[Archived] = @Archived,
		[Weight] = @Weight,
		[SortOrder] = @SortOrder,
		[ExcludeCoupon] = @ExcludeCoupon,
		[Items] = @Items,
		[Share] = @Share,
		[TabModuleId] = @TabModuleId,
		[CreatedByUser] = @CreatedByUser,
		[CreatedDate] = @CreatedDate,
		[LogicallyDeleted] = @LogicallyDeleted,
		[Recurring] = @Recurring,
		[SubscriptionInterval] = @SubscriptionInterval,
		[RecurringOccurances] = @RecurringOccurances,
		[UrlGUID] = @UrlGUID,
		[EncryptUrl] = @EncryptUrl,
		[AddDNNRole] = @AddDNNRole,
		[RequireLogin] = @RequireLogin,
		[MasterBundleID] = @MasterBundleID,
		[BundleID] = @BundleID,
		[RoleExpireDays] = @RoleExpireDays,
		[MemberPrice] = @MemberPrice,
		[TaxExempt] = @TaxExempt,
		[PortalID] = @PortalID,
		[ShipCodes] = @ShipCodes,
		[ShipText] = @ShipText,
		[AffiliateURL] = @AffiliateURL,
		[TitleTag] = @TitleTag,
		[DescriptionTag] = @DescriptionTag,
		[KeywordTag] = @KeywordTag,
		[ShipCost] = @ShipCost,
		[RequireCoupon] = @RequireCoupon,
		[Description2] = @Description2,
		[Description3] = @Description3,
		[Description4] = @Description4,
		[Description5] = @Description5,
		[TabName1] = @TabName1,
		[TabName2] = @TabName2,
		[TabName3] = @TabName3,
		[TabName4] = @TabName4,
		[TabName5] = @TabName5,
		[AutoGUID] = @AutoGUID,
		[SEOURL] = @SEOURL,
		[HideThumbnail] = @HideThumbnail,
		[HidePrice] = @HidePrice,
		[AltTag1] = @AltTag1,
		[AltTag2] = @AltTag2,
		[AltTag3] = @AltTag3,
		[AltTag4] = @AltTag4,
		[AltTag5] = @AltTag5,
		[AltTag6] = @AltTag6,
		[PriceClass] = @PriceClass,
		[MinOrderQty] = @MinOrderQty,
		[ChargeHandling] = @ChargeHandling,
		[LeadTime] = @LeadTime,
		[HideQuantity] = @HideQuantity,
		[PriceUnits] = @PriceUnits,
		[MaxOrderQty] = @MaxOrderQty,
		[Width] = @Width,
		[Height] = @Height,
		[Length] = @Length,
		[RecurringStartDate] = @RecurringStartDate,
		[ExcludeVariantRecur] = @ExcludeVariantRecur,
		[WholesalePrice] = @WholesalePrice,
		[SalePrice] = @SalePrice,
		[HideProduct] = @HideProduct,
		[RemoveDNNRole] = @RemoveDNNRole,
		[ShowProductRole] = @ShowProductRole,
		[TaxRate] = @TaxRate,
		[Upsell] = @Upsell,
		[EnableTrial] = @EnableTrial,
		[TrialInterval] = @TrialInterval,
		[TrialOccurences] = @TrialOccurences,
		[TrialAmount] = @TrialAmount,
		[UseCompanyLogo] = @UseCompanyLogo,
		[UserEnteredAmount] = @UserEnteredAmount,
		[Booking] = @Booking,
		[BookingUnits] = @BookingUnits,
		[RecurStartDateSetup] = @RecurStartDateSetup,
		[UpdatedDate] = @UpdatedDate,
		[ProductDetailUrl] = @ProductDetailUrl,
		[GiftCard] = @GiftCard,
		[TaxableAmount] = @TaxableAmount,
		[SaleStartDate] = @SaleStartDate,
		[SaleEndDate] = @SaleEndDate,
		[CompareGroup] = @CompareGroup,
		[ProductTypeID] = @ProductTypeID,
		[StoreID] = @StoreID
	WHERE
		[ProductID] = @ProductID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProduct
	@ProductID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_Products
	WHERE
		[ProductID] = @ProductID
		AND [PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductII
	@ProductID INT = NULL,
	@ShowOrderAsIs BIT = NULL,
	@Ecard BIT = NULL,
	@BinLocation NVARCHAR(150) = NULL,
	@NumberOfBoxes NVARCHAR(50) = NULL,
	@DateAddedToInventory DATETIME = NULL,
	@Client NVARCHAR(200) = NULL,
	@Owner NVARCHAR(200) = NULL,
	@ShowDatePicker BIT = NULL,
	@ShowTimePicker BIT = NULL,
	@ProductFlags BIGINT = NULL,
	@MinPartialAmount DECIMAL(18,2) = NULL,
	@BookingFields VARCHAR(16) = NULL,
	@BookingDuration VARCHAR(32) = NULL,
	@MinBookingDuration INT = NULL,
	@MaxBookingDuration INT = NULL,
	@FirstBookingDate INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_Products2
		([ProductID]
		,[ShowOrderAsIs]
		,[Ecard]
		,[BinLocation]
		,[NumberOfBoxes]
		,[DateAddedToInventory]
		,[Client]
		,[Owner]
		,[ShowDatePicker]
		,[ShowTimePicker]
		,[ProductFlags]
		,[MinPartialAmount]
		,[BookingFields]
		,[BookingDuration]
		,[MinBookingDuration]
		,[MaxBookingDuration]
		,[FirstBookingDate])
	VALUES
		(@ProductID
		,@ShowOrderAsIs
		,@Ecard
		,@BinLocation
		,@NumberOfBoxes
		,@DateAddedToInventory
		,@Client
		,@Owner
		,@ShowDatePicker
		,@ShowTimePicker
		,@ProductFlags
		,@MinPartialAmount
		,@BookingFields
		,@BookingDuration
		,@MinBookingDuration
		,@MaxBookingDuration
		,@FirstBookingDate)
	SELECT @ProductID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductII
	@ProductID INT = NULL,
	@ShowOrderAsIs BIT = NULL,
	@Ecard BIT = NULL,
	@BinLocation NVARCHAR(150) = NULL,
	@NumberOfBoxes NVARCHAR(50) = NULL,
	@DateAddedToInventory DATETIME = NULL,
	@Client NVARCHAR(200) = NULL,
	@Owner NVARCHAR(200) = NULL,
	@ShowDatePicker BIT = NULL,
	@ShowTimePicker BIT = NULL,
	@ProductFlags BIGINT = NULL,
	@MinPartialAmount DECIMAL(18,2) = NULL,
	@BookingFields VARCHAR(50) = NULL,
	@BookingDuration VARCHAR(50) = NULL,
	@MinBookingDuration INT = NULL,
	@MaxBookingDuration INT = NULL,
	@FirstBookingDate INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_Products2
	SET
		[ShowOrderAsIs] = @ShowOrderAsIs,
		[Ecard] = @Ecard,
		[BinLocation] = @BinLocation,
		[NumberOfBoxes] = @NumberOfBoxes,
		[DateAddedToInventory] = @DateAddedToInventory,
		[Client] = @Client,
		[Owner] = @Owner,
		[ShowDatePicker] = @ShowDatePicker,
		[ShowTimePicker] = @ShowTimePicker,
		[ProductFlags] = @ProductFlags,
		[MinPartialAmount] = @MinPartialAmount,
		[BookingFields] = @BookingFields,
		[BookingDuration] = @BookingDuration,
		[MinBookingDuration] = @MinBookingDuration,
		[MaxBookingDuration] = @MaxBookingDuration,
		[FirstBookingDate] = @FirstBookingDate
	WHERE
		[ProductID] = @ProductID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductII
	@ProductID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_Products2
	WHERE
		[ProductID] = @ProductID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductImage
	@ProductID INT = NULL,
	@SortOrder INT = NULL,
	@ThumbImage NVARCHAR(500) = NULL,
	@LargeImage NVARCHAR(500) = NULL,
	@ZoomImage NVARCHAR(500) = NULL,
	@Title NVARCHAR(100) = NULL,
	@AltTag NVARCHAR(200) = NULL,
	@Status SMALLINT = NULL,
	@CreatedByUser NVARCHAR(100) = NULL,
	@PortalID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_ProductImages
		([ProductID]
		,[SortOrder]
		,[ThumbImage]
		,[LargeImage]
		,[ZoomImage]
		,[Title]
		,[AltTag]
		,[Status]
		,[CreatedDate]
		,[CreatedByUser]
		,[PortalID])
	VALUES
		(@ProductID
		,@SortOrder
		,@ThumbImage
		,@LargeImage
		,@ZoomImage
		,@Title
		,@AltTag
		,@Status
		,GETDATE()
		,@CreatedByUser
		,@PortalID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductImage
	@ID INT = NULL,
	@SortOrder INT = NULL,
	@ThumbImage NVARCHAR(500) = NULL,
	@LargeImage NVARCHAR(500) = NULL,
	@ZoomImage NVARCHAR(500) = NULL,
	@Title NVARCHAR(100) = NULL,
	@AltTag NVARCHAR(200) = NULL,
	@Status SMALLINT = NULL,
	@ModifiedByUser NVARCHAR(100) = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_ProductImages
	SET
		[SortOrder] = @SortOrder,
		[ThumbImage] = @ThumbImage,
		[LargeImage] = @LargeImage,
		[ZoomImage] = @ZoomImage,
		[Title] = @Title,
		[AltTag] = @AltTag,
		[Status] = @Status,
		[ModifiedDate] = GETDATE(),
		[ModifiedByUser] = @ModifiedByUser
	WHERE
		[ID] = @ID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductImage
	@ID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_ProductImages
	WHERE
		[ID] = @ID
		AND [PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductVariantGroup
	@ProductID INT = NULL,
	@VariantGroup VARCHAR(50) = NULL,
	@VariantHelpURL VARCHAR(150) = NULL,
	@PortalID INT = NULL,
	@Hide BIT = NULL,
	@GroupDescription NVARCHAR(50) = NULL,
	@SortOrder INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_ProductVariantGroup
		([ProductID]
		,[VariantGroup]
		,[VariantHelpURL]
		,[PortalId]
		,[Hide]
		,[GroupDescription]
		,[SortOrder])
	VALUES
		(@ProductID
		,@VariantGroup
		,@VariantHelpURL
		,@PortalID
		,@Hide
		,@GroupDescription
		,@SortOrder)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetProductVariantGroupByID
	@VariantGroupID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		PVG.*
	FROM
		{databaseOwner}{objectQualifier}Smith_ProductVariantGroup PVG
	WHERE
		PVG.[VariantGroupID] = @VariantGroupID
		AND PVG.[PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductVariantGroup
	@VariantGroupID INT = NULL,
	@ProductID INT = NULL,
	@VariantGroup VARCHAR(50) = NULL,
	@VariantHelpURL VARCHAR(150) = NULL,
	@PortalID INT = NULL,
	@Hide BIT = NULL,
	@GroupDescription NVARCHAR(50) = NULL,
	@SortOrder INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_ProductVariantGroup
	SET
		[ProductID] = @ProductID,
		[VariantGroup] = @VariantGroup,
		[VariantHelpURL] = @VariantHelpURL,
		[PortalId] = @PortalID,
		[Hide] = @Hide,
		[GroupDescription] = @GroupDescription,
		[SortOrder] = @SortOrder
	WHERE
		[VariantGroupID] = @VariantGroupID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductVariantGroup
	@VariantGroupID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_ProductVariantGroup
	WHERE
		[VariantGroupID] = @VariantGroupID
		AND [PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductVariant
	@ProductID INT = NULL,
	@VariantGroup VARCHAR(50) = NULL,
	@VariantName VARCHAR(50) = NULL,
	@VariantImage NVARCHAR(500) = NULL,
	@PriceAdjustment MONEY = NULL,
	@WeightAdjustment FLOAT = NULL,
	@SortOrder INT = NULL,
	@PortalId INT = NULL,
	@VariantRequired BIT = NULL,
	@VariantDisplayType VARCHAR(50) = NULL,
	@VariantGroupID INT = NULL,
	@Sku VARCHAR(50) = NULL,
	@QtyOnHand INT = NULL,
	@ConditionalGroupID INT = NULL,
	@VariantZoomImage NVARCHAR(200) = NULL,
	@VariantIconImage NVARCHAR(200) = NULL,
	@DropDownImageOption VARCHAR(50) = NULL,
	@IconImageOption VARCHAR(50) = NULL,
	@RenderTextInImage BIT = NULL,
	@LifecycleStatus VARCHAR(50) = NULL,
	@EnablePriceAdjustment BIT = NULL,
	@SalePrice MONEY = NULL,
	@Notes NVARCHAR(500) = NULL,
	@FeaturedVariant BIT = NULL,
	@TaxableAmount MONEY = NULL,
	@PriceType VARCHAR(50) = NULL,
	@VariantDesc VARCHAR(50) = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_ProductVariant
		([ProductID]
		,[VariantGroup]
		,[VariantName]
		,[VariantImage]
		,[PriceAdjustment]
		,[WeightAdjustment]
		,[SortOrder]
		,[PortalId]
		,[VariantRequired]
		,[VariantDisplayType]
		,[VariantGroupID]
		,[Sku]
		,[QtyOnHand]
		,[ConditionalGroupID]
		,[VariantZoomImage]
		,[VariantIconImage]
		,[DropDownImageOption]
		,[IconImageOption]
		,[RenderTextInImage]
		,[LifecycleStatus]
		,[EnablePriceAdjustment]
		,[SalePrice]
		,[Notes]
		,[FeaturedVariant]
		,[TaxableAmount]
		,[PriceType]
		,[VariantDesc])
	VALUES
		(@ProductID
		,@VariantGroup
		,@VariantName
		,@VariantImage
		,@PriceAdjustment
		,@WeightAdjustment
		,@SortOrder
		,@PortalId
		,@VariantRequired
		,@VariantDisplayType
		,@VariantGroupID
		,@Sku
		,@QtyOnHand
		,@ConditionalGroupID
		,@VariantZoomImage
		,@VariantIconImage
		,@DropDownImageOption
		,@IconImageOption
		,@RenderTextInImage
		,@LifecycleStatus
		,@EnablePriceAdjustment
		,@SalePrice
		,@Notes
		,@FeaturedVariant
		,@TaxableAmount
		,@PriceType
		,@VariantDesc)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductVariant
	@VariantID INT = NULL,
	@ProductID INT = NULL,
	@VariantGroup VARCHAR(50) = NULL,
	@VariantName VARCHAR(50) = NULL,
	@VariantImage NVARCHAR(500) = NULL,
	@PriceAdjustment MONEY = NULL,
	@WeightAdjustment FLOAT = NULL,
	@SortOrder INT = NULL,
	@PortalId INT = NULL,
	@VariantRequired BIT = NULL,
	@VariantDisplayType VARCHAR(50) = NULL,
	@VariantGroupID INT = NULL,
	@Sku VARCHAR(50) = NULL,
	@QtyOnHand INT = NULL,
	@ConditionalGroupID INT = NULL,
	@VariantZoomImage NVARCHAR(200) = NULL,
	@VariantIconImage NVARCHAR(200) = NULL,
	@DropDownImageOption VARCHAR(50) = NULL,
	@IconImageOption VARCHAR(50) = NULL,
	@RenderTextInImage BIT = NULL,
	@LifecycleStatus VARCHAR(50) = NULL,
	@EnablePriceAdjustment BIT = NULL,
	@SalePrice MONEY = NULL,
	@Notes NVARCHAR(500) = NULL,
	@FeaturedVariant BIT = NULL,
	@TaxableAmount MONEY = NULL,
	@PriceType VARCHAR(50) = NULL,
	@VariantDesc VARCHAR(50) = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_ProductVariant
	SET
		[ProductID] = @ProductID,
		[VariantGroup] = @VariantGroup,
		[VariantName] = @VariantName,
		[VariantImage] = @VariantImage,
		[PriceAdjustment] = @PriceAdjustment,
		[WeightAdjustment] = @WeightAdjustment,
		[SortOrder] = @SortOrder,
		[PortalId] = @PortalId,
		[VariantRequired] = @VariantRequired,
		[VariantDisplayType] = @VariantDisplayType,
		[VariantGroupID] = @VariantGroupID,
		[Sku] = @Sku,
		[QtyOnHand] = @QtyOnHand,
		[ConditionalGroupID] = @ConditionalGroupID,
		[VariantZoomImage] = @VariantZoomImage,
		[VariantIconImage] = @VariantIconImage,
		[DropDownImageOption] = @DropDownImageOption,
		[IconImageOption] = @IconImageOption,
		[RenderTextInImage] = @RenderTextInImage,
		[LifecycleStatus] = @LifecycleStatus,
		[EnablePriceAdjustment] = @EnablePriceAdjustment,
		[SalePrice] = @SalePrice,
		[Notes] = @Notes,
		[FeaturedVariant] = @FeaturedVariant,
		[TaxableAmount] = @TaxableAmount,
		[PriceType] = @PriceType,
		[VariantDesc] = @VariantDesc
	WHERE
		[VariantID] = @VariantID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductVariant
	@VariantID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_ProductVariant
	WHERE
		[VariantID] = @VariantID
		AND [PortalID] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateVariantConditionalGroup
	@VariantID INT = NULL,
	@VariantGroupID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_VariantConditionalGroup
		([VariantID]
		,[VariantGroupID])
	VALUES
		(@VariantID
		,@VariantGroupID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ClearVariantConditionalGroups
	@VariantID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_VariantConditionalGroup
	WHERE
		[VariantID] = @VariantID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductQuantityDiscount
	@ProductID INT = NULL,
	@QtyFrom INT = NULL,
	@QtyTo INT = NULL,
	@Price MONEY = NULL,
	@AdjustType VARCHAR(50) = NULL,
	@RoleID INT = NULL,
	@PaymentMethod VARCHAR(100) = NULL,
	@DisplayLabel NVARCHAR(50) = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_ProductQtyDiscounts
		([ProductID]
		,[QtyFrom]
		,[QtyTo]
		,[Price]
		,[AdjustType]
		,[RoleID]
		,[PaymentMethod]
		,[DisplayLabel]
		,[TabModuleId]
		,[PortalId])
	VALUES
		(@ProductID
		,@QtyFrom
		,@QtyTo
		,@Price
		,@AdjustType
		,@RoleID
		,@PaymentMethod
		,@DisplayLabel
		,@TabModuleId
		,@PortalID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetProductQuantityDiscountByID
	@QtyDiscountID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		PQD.*
	FROM
		{databaseOwner}{objectQualifier}Smith_ProductQtyDiscounts PQD
	WHERE
		PQD.[QtyDiscountID] = @QtyDiscountID
		AND PQD.[PortalId] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductQuantityDiscount
	@QtyDiscountID INT = NULL,
	@ProductID INT = NULL,
	@QtyFrom INT = NULL,
	@QtyTo INT = NULL,
	@Price MONEY = NULL,
	@AdjustType VARCHAR(50) = NULL,
	@RoleID INT = NULL,
	@PaymentMethod VARCHAR(100) = NULL,
	@DisplayLabel NVARCHAR(50) = NULL,
	@TabModuleId INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_ProductQtyDiscounts
	SET
		[ProductID] = @ProductID,
		[QtyFrom] = @QtyFrom,
		[QtyTo] = @QtyTo,
		[Price] = @Price,
		[AdjustType] = @AdjustType,
		[RoleID] = @RoleID,
		[PaymentMethod] = @PaymentMethod,
		[DisplayLabel] = @DisplayLabel,
		[TabModuleId] = @TabModuleId,
		[PortalId] = @PortalID
	WHERE
		[QtyDiscountID] = @QtyDiscountID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductQuantityDiscount
	@QtyDiscountID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_ProductQtyDiscounts
	WHERE
		[QtyDiscountID] = @QtyDiscountID
		AND [PortalId] = @PortalID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_CreateProductRoleDiscount
	@ProductID INT = NULL,
	@RoleID INT = NULL,
	@DiscountPercent DECIMAL(6,2) = NULL,
	@DiscountAmount MONEY = NULL,
	@UserName NVARCHAR(100) = NULL,
	@PortalID INT = NULL
AS
BEGIN
	INSERT INTO
		{databaseOwner}{objectQualifier}Smith_ProductDiscountsByRole
		([ProductID]
		,[RoleID]
		,[DiscountPercent]
		,[DiscountAmount]
		,[UserName]
		,[PortalID])
	VALUES
		(@ProductID
		,@RoleID
		,@DiscountPercent
		,@DiscountAmount
		,@UserName
		,@PortalID)
	SELECT SCOPE_IDENTITY()
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetProductRoleDiscountByID
	@DiscountID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SELECT
		PRD.*
	FROM
		{databaseOwner}{objectQualifier}Smith_ProductDiscountsByRole PRD
	WHERE
		PRD.[DiscountID] = @DiscountID
		AND (PRD.[PortalID] = @PortalID OR PRD.[PortalID] IS NULL)
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_UpdateProductRoleDiscount
	@DiscountID INT = NULL,
	@ProductID INT = NULL,
	@RoleID INT = NULL,
	@DiscountPercent DECIMAL(6,2) = NULL,
	@DiscountAmount MONEY = NULL,
	@UserName NVARCHAR(100) = NULL,
	@PortalID INT = NULL
AS
BEGIN
	UPDATE
		{databaseOwner}{objectQualifier}Smith_ProductDiscountsByRole
	SET
		[ProductID] = @ProductID,
		[RoleID] = @RoleID,
		[DiscountPercent] = @DiscountPercent,
		[DiscountAmount] = @DiscountAmount,
		[UserName] = @UserName,
		[PortalID] = @PortalID
	WHERE
		[DiscountID] = @DiscountID
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_DeleteProductRoleDiscount
	@DiscountID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	DELETE FROM
		{databaseOwner}{objectQualifier}Smith_ProductDiscountsByRole
	WHERE
		[DiscountID] = @DiscountID
		AND ([PortalID] = @PortalID OR [PortalID] IS NULL)
END
GO



/************************************************************/
/*****               End of Script                      *****/
/************************************************************/