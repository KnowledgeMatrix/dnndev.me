/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/



/************************************************************/
/*****               Create Tables                      *****/
/************************************************************/



/************************************************************/
/*****                  Alter Tables                    *****/
/************************************************************/



/************************************************************/
/*****                Drop Sprocs                       *****/
/************************************************************/
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_GetOrdersStateSummary') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_GetOrdersStateSummary
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}RZC_ListOrdersByFilter') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}{objectQualifier}RZC_ListOrdersByFilter
GO



/************************************************************/
/*****               Create Sprocs                      *****/
/************************************************************/
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_GetOrdersStateSummary
	@Frame VARCHAR(16) = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	;WITH [Summary] ([OrderID], [YearVal], [QuarterVal], [MonthVal], [WeekVal], [DayVal], [StateVal], [TotalVal], [PayVal])
	AS
	(
		SELECT
			O.[OrderID],
			(CASE WHEN @Frame IN ('Yearly', 'Quarterly','Monthly', 'Weekly', 'Daily') THEN YEAR(O.[OrderDate]) ELSE 0 END),
			(CASE WHEN @Frame IN ('Quarterly') THEN DATEPART(QUARTER, O.[OrderDate]) ELSE 0 END),
			(CASE WHEN @Frame IN ('Monthly', 'Daily') THEN MONTH(O.[OrderDate]) ELSE 0 END),
			(CASE WHEN @Frame IN ('Weekly') THEN DATEPART(WEEK, O.[OrderDate]) ELSE 0 END),
			(CASE WHEN @Frame IN ('Daily') THEN DAY(O.[OrderDate]) ELSE 0 END),
			O.[Status], O.[GrandTotal], P.[PaidTotal]
		FROM
			{databaseOwner}{objectQualifier}Smith_StoreOrders O
		OUTER APPLY
		(
			SELECT
				ISNULL(SUM(PH.[Amount]), 0) AS 'PaidTotal'
			FROM
				{databaseOwner}{objectQualifier}Smith_PayHist PH
			WHERE
				PH.[OrderID] = O.[OrderID]
				AND PH.[Success] = 1
		) P
		WHERE
			O.[OrderDate] >= (
				CASE @Frame
				WHEN 'Yearly' THEN DATEADD(YEAR, DATEDIFF(YEAR, 0, GETDATE()), 0)
				WHEN 'Quarterly' THEN DATEADD(QUARTER, DATEDIFF(QUARTER, 0, GETDATE()), 0)
				WHEN 'Monthly' THEN DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0)
				WHEN 'Weekly' THEN DATEADD(WEEK, DATEDIFF(WEEK, 0, GETDATE()), - 1)
				WHEN 'Daily' THEN DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), 0)
				ELSE GETDATE() END
			)
			AND O.[DeletedFlag] <> 1
			AND (O.[StoreID] = @StoreID OR O.[TabModuleID] = @StoreID)
			AND O.[PortalID] = @PortalID
	)
	SELECT TOP 1
		COUNT(CASE WHEN [StateVal] LIKE 'BillMeLater' THEN 1 END) [BillMeLater],
		COUNT(CASE WHEN [StateVal] LIKE 'Open' THEN 1 END) [Open],
		COUNT(CASE WHEN [StateVal] LIKE 'ReadyToShip' THEN 1 END) [ReadyToShip],
		COUNT(CASE WHEN [StateVal] LIKE 'Shipped' THEN 1 END) [Shipped],
		COUNT(CASE WHEN [StateVal] LIKE 'PickedUp' THEN 1 END) [PickedUp],
		COUNT(CASE WHEN [StateVal] LIKE 'Cancelled' THEN 1 END) [Cancelled],
		COUNT(CASE WHEN [StateVal] LIKE 'Incomplete' THEN 1 END) [Incomplete],
		COUNT(CASE WHEN [StateVal] LIKE 'OnHold' THEN 1 END) [OnHold],
		COUNT(CASE WHEN [StateVal] LIKE 'BackOrdered' THEN 1 END) [BackOrdered],
		COUNT(CASE WHEN [StateVal] LIKE 'Returned' THEN 1 END) [Returned],
		COUNT(CASE WHEN [StateVal] LIKE '%' THEN 1 END) [Total],
		COUNT(CASE WHEN [StateVal] <> 'BillMeLater' AND [PayVal] < [TotalVal] THEN 1 END) [Unpaid],
		COALESCE(SUM(CASE WHEN [StateVal] LIKE '%' THEN [TotalVal] END), 0) [Revenue],
		COALESCE(SUM(CASE WHEN [StateVal] LIKE '%' THEN [PayVal] END), 0) [Collected]
	FROM
		[Summary]
	GROUP BY
		[YearVal], [QuarterVal], [MonthVal], [WeekVal], [DayVal]
	ORDER BY
		[YearVal] DESC, [QuarterVal] DESC, [MonthVal] DESC, [WeekVal] DESC, [DayVal] DESC
END
GO
-------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE {databaseOwner}{objectQualifier}RZC_ListOrdersByFilter
	@PageNumber INT = NULL,
	@PageSize INT = NULL,
	@OrderColumn VARCHAR(128) = NULL,
	@OrderDirection VARCHAR(4) = NULL,
	@SearchValue NVARCHAR(256) = NULL,
	@StoreID INT = NULL,
	@PortalID INT = NULL
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @PageRecordStart INT
	DECLARE @PageRecordEnd INT

	SET @PageRecordStart = ((@PageNumber - 1) * @PageSize) + 1
	SET @PageRecordEnd = @PageNumber * @PageSize

	;WITH [OrdersPage] AS
	(
		SELECT
			(
				CASE
					WHEN @OrderColumn = 'Status' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY O.[Status] ASC)
					WHEN @OrderColumn = 'Status' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY O.[Status] DESC)
					WHEN @OrderColumn = 'OrderID' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY O.[OrderID] ASC)
					WHEN @OrderColumn = 'OrderID' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY O.[OrderID] DESC)
					WHEN @OrderColumn = 'OrderDate' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY O.[OrderDate] ASC)
					WHEN @OrderColumn = 'OrderDate' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY O.[OrderDate] DESC)
					WHEN @OrderColumn = 'GrandTotal' AND @OrderDirection = 'ASC' THEN ROW_NUMBER() OVER (ORDER BY O.[GrandTotal] ASC)
					WHEN @OrderColumn = 'GrandTotal' AND @OrderDirection = 'DESC' THEN ROW_NUMBER() OVER (ORDER BY O.[GrandTotal] DESC)
				ELSE ROW_NUMBER() OVER (ORDER BY O.[OrderID] ASC)
				END
			) AS [RowNo], O.*, P.[PaidTotal]
		FROM
			{databaseOwner}{objectQualifier}Smith_StoreOrders O
		OUTER APPLY
		(
			SELECT
				ISNULL(SUM(PH.[Amount]), 0) AS 'PaidTotal'
			FROM
				{databaseOwner}{objectQualifier}Smith_PayHist PH
			WHERE
				PH.[OrderID] = O.[OrderID]
				AND PH.[Success] = 1
		) P
		WHERE
			(O.[StoreID] = @StoreID OR @StoreID = -1)
			AND O.[PortalID] = @PortalID
			AND (
				O.[ShipFirstName] LIKE '%' + @SearchValue + '%'
				OR O.[ShipLastName] LIKE '%' + @SearchValue + '%'
				OR O.[ShipAddress1] LIKE '%' + @SearchValue + '%'
				OR O.[ShipAddress2] LIKE '%' + @SearchValue + '%'
				OR O.[ShipCity] LIKE '%' + @SearchValue + '%'
				OR O.[ShipZipcode] LIKE '%' + @SearchValue + '%'
				OR O.[ShipMethod] LIKE '%' + @SearchValue + '%'
				OR O.[SpecialInstructions] LIKE '%' + @SearchValue + '%'
				OR O.[Status] LIKE '%' + @SearchValue + '%'
				OR O.[Status] IN (SELECT * FROM {databaseOwner}{objectQualifier}RZC_FxSplit(@SearchValue, ','))
				OR ('Unpaid' IN (SELECT * FROM {databaseOwner}{objectQualifier}RZC_FxSplit(@SearchValue, ','))
					AND P.[PaidTotal] < O.[GrandTotal]
				)
			)
	)
	SELECT
		*,
		TotalRecords = (
			SELECT COUNT(*) FROM [OrdersPage]
		),
		MoreRecords = (
			SELECT COUNT(*) FROM [OrdersPage]
			WHERE [RowNo] > @PageRecordEnd
		)
	FROM
		[OrdersPage]
	WHERE
		[RowNo] BETWEEN @PageRecordStart AND @PageRecordEnd
	ORDER BY
		[RowNo];
END
GO



/************************************************************/
/*****               End of Script                      *****/
/************************************************************/