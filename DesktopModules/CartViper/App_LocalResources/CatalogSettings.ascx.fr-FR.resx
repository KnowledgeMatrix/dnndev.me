<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblCatTemplate.Text" xml:space="preserve">
    <value>Modèle du produit:</value>
  </data>
  <data name="lblDefaultCategory.Text" xml:space="preserve">
    <value>Catégorie par défaut:</value>
  </data>
  <data name="lblUseDefaultCategory.Text" xml:space="preserve">
    <value>Comportement Catégorie par défaut:</value>
  </data>
  <data name="lblShowCategoryMsg.Text" xml:space="preserve">
    <value>Message Catégorie Show:</value>
  </data>
  <data name="lblShowProductDetail.Text" xml:space="preserve">
    <value>Détails du produit Voir:</value>
  </data>
  <data name="lblPDSThumbnailWidth.Text" xml:space="preserve">
    <value>Largeur Vignette:</value>
  </data>
  <data name="lblPDSShowThumbnail.Text" xml:space="preserve">
    <value>Vignette Show:</value>
  </data>
  <data name="lblDetailTemplate.Text" xml:space="preserve">
    <value>Modèle Détails:</value>
  </data>
  <data name="lblPPSDetailPage.Text" xml:space="preserve">
    <value>Détail de la page:</value>
  </data>
  <data name="lblCSThumbnailWidth.Text" xml:space="preserve">
    <value>Largeur Vignette:</value>
  </data>
  <data name="lblCSShowThumbnail.Text" xml:space="preserve">
    <value>Vignette Show:</value>
  </data>
  <data name="lblCSRows.Text" xml:space="preserve">
    <value>Rangées:</value>
  </data>
  <data name="lblCSListTemplate.Text" xml:space="preserve">
    <value>Modèle de liste:</value>
  </data>
  <data name="lblCSColumnWidth.Text" xml:space="preserve">
    <value>Largeur de colonne:</value>
  </data>
  <data name="lblCSDetailPage.Text" xml:space="preserve">
    <value>Détail de la page:</value>
  </data>
  <data name="lblPPSListTemplate.Text" xml:space="preserve">
    <value>Modèle de liste:</value>
  </data>
  <data name="lblPPSRows.Text" xml:space="preserve">
    <value>Rangées:</value>
  </data>
  <data name="lblPPSColumns.Text" xml:space="preserve">
    <value>Colonnes:</value>
  </data>
  <data name="lblPPSColumnWidth.Text" xml:space="preserve">
    <value>Largeur de colonne:</value>
  </data>
  <data name="lblPPSShowThumbnail.Text" xml:space="preserve">
    <value>Vignette Show:</value>
  </data>
  <data name="lblPPSThumbnailWidth.Text" xml:space="preserve">
    <value>Largeur Vignette:</value>
  </data>
  <data name="lblCSColumns.Text" xml:space="preserve">
    <value>Colonnes:</value>
  </data>
  <data name="SelectDefaultCategory.Text" xml:space="preserve">
    <value>(None)</value>
  </data>
  <data name="FPLSamePage.Text" xml:space="preserve">
    <value>Même Page</value>
  </data>
  <data name="PPLSamePage.Text" xml:space="preserve">
    <value>Même Page</value>
  </data>
  <data name="CPLSamePage.Text" xml:space="preserve">
    <value>Même Page</value>
  </data>
  <data name="dshGenSettings.Text" xml:space="preserve">
    <value>Paramètres généraux</value>
  </data>
  <data name="dshFeaturedProductList.Text" xml:space="preserve">
    <value>Paramètres du produit vedette</value>
  </data>
  <data name="dshCategoryProductList.Text" xml:space="preserve">
    <value>Paramètres catégorie de produit</value>
  </data>
  <data name="dshProductDetails.Text" xml:space="preserve">
    <value>Détails sur le produit Paramètres</value>
  </data>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>Paramètres du catalogue</value>
  </data>
  <data name="NPLSamePage.Text" xml:space="preserve">
    <value>Même Page</value>
  </data>
  <data name="lblPDSReturnPage.Text" xml:space="preserve">
    <value>Retourner à:</value>
  </data>
  <data name="PDSSamePage.Text" xml:space="preserve">
    <value>Même Page</value>
  </data>
  <data name="lblCSShowPageInfo.Text" xml:space="preserve">
    <value>Page d'infos Voir:</value>
  </data>
  <data name="lblCSShowPageNav.Text" xml:space="preserve">
    <value>Navigation Page Show:</value>
  </data>
  <data name="lblCSContainerTemplate.Text" xml:space="preserve">
    <value>Modèle de récipient:</value>
  </data>
  <data name="lblPPSContainerTemplate.Text" xml:space="preserve">
    <value>Modèle de récipient:</value>
  </data>
  <data name="lblPDSShowReviews.Text" xml:space="preserve">
    <value>Voir les commentaires:</value>
  </data>
  <data name="lblCSRepeatDirection.Text" xml:space="preserve">
    <value>Direction de répétition:</value>
  </data>
  <data name="lblPPSRepeatDirection.Text" xml:space="preserve">
    <value>Direction de répétition:</value>
  </data>
  <data name="RepeatDirectionHoriz.Text" xml:space="preserve">
    <value>Horizontal</value>
  </data>
  <data name="RepeatDirectionVert.Text" xml:space="preserve">
    <value>Vertical</value>
  </data>
  <data name="chkSortCreatedDate.Text" xml:space="preserve">
    <value>Neweset</value>
  </data>
  <data name="chkSortManufacturer.Text" xml:space="preserve">
    <value>Fabricant</value>
  </data>
  <data name="chkSortModelName.Text" xml:space="preserve">
    <value>Nom du modèle</value>
  </data>
  <data name="chkSortModelNumber.Text" xml:space="preserve">
    <value>Numéro de modèle</value>
  </data>
  <data name="chkSortUnitPrice.Text" xml:space="preserve">
    <value>Prix ​​unitaire</value>
  </data>
  <data name="SortAscending.Text" xml:space="preserve">
    <value>Croissant</value>
  </data>
  <data name="SortDescending.Text" xml:space="preserve">
    <value>Descendant</value>
  </data>
  <data name="lblCSSortBy.Text" xml:space="preserve">
    <value>Trier par:</value>
  </data>
  <data name="lblCSSortDir.Text" xml:space="preserve">
    <value>Direction:</value>
  </data>
  <data name="lblCSSubCategories.Text" xml:space="preserve">
    <value>Sous-catégories:</value>
  </data>
  <data name="lblCatTemplate.Help" xml:space="preserve">
    <value>Sélectionnez un modèle pour le catalogue. modèle par défaut est catalog.htm.</value>
  </data>
  <data name="lblCSColumns.Help" xml:space="preserve">
    <value>Entrez le numéro de colonne pour afficher les produits.</value>
  </data>
  <data name="lblCSColumnWidth.Help" xml:space="preserve">
    <value>Entrez la largeur de colonne en pixels. Si la valeur est supérieure à 0, la valeur sera inséré à l'attribut style de la cellule du tableau correspondant. Pour un affichage meilleur contrôle, vous devez définir cette valeur à 0 et utiliser les classes CSS: td.StoreCategoryProductItem et td.StoreCategoryProductAlternatingItem défini dans le fichier StoreFront.css.</value>
  </data>
  <data name="lblCSContainerTemplate.Help" xml:space="preserve">
    <value>Sélectionnez un modèle pour l'emballage du produit catégorie. modèle par défaut est CategoryContainer.htm.</value>
  </data>
  <data name="lblCSDetailPage.Help" xml:space="preserve">
    <value>Sélectionnez la page où est placé le Catalogue Panier Viper module pour afficher le détail du produit. Généralement, c'est la même page, sauf si vous utilisez plusieurs modules panier Catalogue Viper.</value>
  </data>
  <data name="lblCSListTemplate.Help" xml:space="preserve">
    <value>Sélectionnez un modèle pour la liste des produits. modèle par défaut est ProductList.htm.</value>
  </data>
  <data name="lblCSRepeatDirection.Help" xml:space="preserve">
    <value>Sélectionnez la directon pour afficher la liste des produits.</value>
  </data>
  <data name="lblCSRows.Help" xml:space="preserve">
    <value>Entrez le numéro de ligne pour afficher les produits.</value>
  </data>
  <data name="lblCSShowThumbnail.Help" xml:space="preserve">
    <value>Vérifiez affichage des vignettes des produits.</value>
  </data>
  <data name="lblCSSortBy.Help" xml:space="preserve">
    <value>Sélectionnez la colonne produit sur lequel la liste doit être triée.</value>
  </data>
  <data name="lblCSSortDir.Help" xml:space="preserve">
    <value>Sélectionnez le sens du tri.</value>
  </data>
  <data name="lblCSSubCategories.Help" xml:space="preserve">
    <value>Cocher pour inclure dans la liste des produits des sous-catégories de la catégorie sélectionnée.</value>
  </data>
  <data name="lblCSThumbnailWidth.Help" xml:space="preserve">
    <value>Entrez la largeur des vignettes Voir les produits pixel.</value>
  </data>
  <data name="lblDefaultCategory.Help" xml:space="preserve">
    <value>Sélectionnez la catégorie par défaut à afficher.</value>
  </data>
  <data name="lblDetailTemplate.Help" xml:space="preserve">
    <value>Sélectionnez un modèle pour la section de détail du produit. modèle par défaut est ProductDetail.htm.</value>
  </data>
  <data name="lblPDSReturnPage.Help" xml:space="preserve">
    <value>Sélectionnez la page sur le catalogue. Généralement, c'est la même page, sauf si vous utilisez plusieurs modules ViperCatalog panier.</value>
  </data>
  <data name="lblPDSShowReviews.Help" xml:space="preserve">
    <value>Vérifiez les commentaires.</value>
  </data>
  <data name="lblPDSShowThumbnail.Help" xml:space="preserve">
    <value>Vérifiez d'affichage par vignettes produit.</value>
  </data>
  <data name="lblPDSThumbnailWidth.Help" xml:space="preserve">
    <value>Entrez la largeur de la vignette en pixels.</value>
  </data>
  <data name="lblPPSColumns.Help" xml:space="preserve">
    <value>Entrez le numéro de colonne pour afficher les produits.</value>
  </data>
  <data name="lblPPSColumnWidth.Help" xml:space="preserve">
    <value>Entrez la largeur de colonne en pixels. Si la valeur est supérieure à 0, la valeur va être inséré à l'attribut style de la cellule du tableau correspondant. Pour un affichage meilleur contrôle, vous devez définir cette valeur à 0 et utiliser les classes CSS: td.StorePopularProductItem et td.StorePopularProductAlternatingItem défini dans le fichier StoreFront.css.</value>
  </data>
  <data name="lblPPSContainerTemplate.Help" xml:space="preserve">
    <value>Sélectionnez un modèle pour l'emballage du produit populaire. modèle par défaut est ListContainer.htm.</value>
  </data>
  <data name="lblPPSDetailPage.Help" xml:space="preserve">
    <value>Sélectionnez la page où est placé le Catalogue Panier Viper module pour afficher le détail du produit. Généralement, c'est la même page, sauf si vous utilisez plusieurs modules panier Catalogue Viper.</value>
  </data>
  <data name="lblPPSListTemplate.Help" xml:space="preserve">
    <value>Sélectionnez un modèle pour la liste des produits. Gabarits par défaut sont PopularProduct.htm et PopularProduct_Small.htm.</value>
  </data>
  <data name="lblPPSRepeatDirection.Help" xml:space="preserve">
    <value>Sélectionnez la directon pour afficher la liste des produits.</value>
  </data>
  <data name="lblPPSRows.Help" xml:space="preserve">
    <value>Entrez le numéro de ligne pour afficher les produits.</value>
  </data>
  <data name="lblPPSShowThumbnail.Help" xml:space="preserve">
    <value>Vérifiez affichage des vignettes des produits.</value>
  </data>
  <data name="lblPPSThumbnailWidth.Help" xml:space="preserve">
    <value>Entrez la largeur de la vignette en pixels.</value>
  </data>
  <data name="lblShowCategoryMsg.Help" xml:space="preserve">
    <value>À cocher pour afficher le message catégorie.</value>
  </data>
  <data name="lblShowProductDetail.Help" xml:space="preserve">
    <value>Vérifier pour afficher la section Détails du produit.</value>
  </data>
  <data name="lblUseDefaultCategory.Help" xml:space="preserve">
    <value>Sélectionnez la façon dont le catalogue doit se comporter si l'utilisateur consulte la page de catalogue, mais encore n'ont pas sélectionné une catégorie. par exemple, ne rien faire, affichez la catégorie sélectionnée ou afficher tous les produits.</value>
  </data>
  <data name="lblEnableContentIndexing.Help" xml:space="preserve">
    <value>Cochez pour activer l'indexation du contenu par le moteur de recherche DotNetNuke. Si vous utilisez plusieurs module panier Catalogue Viper, vous devriez vérifier ce paramètre pour une unique instance panier Viper module Catalogue. Sinon, vos produits seront indexées deux fois (ou plus) par le moteur de recherche.</value>
  </data>
  <data name="lblEnableContentIndexing.Text" xml:space="preserve">
    <value>Activer l'indexation du contenu:</value>
  </data>
  <data name="lblCPSGIFBgColor.Help" xml:space="preserve">
    <value>Entrez la valeur hexadécimale de la couleur de fond à utiliser avec le format d'image GIF. Les valeurs valides: # FFFFFF, # f00, FF0000, F09, ...</value>
  </data>
  <data name="lblCPSGIFBgColor.Text" xml:space="preserve">
    <value>Contexte GIF:</value>
  </data>
  <data name="lblPDSGIFBgColor.Help" xml:space="preserve">
    <value>Entrez la valeur hexadécimale de la couleur de fond à utiliser avec le format d'image GIF. Les valeurs valides: # FFFFFF, # f00, FF0000, F09, ...</value>
  </data>
  <data name="lblPDSGIFBgColor.Text" xml:space="preserve">
    <value>Contexte GIF:</value>
  </data>
  <data name="lblPPSGIFBgColor.Help" xml:space="preserve">
    <value>Entrez la valeur hexadécimale de la couleur de fond à utiliser avec le format d'image GIF. Les valeurs valides: # FFFFFF, # f00, FF0000, F09, ...</value>
  </data>
  <data name="lblPPSGIFBgColor.Text" xml:space="preserve">
    <value>Contexte GIF:</value>
  </data>
  <data name="lblSSListTemplate.Help" xml:space="preserve">
    <value>Sélectionnez un modèle pour la liste des résultats. Modèles par défaut est SearchResultsList.htm.</value>
  </data>
  <data name="lblSSListTemplate.Text" xml:space="preserve">
    <value>Recherche modèle de résultats:</value>
  </data>
  <data name="lblSSSearchColumn.Help" xml:space="preserve">
    <value>Sélectionnez la colonne de recherche par défaut.</value>
  </data>
  <data name="lblSSSearchColumn.Text" xml:space="preserve">
    <value>Rechercher par:</value>
  </data>
  <data name="chkSearchSummary.Text" xml:space="preserve">
    <value>Sommaire des Produits</value>
  </data>
  <data name="dshSearchProduct.Text" xml:space="preserve">
    <value>Les paramètres de recherche</value>
  </data>
  <data name="lblCSSortColumns.Help" xml:space="preserve">
    <value>Sélectionnez les colonnes autorisées à trier.</value>
  </data>
  <data name="lblCSSortColumns.Text" xml:space="preserve">
    <value>Tri des colonnes:</value>
  </data>
  <data name="lblCSSearchColumns.Help" xml:space="preserve">
    <value>Sélectionnez les colonnes permis de recherche sur le.</value>
  </data>
  <data name="lblCSSearchColumns.Text" xml:space="preserve">
    <value>Colonnes de la recherche:</value>
  </data>
  <data name="lblEnableImageCaching.Help" xml:space="preserve">
    <value>Cochez pour activer la mise en cache l'image. S'il vous plaît décocher lors de la conception du magasin ou vous aurez à attendre pour la durée du cache pour voir vos modifications sur l'image (réglages touchés sont la taille et la couleur de fond pour les images GIF).</value>
  </data>
  <data name="lblEnableImageCaching.Text" xml:space="preserve">
    <value>La mise en cache d'image permettent:</value>
  </data>
  <data name="lblCacheDuration.Help" xml:space="preserve">
    <value>Entrez la durée du cache (en minutes) pour les images. La valeur par défaut: 2 minutes.</value>
  </data>
  <data name="lblCacheDuration.Text" xml:space="preserve">
    <value>Durée du cache:</value>
  </data>
  <data name="dshSortProduct.Text" xml:space="preserve">
    <value>Trier Paramètres</value>
  </data>
  <data name="lblAllowPrint.Help" xml:space="preserve">
    <value>Quand vérifier le réglage du module d'impression par défaut est désactivé. Vous devez ajouter le bouton StorePrint.Action à votre peau contenant de pouvoir utiliser cette fonctionnalité. S'il vous plaît lire le Guide de création de modèles pour plus de détails.</value>
  </data>
  <data name="lblAllowPrint.Text" xml:space="preserve">
    <value>Permettre d'impression?</value>
  </data>
  <data name="lblProductSpecificationTemplate.Help" xml:space="preserve">
    <value>Le modèle que nous devrions utiliser pour afficher les spécifications du produit.</value>
  </data>
  <data name="lblProductSpecificationTemplate.Text" xml:space="preserve">
    <value>Modèle de spécification de produit</value>
  </data>
  <data name="lblEnableDefaultImage.Help" xml:space="preserve">
    <value>Lorsqu'il est activé tous les produits qui n'ont pas une image définie affiche une image par défaut standard.</value>
  </data>
  <data name="lblEnableDefaultImage.Text" xml:space="preserve">
    <value>Image par défaut Activer</value>
  </data>
  <data name="lblLargeImageWidth.Help" xml:space="preserve">
    <value>Taille en pixel de la largeur de l'image en grand</value>
  </data>
  <data name="lblLargeImageWidth.Text" xml:space="preserve">
    <value>Largeur de l'image grand</value>
  </data>
  <data name="lblMediumImageWidth.Help" xml:space="preserve">
    <value>Taille en pixel de la largeur de l'image à moyen</value>
  </data>
  <data name="lblMediumImageWidth.Text" xml:space="preserve">
    <value>Largeur de l'image à moyen</value>
  </data>
  <data name="lblThumbnailImageWidth.Help" xml:space="preserve">
    <value>Taille en pixel de la largeur de l'image miniature</value>
  </data>
  <data name="lblThumbnailImageWidth.Text" xml:space="preserve">
    <value>Largeur de l'image Vignette</value>
  </data>
  <data name="lblRelatedProductsTemplate.Help" xml:space="preserve">
    <value>Le modèle que nous devrions utiliser pour afficher les produits similaires sur le produit la page de détails.</value>
  </data>
  <data name="lblRelatedProductsTemplate.Text" xml:space="preserve">
    <value>Produits connexes Modèle</value>
  </data>
  <data name="lblShowProcSpec.Help" xml:space="preserve">
    <value>Définit si l'on doit afficher l'onglet cahier des charges.</value>
  </data>
  <data name="lblShowProcSpec.Text" xml:space="preserve">
    <value>Afficher les spécifications du produit</value>
  </data>
  <data name="lblReviewProfanityFilter.Help" xml:space="preserve">
    <value>Si les commentaires qui ont choisi jurons en eux, seront acceptés.</value>
  </data>
  <data name="lblReviewProfanityFilter.Text" xml:space="preserve">
    <value>Permettre la relecture Pour contenir Vulgarités</value>
  </data>
  <data name="lblEnableGoToCart.Help" xml:space="preserve">
    <value>Si elle est sélectionnée lorsque l'utilisateur a ajouté un élément à leur panier, ils seront redirigés vers la page du panier.</value>
  </data>
  <data name="lblEnableGoToCart.Text" xml:space="preserve">
    <value>Activer Aller au panier</value>
  </data>
  <data name="lblAjaxCartSuccessNotification.Help" xml:space="preserve">
    <value>Si elle est cochée on affiche un popup javascript modal lorsqu'un élément est ajouté au panier succès. Sinon, nous utilisons un contrôle des tâches pour afficher cette information.</value>
  </data>
  <data name="lblAjaxCartSuccessNotification.Text" xml:space="preserve">
    <value>Activer Popup modale pour le panier Ajax</value>
  </data>
  <data name="rdDefaultAllProducts.Text" xml:space="preserve">
    <value>Tous les produits</value>
  </data>
  <data name="rdDefaultCategory.Text" xml:space="preserve">
    <value>Catégorie par défaut</value>
  </data>
  <data name="rdDefaultNone.Text" xml:space="preserve">
    <value>Aucun</value>
  </data>
  <data name="lblProductBundlesTemplate.Help" xml:space="preserve">
    <value>Le modèle que nous devrions utiliser lors de la sortie du produit faisceaux d'actualisation des données.</value>
  </data>
  <data name="lblProductBundlesTemplate.Text" xml:space="preserve">
    <value>Modèle du produit Bundles</value>
  </data>
  <data name="dshRssFeeds.Text" xml:space="preserve">
    <value>Paramètres de flux RSS</value>
  </data>
  <data name="lblEnableRssFeeds.Help" xml:space="preserve">
    <value>Quand vérifier les flux RSS sont affichées en bas du catalogue du module.</value>
  </data>
  <data name="lblEnableRssFeeds.Text" xml:space="preserve">
    <value>Activer les flux RSS:</value>
  </data>
  <data name="lblRssItemLimit.Help" xml:space="preserve">
    <value>Définit le nombre maximum d'items à afficher dans un flux RSS. Si cette valeur est 0, alors aucune limite sera appliquée.</value>
  </data>
  <data name="lblRssItemLimit.Text" xml:space="preserve">
    <value>Limitation des éléments RSS</value>
  </data>
  <data name="lblProductAnchorName.Help" xml:space="preserve">
    <value>Facultatif nom de l'ancre pour ajouter des liens les détails du produit, ce qui permet de passer directement à une balise d'ancrage dans la page.</value>
  </data>
  <data name="lblProductAnchorName.Text" xml:space="preserve">
    <value>Nom de l'ancre</value>
  </data>
  <data name="lblShowAddVariantCaption.Help" xml:space="preserve">
    <value>Si elle est sélectionnée lors de la visualisation du catalogue de produits et un produit a des variantes, au lieu de montrer la norme bouton ajouter au panier nous allons montrer une image qui explique mieux lactosérum l'utilisateur obtient redirigé vers la page de détails du produit.</value>
  </data>
  <data name="lblShowAddVariantCaption.Text" xml:space="preserve">
    <value>Afficher Ajouter Variant de sous-titrer le panier</value>
  </data>
  <data name="lblPDImageMode.Help" xml:space="preserve">
    <value>Définir le mode utilisé pour afficher les images pour le produit sur la page de détails.</value>
  </data>
  <data name="lblPDImageMode.Text" xml:space="preserve">
    <value>Image Mode</value>
  </data>
  <data name="ProductDetailsImageMode.ModalPopup.Text" xml:space="preserve">
    <value>Modal Popup</value>
  </data>
  <data name="ProductDetailsImageMode.Zoom.Text" xml:space="preserve">
    <value>Image Zoom</value>
  </data>
  <data name="lblDisableStoreForAnonymous.Help" xml:space="preserve">
    <value>Quand elle est cochée, les prix et la caisse des magasins sont désactiver pour les utilisateurs anonymes. Ceci peut être utilisé pour créer un site B2B qui répertorie uniquement les prix pour les utilisateurs authenicated.</value>
  </data>
  <data name="lblDisableStoreForAnonymous.Text" xml:space="preserve">
    <value>Prix ​​Désactiver / Checkout pour Anonymous</value>
  </data>
</root>