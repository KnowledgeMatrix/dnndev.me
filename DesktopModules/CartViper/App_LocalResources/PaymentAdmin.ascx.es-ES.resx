<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSave.Text" xml:space="preserve">
    <value>Ahorrar</value>
  </data>
  <data name="EmptyComboValue.Text" xml:space="preserve">
    <value>--- Seleccione ---</value>
  </data>
  <data name="GatewayNotSelected.Text" xml:space="preserve">
    <value>Por favor selecciona un proveedor de la pasarela.</value>
  </data>
  <data name="lblGateway.Help" xml:space="preserve">
    <value>Pago a los proveedores de puerta de enlace</value>
  </data>
  <data name="lblGateway.Text" xml:space="preserve">
    <value>Pasarela de Pago</value>
  </data>
  <data name="lblAllowOfflinePayment.Help" xml:space="preserve">
    <value>Si es seleccionado, junto con la toma de pago en línea, los usuarios podrán hacer sus pedidos y pagar a través de un método en línea. El pedido será colocado y el estado en "pendientes de pago", una vez que el usuario ha pagado a través de cheque, teléfono, etc, puede actualizar el estado del pedido a "pagado".</value>
  </data>
  <data name="lblAllowOfflinePayment.Text" xml:space="preserve">
    <value>Aceptamos el pago en línea</value>
  </data>
  <data name="lblOffline.Text" xml:space="preserve">
    <value>Opciones de pago fuera de línea.</value>
  </data>
  <data name="lblOnline.Text" xml:space="preserve">
    <value>Opciones de pago en línea</value>
  </data>
  <data name="lblAllowGoogleCheckout.Help" xml:space="preserve">
    <value>Si desea permitir a Google Checkout, además de cualquier otras opciones de pago.</value>
  </data>
  <data name="lblAllowGoogleCheckout.Text" xml:space="preserve">
    <value>Habilitar Google Checkout</value>
  </data>
  <data name="lblGoogleCheckout.Text" xml:space="preserve">
    <value>GoogleCheckout Opciones</value>
  </data>
  <data name="lblGoogleCheckoutNotSupported.Text" xml:space="preserve">
    <value>GoogleCheckout no está disponible para la moneda seleccionada.</value>
  </data>
  <data name="lblHeaderText.Text" xml:space="preserve">
    <value>Configuración de Pasarela de Pago</value>
  </data>
  <data name="lblCheckoutStyle.Text" xml:space="preserve">
    <value>Seleccione Pedido Estilo</value>
  </data>
  <data name="lblChekoutStyle.Help" xml:space="preserve">
    <value>El estilo de caja se presenta al cliente, ya sea una interfaz de estilo de 3 o 4 pasos. Sobre la base de la pasarela de pago seleccionado algunos estilos caja no son compatibles.</value>
  </data>
  <data name="lblChekoutStyle.Text" xml:space="preserve">
    <value>Pedido Estilo</value>
  </data>
  <data name="lblCheckoutSelectionNotValid.Text" xml:space="preserve">
    <value>Esta opción de compra no es compatible con este portal, por favor, elija otro.</value>
  </data>
  <data name="lblEnablePaypalStd.Help" xml:space="preserve">
    <value>Cuando se activa permite al cliente seleccionar PayPal para pagar con su cuenta.</value>
  </data>
  <data name="lblEnablePaypalStd.Text" xml:space="preserve">
    <value>Aceptamos el pago PayPal</value>
  </data>
  <data name="lblPayPalNotSupported.Text" xml:space="preserve">
    <value>Paypal no está disponible para la moneda seleccionada.</value>
  </data>
  <data name="lblPayPalStd.Text" xml:space="preserve">
    <value>PayPal Opciones</value>
  </data>
  <data name="lblDays.Text" xml:space="preserve">
    <value>Días</value>
  </data>
  <data name="lblOnlyAllowRegisteredUsers.Help" xml:space="preserve">
    <value>Si se selecciona sólo los usuarios registrados podrán pagar a través de los medios en línea.</value>
  </data>
  <data name="lblOnlyAllowRegisteredUsers.Text" xml:space="preserve">
    <value>Solo los usuarios registrados</value>
  </data>
  <data name="lblPaymentTerms.Help" xml:space="preserve">
    <value>El número de días que el cliente tendrá que pagar su saldo.</value>
  </data>
  <data name="lblPaymentTerms.Text" xml:space="preserve">
    <value>Condiciones de pago</value>
  </data>
  <data name="lblOfflinePaymentInfo.Text" xml:space="preserve">
    <value>Estos campos son opcionales y permiten controlar si sólo los usuarios registrados se les permite a la caja con el proveedor en línea y para mostrar también el número de días que el cliente tiene que pagar por la orden. &lt;br /&gt;&lt;br /&gt; También se puede especificar si los pedidos realizados en línea deben ser moderado, si se selecciona esta opción una vez que se realiza un pedido que luego tendrá que ser moderado por el administrador del almacén antes de una confirmación de pedido se envía al cliente. Durante la moderación que será capaz de añadir / eliminar elementos de la orden. &lt;br/&gt;&lt;br/&gt; Ver el carro de la Viper manual para más información.</value>
  </data>
  <data name="lblModerateOffline.Help" xml:space="preserve">
    <value>Si se selecciona órdenes en línea tendrá que ser moderado, al seleccionar esta le permitirá editar artículos en el orden antes de que se colocan.</value>
  </data>
  <data name="lblModerateOffline.Text" xml:space="preserve">
    <value>Los pedidos fuera de línea moderada</value>
  </data>
  <data name="lblPostPaidPaymentTerms.Help" xml:space="preserve">
    <value>El número de días que un cliente tiene que pagar su saldo si son "post pago"</value>
  </data>
  <data name="lblPostPaidPaymentTerms.Text" xml:space="preserve">
    <value>Condiciones de pago de pospago</value>
  </data>
</root>