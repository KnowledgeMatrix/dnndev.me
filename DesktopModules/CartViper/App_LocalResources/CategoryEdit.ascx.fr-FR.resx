<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelCategoryName.Text" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="labelCategoryName.Help" xml:space="preserve">
    <value>Convivial nom pour identifier la catégorie.</value>
  </data>
  <data name="labelCategoryDescription.Text" xml:space="preserve">
    <value>Descriptif</value>
  </data>
  <data name="labelCategoryDescription.Help" xml:space="preserve">
    <value>Description complète de l'élément actuel.</value>
  </data>
  <data name="labelArchived.Text" xml:space="preserve">
    <value>Archivé</value>
  </data>
  <data name="labelArchived.Help" xml:space="preserve">
    <value>Indique si l'élément a été archivé et n'est plus actif.</value>
  </data>
  <data name="labelMessage.Text" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="labelMessage.Help" xml:space="preserve">
    <value>Message à être affichée en haut de la liste des catégories.</value>
  </data>
  <data name="labelOrder.Help" xml:space="preserve">
    <value>L'ordre d'affichage de la catégorie dans</value>
  </data>
  <data name="labelOrder.Text" xml:space="preserve">
    <value>Ordre d'affichage</value>
  </data>
  <data name="labelParentCategory.Help" xml:space="preserve">
    <value>La catégorie mère de cette catégorie</value>
  </data>
  <data name="labelParentCategory.Text" xml:space="preserve">
    <value>Parent</value>
  </data>
  <data name="lblRecursionWarning.Text" xml:space="preserve">
    <value>Relation récursive catégorie détecté. S'il vous plaît spécifier un &lt;br/&gt; catégorie parent différent.</value>
  </data>
  <data name="None.Text" xml:space="preserve">
    <value>Aucun</value>
  </data>
  <data name="validatorOrder.Text" xml:space="preserve">
    <value>Erreur! S'il vous plaît entrer une commande valide.</value>
  </data>
  <data name="validatorRequireOrder.Text" xml:space="preserve">
    <value>Ordre d'affichage * est nécessaire.</value>
  </data>
  <data name="ErrorDelete.Text" xml:space="preserve">
    <value>Cette catégorie ne peuvent pas être supprimés! Les causes possibles: un ou plusieurs sous-catégories sont dépendantes. Un ou plusieurs produits sont dépendantes.</value>
  </data>
  <data name="valReqCategoryName.Text" xml:space="preserve">
    <value>Nom de la catégorie * est nécessaire.</value>
  </data>
  <data name="labelCategoryKeywords.Help" xml:space="preserve">
    <value>Saisissez des mots-clés séparés par une virgule. &lt;br/&gt; Cette valeur sera insérée dans le meta keywords &lt;br/&gt; lorsque la page du catalogue est affiché. &lt;br/&gt; La mise en fonction de référencement doit être activé &lt;br/&gt; dans les paramètres du magasin pour travaux.</value>
  </data>
  <data name="labelCategoryKeywords.Text" xml:space="preserve">
    <value>Mots-clés SEO</value>
  </data>
  <data name="lblSeoCategoryName.Help" xml:space="preserve">
    <value>Nom de la catégorie à afficher dans les URL de référencement</value>
  </data>
  <data name="lblSeoCategoryName.Text" xml:space="preserve">
    <value>Nom SEO catégorie d'URL</value>
  </data>
  <data name="revSeoCategoryName.Text" xml:space="preserve">
    <value>* Le champ ne peut contenir que az, 0-9 ou les symboles "_", "-"</value>
  </data>
  <data name="rfvSeoName.Text" xml:space="preserve">
    <value>* Nom de la catégorie SEO URL est requise</value>
  </data>
  <data name="cvSeoCategoryName.Text" xml:space="preserve">
    <value>* Nom de la catégorie Référencement Url n'est pas unique</value>
  </data>
  <data name="lblCategoryRole.Help" xml:space="preserve">
    <value>Si un rôle est assigné ici, cette catégorie et tous les produits dans la catégorie ne sera visible par les utilisateurs de ce rôle. Si aucun rôle n'est spécifié, tous les utilisateurs seront en mesure d'afficher la catégorie.</value>
  </data>
  <data name="lblCategoryRole.Text" xml:space="preserve">
    <value>Rôle Catégorie</value>
  </data>
  <data name="lblCategoryImage.Help" xml:space="preserve">
    <value>L'image qui peut être émis dans l'interface utilisateur pour cette catégorie.</value>
  </data>
  <data name="lblCategoryImage.Text" xml:space="preserve">
    <value>Category Image</value>
  </data>
  <data name="cmdDelete.Text" xml:space="preserve">
    <value>Supprimer la catégorie</value>
  </data>
  <data name="cmdDeleteImage.Text" xml:space="preserve">
    <value>Supprimer l'image Catégorie</value>
  </data>
  <data name="lblPage.Help" xml:space="preserve">
    <value>La page que la catégorie doit être ouverte sur, notez que vous aurez besoin d'une instance du module Panier catalogue Viper sur cette page. Si "aucun" est sélectionné, la catégorie sera affichée sur la page standard panier Catalogue vipère.</value>
  </data>
  <data name="lblPage.Text" xml:space="preserve">
    <value>Page de la catégorie</value>
  </data>
  <data name="TabHidden.Text" xml:space="preserve">
    <value>(Hidden!)</value>
  </data>
</root>