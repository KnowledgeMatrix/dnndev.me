<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblProduct.Text" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="lblPriceHeader.Text" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="lblTotals.Text" xml:space="preserve">
    <value>Cart subtotal:</value>
  </data>
  <data name="lblQty.Text" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="lblSubtotal.Text" xml:space="preserve">
    <value>Line Total</value>
  </data>
  <data name="lblBasketEmpty.Text" xml:space="preserve">
    <value>Your cart is currently empty.</value>
  </data>
  <data name="lblControlHeader.Text" xml:space="preserve">
    <value>Qty Control</value>
  </data>
  <data name="ErrorSettings.Text" xml:space="preserve">
    <value>&lt;b&gt;You can't use this module because the Store doesn't exist yet!&lt;br /&gt;First define Store settings inside the Store Admin module.&lt;/b&gt;</value>
  </data>
  <data name="hypDeleteAll.ToolTip" xml:space="preserve">
    <value>Remove All Items From Cart</value>
  </data>
  <data name="lblCouponCode.Text" xml:space="preserve">
    <value>Coupon Code:</value>
  </data>
  <data name="lblInvalidCoupon.Text" xml:space="preserve">
    <value>Invalid coupon code.</value>
  </data>
  <data name="hyperDeleteAllItemsFromCart.ToolTip" xml:space="preserve">
    <value>Remove All Items From Cart</value>
  </data>
  <data name="hyperSingleAllItemsFromCart.ToolTip" xml:space="preserve">
    <value>Delete Item From Cart</value>
  </data>
  <data name="hypUpdateCartRow.ToolTip" xml:space="preserve">
    <value>Update Cart</value>
  </data>
  <data name="lblCouponEmailAddress.Text" xml:space="preserve">
    <value>Email Address:</value>
  </data>
  <data name="reEmailAddress" xml:space="preserve">
    <value>Invalid email address.</value>
  </data>
  <data name="lblShipping.Text" xml:space="preserve">
    <value>Shipping Est:</value>
  </data>
  <data name="shippingEstCaption.Text" xml:space="preserve">
    <value>Shipping is an estimate until we know your correct shipping address, please continue to the checkout to determine the actual cost</value>
  </data>
  <data name="lblApplyCoupon.Text" xml:space="preserve">
    <value>Apply Coupon</value>
  </data>
  <data name="lblRemoveCoupon.Text" xml:space="preserve">
    <value>Remove Coupon</value>
  </data>
  <data name="lblDiscountAmount.Text" xml:space="preserve">
    <value>Discount:</value>
  </data>
  <data name="freeShippingCoupon.Text" xml:space="preserve">
    <value>Free Shipping</value>
  </data>
  <data name="lblNotesToStore.Text" xml:space="preserve">
    <value>Order Notes:</value>
  </data>
  <data name="lblOrderNotesHelp.Text" xml:space="preserve">
    <value>This textbox allows you to enter notes relating to this order, the notes will be saved alongside this order for the store admin to view. e.g. notes relating to shipping / payment etc.</value>
  </data>
  <data name="lblCouponEmailAddressHelp.Text" xml:space="preserve">
    <value>This coupon has been assigned to an email address, please enter the email address to validate the coupon belongs to you.</value>
  </data>
  <data name="lblCouponHelp.Text" xml:space="preserve">
    <value>Enter the coupon code that has been given to you in order to receive a discount on the items in your cart.</value>
  </data>
  <data name="hypUpdateEntireCart.Text" xml:space="preserve">
    <value>Update All Quantities in Cart</value>
  </data>
  <data name="lblInstorePickupOnly.Text" xml:space="preserve">
    <value>&lt;span class="cvCartInStorePickOnly"&gt;In Store Pickup Only&lt;/span&gt;&lt;br /&gt;</value>
  </data>
  <data name="lblHandlingCharge.Text" xml:space="preserve">
    <value>Handling Charge:</value>
  </data>
  <data name="lblDeleteCart.Text" xml:space="preserve">
    <value>&lt;i class="fa fa-trash fa-lg"&gt;&lt;/i&gt; Empty Cart</value>
  </data>
  <data name="lblDeleteSingleItemFromCart.Text" xml:space="preserve">
    <value>&lt;i class="fa fa-trash fa-lg"&gt;&lt;/i&gt; &lt;span style="font-size:10px;"&gt;Delete Item&lt;/span&gt;</value>
  </data>
  <data name="lblUpdateEntireCart.Text" xml:space="preserve">
    <value>&lt;i class="fa fa-refresh fa-lg"&gt;&lt;/i&gt; Update Cart</value>
  </data>
  <data name="backOrderItemCaption.Text" xml:space="preserve">
    <value>This item is on back order and should be back in stock on {0:d}.</value>
  </data>
  <data name="lblTax.Text" xml:space="preserve">
    <value>Tax Est:</value>
  </data>
  <data name="lblTaxHelp.Text" xml:space="preserve">
    <value>Tax is just an estimate until we know your actual billing address, please continue to checkout to determine the actual amount.</value>
  </data>
  <data name="lblTotal.Text" xml:space="preserve">
    <value>Total:</value>
  </data>
  <data name="lblInvalidQuantity.Text" xml:space="preserve">
    <value>The minimum quantity {0} can be purchased is {1}, this can be made up of the same product with different options. Please update your cart accordingly.</value>
  </data>
  <data name="chkAgreeToStoreTerms.Text" xml:space="preserve">
    <value>I agree to the store terms and conditions</value>
  </data>
  <data name="lblTandcError.Text" xml:space="preserve">
    <value>You must agree to the store's terms and conditions.</value>
  </data>
  <data name="lblTermsHelp.Text" xml:space="preserve">
    <value>Before you are able to checkout you must agree to the store terms and conditions.</value>
  </data>
  <data name="quoteItem.Text" xml:space="preserve">
    <value>Quote</value>
  </data>
  <data name="lblVipProcessing.Text" xml:space="preserve">
    <value>VIP Order Processing - Cost: {0}</value>
  </data>
  <data name="LocalisedVipProcessingCaption.Text" xml:space="preserve">
    <value>By selecting this checkbox it will mean your order is processed faster by the store admin. Todo this you are agreeing to pay the amount displayed.</value>
  </data>
  <data name="lblOnHoldError.Text" xml:space="preserve">
    <value>{0} is on hold and cannot be purchased, please remove it from your cart.</value>
  </data>
</root>