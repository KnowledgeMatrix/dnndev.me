<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddToCart.Text" xml:space="preserve">
    <value>Añadir a la cesta</value>
  </data>
  <data name="AddToCartImg.Text" xml:space="preserve">
    <value>addtocartimg_{0}.gif</value>
  </data>
  <data name="CategoryName.Text" xml:space="preserve">
    <value>Categoría: {0}</value>
  </data>
  <data name="DetailsSEODescription.Text" xml:space="preserve">
    <value>[PRODUCTSUMMARY]</value>
  </data>
  <data name="DetailsSEOKeywords.Text" xml:space="preserve">
    <value>[PRODUCTKEYWORDS]</value>
  </data>
  <data name="DetailsSEOTitle.Text" xml:space="preserve">
    <value>[MANUFACTURER][MODELNAME]en[STORETITLE]</value>
  </data>
  <data name="DetailTitle.Text" xml:space="preserve">
    <value>Detalles del Producto</value>
  </data>
  <data name="DimensionsText.Text" xml:space="preserve">
    <value>Dimensiones: H = {0} {3}, L = {1} {3}, W = {2} {3}</value>
  </data>
  <data name="Edit.Text" xml:space="preserve">
    <value>Edición del producto</value>
  </data>
  <data name="HeightFormat.Text" xml:space="preserve">
    <value>0.00</value>
  </data>
  <data name="HeightText.Text" xml:space="preserve">
    <value>Altura: {0} {1}</value>
  </data>
  <data name="ImageAlt.Text" xml:space="preserve">
    <value>Imagen del producto</value>
  </data>
  <data name="ImageTitle.Text" xml:space="preserve">
    <value>[PRODUCTSUMMARY]</value>
  </data>
  <data name="labelReviews.Text" xml:space="preserve">
    <value>Comentarios</value>
  </data>
  <data name="LengthFormat.Text" xml:space="preserve">
    <value>0.00</value>
  </data>
  <data name="LengthText.Text" xml:space="preserve">
    <value>Duración: {0} {1}</value>
  </data>
  <data name="LinkDetail.Text" xml:space="preserve">
    <value>Más información</value>
  </data>
  <data name="LinkDetailImg.Text" xml:space="preserve">
    <value>linkdetailimg_{0}.gif</value>
  </data>
  <data name="lnkReturn.Text" xml:space="preserve">
    <value>Volver a la categoría</value>
  </data>
  <data name="Manufacturer.Text" xml:space="preserve">
    <value>Fabricante: {0}</value>
  </data>
  <data name="ModelName.Text" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="ModelNumber.Text" xml:space="preserve">
    <value>Número de modelo: {0}</value>
  </data>
  <data name="OOStockRestocking.Text" xml:space="preserve">
    <value>La repoblación en el progreso</value>
  </data>
  <data name="OOStockUnavailable.Text" xml:space="preserve">
    <value>Producto no disponible</value>
  </data>
  <data name="Price.Text" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="PrintDetail.Text" xml:space="preserve">
    <value>Imprimir</value>
  </data>
  <data name="Purchase.Text" xml:space="preserve">
    <value>Comprar ahora!</value>
  </data>
  <data name="PurchaseImg.Text" xml:space="preserve">
    <value>purchaseimg_{0}.gif</value>
  </data>
  <data name="Quantity.Text" xml:space="preserve">
    <value>Cantidad:</value>
  </data>
  <data name="SpecialOffer.Text" xml:space="preserve">
    <value>Se &lt;span class="StoreProductRegularPrice"&gt;{0}&lt;/span&gt; &lt;br /&gt; Ahora &lt;span class="StoreProductSalePrice"&gt;{1}&lt;/span&gt;</value>
  </data>
  <data name="StockQuantity.Text" xml:space="preserve">
    <value>Cantidad disponible: {0}</value>
  </data>
  <data name="Summary.Text" xml:space="preserve">
    <value>{0}</value>
  </data>
  <data name="SurfaceFormat.Text" xml:space="preserve">
    <value>0.00</value>
  </data>
  <data name="SurfaceText.Text" xml:space="preserve">
    <value>Superficie: {0} {1} &lt;sup&gt;2&lt;/sup&gt;</value>
  </data>
  <data name="VATPrice.Text" xml:space="preserve">
    <value>- {0} IVA incl.</value>
  </data>
  <data name="VolumeFormat.Text" xml:space="preserve">
    <value>0.00</value>
  </data>
  <data name="VolumeText.Text" xml:space="preserve">
    <value>Volumen: {0} {1} &lt;sup&gt;3&lt;/sup&gt;</value>
  </data>
  <data name="WeightFormat.Text" xml:space="preserve">
    <value>0.00</value>
  </data>
  <data name="WeightText.Text" xml:space="preserve">
    <value>Peso: {0} {1}</value>
  </data>
  <data name="WidthFormat.Text" xml:space="preserve">
    <value>0.00</value>
  </data>
  <data name="WidthText.Text" xml:space="preserve">
    <value>Ancho: {0} {1}</value>
  </data>
  <data name="AverageRating.Text" xml:space="preserve">
    <value>Valoración media:</value>
  </data>
  <data name="ProductReviews.Text" xml:space="preserve">
    <value>Opiniones del producto</value>
  </data>
  <data name="ProductSpecification.Text" xml:space="preserve">
    <value>Especificación de producto</value>
  </data>
  <data name="NumberInStock.Text" xml:space="preserve">
    <value>En número de archivo: {0}</value>
  </data>
  <data name="taxPrice.Text" xml:space="preserve">
    <value>- {0} impuestos incluidos.</value>
  </data>
  <data name="relatedProducts.Text" xml:space="preserve">
    <value>Productos relacionados</value>
  </data>
  <data name="lblProductHasVariants.Text" xml:space="preserve">
    <value>Este producto tiene variantes y sólo puede ser añadido a la cesta de visualización de la página de detalles del producto.</value>
  </data>
  <data name="SpecialOfferVatTax.Text" xml:space="preserve">
    <value>&lt;div class="StoreSpecialOfferVatTaxPrice"&gt; Se &lt;span class="StoreProductRegularPrice"&gt;{0}&lt;/span&gt; &lt;br /&gt; Ahora &lt;span class="StoreProductVatSalePrice"&gt;{1}&lt;/span&gt; &lt;/div&gt;</value>
  </data>
  <data name="productDiscountBundles.Text" xml:space="preserve">
    <value>Paquetes con descuento</value>
  </data>
  <data name="hypCreateNewWishList.Text" xml:space="preserve">
    <value>Crear Lista Nueva</value>
  </data>
  <data name="ProductSku.Text" xml:space="preserve">
    <value>Referencia del artículo: {0}</value>
  </data>
  <data name="AddToUserComparisionList.Text" xml:space="preserve">
    <value>Añadir a la lista de comparación</value>
  </data>
  <data name="hypProductVisualizer.Text" xml:space="preserve">
    <value>Ver su producto personalizado</value>
  </data>
  <data name="lblCustomizeYourProduct.Text" xml:space="preserve">
    <value>Personaliza tu producto!</value>
  </data>
  <data name="lblMsrp.Text" xml:space="preserve">
    <value>MSRP:</value>
  </data>
  <data name="lblAddToCartVariantCaption.Text" xml:space="preserve">
    <value>&lt;br /&gt; Ver página de detalles que añadir al carrito.</value>
  </data>
  <data name="PdfDataSheetAlt.Text" xml:space="preserve">
    <value>Hoja de datos PDF</value>
  </data>
  <data name="lblDiscountBand.Text" xml:space="preserve">
    <value>&lt;tr&gt;&lt;td&gt;
&lt;span class="qtyDiscountSmall"&gt;Cantidad: {0} +&lt;/span&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;span class="qtyDiscountLarge"&gt;{1} cada uno.&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
</value>
  </data>
  <data name="lblQtyDiscounts.Text" xml:space="preserve">
    <value>Bandas Cantidad de descuento: &lt;br /&gt;</value>
  </data>
  <data name="freeProduct.Text" xml:space="preserve">
    <value>Libre</value>
  </data>
</root>