<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSave.Text" xml:space="preserve">
    <value>Besparen</value>
  </data>
  <data name="dshExpiredCoupons.Text" xml:space="preserve">
    <value>Verlopen Coupons</value>
  </data>
  <data name="lblActiveTokens.Text" xml:space="preserve">
    <value>Actieve Coupons</value>
  </data>
  <data name="lblCanUseMultipleTimes.Help" xml:space="preserve">
    <value>Kan de coupon meerdere keren worden gebruikt.</value>
  </data>
  <data name="lblCanUseMultipleTimes.Text" xml:space="preserve">
    <value>Gebruik kan meerdere keren</value>
  </data>
  <data name="lblCategory.Help" xml:space="preserve">
    <value>De categorie die de coupon moet worden toegepast op alle producten opmerking binnen deze categorie komt in aanmerking voor de korting voor de coupon. Dit betekent korting op alle producten die niet van toepassing in sub-categorieën voor de geselecteerde categorie.</value>
  </data>
  <data name="lblCategory.Text" xml:space="preserve">
    <value>Categorie</value>
  </data>
  <data name="lblCouponBasics.Text" xml:space="preserve">
    <value>Coupons Basics</value>
  </data>
  <data name="lblCouponCode.Help" xml:space="preserve">
    <value>De code zal de gebruiker in te voeren om de coupon te gebruiken.</value>
  </data>
  <data name="lblCouponCode.Text" xml:space="preserve">
    <value>Coupon Code</value>
  </data>
  <data name="lblCouponCodeIsNotUnique.Text" xml:space="preserve">
    <value>De coupon code is niet uniek, geef een andere coupon code.</value>
  </data>
  <data name="lblCouponDateRestriction.Text" xml:space="preserve">
    <value>Coupondatum Beperkingen</value>
  </data>
  <data name="lblCouponRestrictions.Text" xml:space="preserve">
    <value>Coupon Beperkingen</value>
  </data>
  <data name="lblCouponType.Help" xml:space="preserve">
    <value>De aard van de coupon, moet de coupon bijvoorbeeld bieden een monetaire of een percentage korting op de kar subtotaal of het moet de gebruiker recht op gratis verzending.</value>
  </data>
  <data name="lblCouponType.Text" xml:space="preserve">
    <value>Coupon Type</value>
  </data>
  <data name="lblCustomerEmailAddress.Help" xml:space="preserve">
    <value>Hierdoor kan de coupon te beperken tot een opgegeven e-mailadres, de klant moeten we de bijbehorende e-mailadres om deze coupon te verlossen in te voeren.</value>
  </data>
  <data name="lblCustomerEmailAddress.Text" xml:space="preserve">
    <value>Unieke klant e-mail adres</value>
  </data>
  <data name="lblDescription.Help" xml:space="preserve">
    <value>Beschrijving van de coupon.</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Beschrijving</value>
  </data>
  <data name="lblDiscountAmount.Help" xml:space="preserve">
    <value>Het bedrag dat op korting, moet dit worden ingevoerd als een geheel getal, bijv. 50,00 als "percentage kortingsbon" geselecteerd is het bedrag zal worden verdisconteerd in% van het subtotaal anders wordt het een monetaire waarde uit het subtotaal worden. Als echter gratis verzending coupon is geselecteerd deze optie is niet van toepassing.</value>
  </data>
  <data name="lblDiscountAmount.Text" xml:space="preserve">
    <value>Kortingsbedrag</value>
  </data>
  <data name="lblExpiredTokens.Text" xml:space="preserve">
    <value>Verlopen Coupons</value>
  </data>
  <data name="lblExpiryDate.Help" xml:space="preserve">
    <value>Als optie kunt u een vervaldatum voor de coupon, laat leeg als er geen vervaldatum.</value>
  </data>
  <data name="lblExpiryDate.Text" xml:space="preserve">
    <value>Coupon Vervaldatum</value>
  </data>
  <data name="lblHeaderText.Text" xml:space="preserve">
    <value>Store Kortingsbonnen</value>
  </data>
  <data name="lblInfo.Text" xml:space="preserve">
    <value>Coupons kunnen hier worden gemaakt en de codes uitgedeeld aan klanten, die op het moment van afrekenen in staat zal zijn om ze in te voeren om zowel het monetaire of het percentage korting van hun subtotaal of gratis verzending te ontvangen, op voorwaarde dat zij voldoen aan de criteria om de coupon gebruiken die u hebben gedefinieerd. Meer informatie met betrekking tot bonnen zijn te vinden in de winkelwagen Viper handleiding.</value>
  </data>
  <data name="lblInvalidStartDate.Text" xml:space="preserve">
    <value>De start datum niet kan worden na de einddatum.</value>
  </data>
  <data name="lblMinSubTotal.Help" xml:space="preserve">
    <value>Als optie kunt u een minimum subtotaal voordat de coupon kan worden gebruikt, laat leeg indien er geen minimum subtotaal.</value>
  </data>
  <data name="lblMinSubTotal.Text" xml:space="preserve">
    <value>Minimum Subtotaal</value>
  </data>
  <data name="lblNumberTimesUsed.Text" xml:space="preserve">
    <value>No: keer gebruikt</value>
  </data>
  <data name="lblProductSku.Help" xml:space="preserve">
    <value>Als de opgegeven coupon wordt alleen een korting voor het product dat is hier ingevoerd te geven, zullen alle andere producten in rekening worden gebracht tegen het normale tarief.</value>
  </data>
  <data name="lblProductSku.Text" xml:space="preserve">
    <value>Product modelnummer</value>
  </data>
  <data name="lblStartDate.Help" xml:space="preserve">
    <value>Als de opgegeven coupon is niet geldig tot de startdatum is verstreken.</value>
  </data>
  <data name="lblStartDate.Text" xml:space="preserve">
    <value>Coupon Startdatum</value>
  </data>
  <data name="linkDelete.Text" xml:space="preserve">
    <value>Verwijderen</value>
  </data>
  <data name="linkEdit.Text" xml:space="preserve">
    <value>Bewerken</value>
  </data>
  <data name="rdFreeShipping.Text" xml:space="preserve">
    <value>Gratis Bezorging Coupon</value>
  </data>
  <data name="rdMonetaryDiscount.Text" xml:space="preserve">
    <value>Monetaire Kortingsbon</value>
  </data>
  <data name="rdPercentageDiscount.Text" xml:space="preserve">
    <value>Percentage Kortingsbon</value>
  </data>
  <data name="reEmailAddress" xml:space="preserve">
    <value>Ongeldig e-mailadres.</value>
  </data>
</root>