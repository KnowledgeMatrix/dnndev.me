<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnImport.Text" xml:space="preserve">
    <value>Import Produkte</value>
  </data>
  <data name="hypShowHelp.Text" xml:space="preserve">
    <value>Hilfe anzeigen</value>
  </data>
  <data name="importFail.Text" xml:space="preserve">
    <value>Einige Fehler traten während des Imports.</value>
  </data>
  <data name="importSuccess.Text" xml:space="preserve">
    <value>Die Produkte wurden erfolgreich aus der Datei importiert.</value>
  </data>
  <data name="lblCsvFile.Help" xml:space="preserve">
    <value>Wählen Sie die CSV-Datei mit den Produkten in den Speicher zu importieren</value>
  </data>
  <data name="lblCsvFile.Text" xml:space="preserve">
    <value>Wählen Sie CSV-Datei</value>
  </data>
  <data name="lblCsvHelp.Text" xml:space="preserve">
    <value>&lt;p&gt; Die Produkte können in den Warenkorb Viper aus CSV-Dateien importiert werden. Alle csv-Dateien müssen eine Kopfzeile auf der ersten Zeile, das definiert, was jede Spalte in der csv repsents. Beachten Sie, ob ein Produkt während des Imports mit der gleichen Modellbezeichnung das bestehende Produktportfolio wird aktualisiert, anstatt hinzugefügt werden wieder gefunden wird. &lt;/p&gt;

&lt;p&gt; Der Import unterstützt die folgenden Spalten werden alle anderen Spaltennamen ignoriert. &lt;/p&gt;

&lt;table class="csvHelpTable" cellspacing="0" cellpadding="3" border="0"&gt;
&lt;tr&gt;
&lt;td&gt; &lt;strong&gt;Feldname&lt;/strong&gt; &lt;/td&gt;
&lt;td&gt; &lt;strong&gt;Erforderlich&lt;/strong&gt; &lt;/td&gt;
&lt;td&gt; &lt;strong&gt;Typ&lt;/strong&gt; &lt;/td&gt;
&lt;td&gt; &lt;strong&gt;Hinweise&lt;/strong&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Hersteller &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; string (50) &lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Gerätebezeichnung &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; string (50) &lt;/td&gt;
&lt;td&gt; Obwohl dieses Feld nicht erforderlich ist, wenn Sie Ihre Produkte über den Import aktualisieren möchten, muss dieses Feld geliefert, wie dieses Feld ist, wie Cart Viper bestimmt, welches Produkt zu aktualisieren. &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; ModelName &lt;/td&gt;
&lt;td&gt; TRUE &lt;/td&gt;
&lt;td&gt; string (255) &lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; UnitCost &lt;/td&gt;
&lt;td&gt; TRUE &lt;/td&gt;
&lt;td&gt; dezimal &lt;/td&gt;
&lt;td&gt; Dies sollte ohne MwSt. / Steuer &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Zusammenfassung &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; string (1000) &lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Beschreibung &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; Schnur &lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; SeoKeywords &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; Schnur &lt;/td&gt;
&lt;td&gt; Option SEO Keywords für das Produkt zu importieren &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Artikelgewicht &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; dezimal &lt;/td&gt;
&lt;td&gt; Der Standardwert ist Null, wenn nicht im Lieferumfang enthalten &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; ProductHeight &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; dezimal &lt;/td&gt;
&lt;td&gt; Der Standardwert ist Null, wenn nicht im Lieferumfang enthalten &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; ProductLength &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; dezimal &lt;/td&gt;
&lt;td&gt; Der Standardwert ist Null, wenn nicht im Lieferumfang enthalten &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; ProductWidth &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; dezimal &lt;/td&gt;
&lt;td&gt; Der Standardwert ist Null, wenn nicht im Lieferumfang enthalten &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; StockQuantity &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; int &lt;/td&gt;
&lt;td&gt; Der Standardwert ist Null, wenn nicht im Lieferumfang enthalten &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; IsTaxFree &lt;/td&gt;
&lt;td valign="top"&gt; FALSE &lt;/td&gt;
&lt;td valign="top"&gt; ja / nein &lt;/td&gt;
&lt;td&gt; Dies wird nur verwendet, wenn Sie nicht MwSt. Ländern. dh USA. Wenn nicht im Lieferumfang enthalten übernehmen wir nicht von der Steuer befreien. Wenn nicht die Standardeinstellung ist
"Nein" &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; VatRate &lt;/td&gt;
&lt;td valign="top"&gt; FALSE &lt;/td&gt;
&lt;td valign="top"&gt; s / r / z &lt;/td&gt;
&lt;td&gt; Nur verwendet, wenn Land ist MwSt.-Gebiet. Wenn nicht setzen wir standardmäßig auf "s" standardrate. Der Eingang sollte sollte einfach den ersten Buchstaben des Mehrwertsteuersatzes Code. &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; Kategorie &lt;/td&gt;
&lt;td valign="top"&gt; FALSE &lt;/td&gt;
&lt;td valign="top"&gt; Schnur &lt;/td&gt;
&lt;td&gt; Name der Kategorie, um ein Produkt zu ordnen. Eine Kategorie sollte vollständig aufgelistet werden mit jeder übergeordneten Kategorien definiert. Das Format sollte
"Eltern&gt; subcat&gt; myCategory", sollte jeder Kategorie Ebene durch ein "&gt;" aufgeteilt werden. &lt;br/&gt;
Zusätzlich ist es auch möglich, ein Produkt zu mulitple Kategorien zuordnen, indem Sie jede mit einem Semikolon. dh.
"Eltern&gt; subcat&gt; myCategory; Eltern&gt; subcat&gt; othercategory" &lt;br /&gt; Beachten Sie, wenn die Kategorie nicht bereits in der Filiale gibt es dann die Kategorie wird automatisch erstellt und dann das Produkt wird in die neu geschaffene Kategorie zugeordnet werden.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; Image &lt;/td&gt;
&lt;td valign="top"&gt; FALSE &lt;/td&gt;
&lt;td valign="top"&gt; Schnur &lt;/td&gt;
&lt;td&gt; Dateiname des Bildes auf das Produkt zugeordnet werden. &lt;br/&gt;
Zusätzlich ist es auch möglich, ein Produkt zuweisen Bilder durch die Trennung jeweils mit einem Semikolon mulitple. dh.
"Product001.jpg; product001_alternative.jpg" &lt;br/&gt;
Das eigentliche Bild-Datei sollte manuell auf den Ordner Portale / X / CVStoreImages hochgeladen werden, wobei X die aktuelle PortalID
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; IsQuote &lt;/td&gt;
&lt;td valign="top"&gt; FALSE &lt;/td&gt;
&lt;td valign="top"&gt; ja / nein &lt;/td&gt;
&lt;td&gt; Markiert das Element als für Angebot anfordern Funktionalität. Der Standardwert ist "no" &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; IsFreeShipping &lt;/td&gt;
&lt;td valign="top"&gt; FALSE &lt;/td&gt;
&lt;td valign="top"&gt; ja / nein &lt;/td&gt;
&lt;td&gt; Markiert das Element als frei shippinh. Der Standardwert ist "no" &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; IsFreeProduct &lt;/td&gt;
&lt;td valign="top"&gt; FALSE &lt;/td&gt;
&lt;td valign="top"&gt; ja / nein &lt;/td&gt;
&lt;td&gt; Markiert das Element als frei und nicht der Übernahme von Kosten. Der Standardwert ist "no" &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; ProductSku &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; string (50) &lt;/td&gt;
&lt;td&gt; Ein interner Wert zur eindeutigen Identifizierung des Produktes. &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; ProductBarcode &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; string (50) &lt;/td&gt;
&lt;td&gt; Ein interner Wert, mit dem das Produkt-Barcode gespeichert werden. &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; UVP &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; dezimal &lt;/td&gt;
&lt;td&gt; Die Unverbindliche Preisempfehlung des Herstellers. &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Variante1 ... Variant14 &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; Schnur &lt;/td&gt;
&lt;td&gt; Erlaubt den Import der Variante für das Produkt. Siehe Warenkorb Viper Handbuch für Details &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Optionen1 ... Options14 &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; Schnur &lt;/td&gt;
&lt;td&gt; Erlaubt den Import der Variante Optionen für das Produkt. Siehe Warenkorb Viper Handbuch für Details &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Tab1Name ... Tab5Name &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; Schnur &lt;/td&gt;
&lt;td&gt; Erlaubt den Import von bis zu 5 Registerkarten für ein Produkt. Dieses Feld enthält den Namen der Registerkarte &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Tab1Content ... Tab5Content &lt;/td&gt;
&lt;td&gt; FALSE &lt;/td&gt;
&lt;td&gt; Schnur &lt;/td&gt;
&lt;td&gt; Erlaubt den Import von bis zu 5 Registerkarten für ein Produkt. Dieses Feld enthält den Inhalt der Register &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; PDFdataSheet &lt;/td&gt;
&lt;td valign="top"&gt; FALSE &lt;/td&gt;
&lt;td valign="top"&gt; Schnur &lt;/td&gt;
&lt;td&gt; Hier können Sie ein PDF-Dokument als ein Produkt Datenblatt anzuhängen. Das PDF muss bereits auf dem Server in das Portal Home-Verzeichnis vorhanden. Um in der Anlage die Datei "samplePDF.pdf" im Root des Portals Home-Verzeichnis den richtigen Wert für die CSV "samplePDF.pdf" werden würde. Wenn das PDF in einem Unterordner namens "Datenblätter", dann den korrekten Wert wäre "Datenblätter / samplePDF.pdf". Beachten Sie, wenn Sie die PDF-Dateien auf den Server per FTP kopiert haben, dann müssen Sie "Dateien synchronisieren" mit der DNN File Manager zuerst. &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; SupplierName &lt;/td&gt;
&lt;td valign="top"&gt; FALSE &lt;/td&gt;
&lt;td valign="top"&gt; Schnur &lt;/td&gt;
&lt;td&gt; Hier können Sie einen Anbieter mit diesem Produkt zuweisen, beachten muss der Lieferant in den Speicher für das Produkt zugewiesen werden existieren. &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;</value>
  </data>
  <data name="lblHeaderText.Text" xml:space="preserve">
    <value>Import Produkte</value>
  </data>
</root>