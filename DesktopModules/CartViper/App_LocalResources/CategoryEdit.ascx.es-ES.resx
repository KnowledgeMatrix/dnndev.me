<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelCategoryName.Text" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="labelCategoryName.Help" xml:space="preserve">
    <value>Fácil de usar el nombre para identificar la categoría.</value>
  </data>
  <data name="labelCategoryDescription.Text" xml:space="preserve">
    <value>Descripción</value>
  </data>
  <data name="labelCategoryDescription.Help" xml:space="preserve">
    <value>Descripción completa del artículo en cuestión.</value>
  </data>
  <data name="labelArchived.Text" xml:space="preserve">
    <value>Archivado</value>
  </data>
  <data name="labelArchived.Help" xml:space="preserve">
    <value>Indica si el elemento se ha archivado y ya no está activa.</value>
  </data>
  <data name="labelMessage.Text" xml:space="preserve">
    <value>Mensaje</value>
  </data>
  <data name="labelMessage.Help" xml:space="preserve">
    <value>Mensaje que se mostrará en la parte superior de la lista de categorías.</value>
  </data>
  <data name="labelOrder.Help" xml:space="preserve">
    <value>El fin de mostrar la categoría de</value>
  </data>
  <data name="labelOrder.Text" xml:space="preserve">
    <value>Mostrar</value>
  </data>
  <data name="labelParentCategory.Help" xml:space="preserve">
    <value>La categoría principal de esta categoría</value>
  </data>
  <data name="labelParentCategory.Text" xml:space="preserve">
    <value>Padre</value>
  </data>
  <data name="lblRecursionWarning.Text" xml:space="preserve">
    <value>Relación recursiva categoría detectado. Por favor, especifique un &lt;br/&gt; categoría de padres diferentes.</value>
  </data>
  <data name="None.Text" xml:space="preserve">
    <value>Ninguno</value>
  </data>
  <data name="validatorOrder.Text" xml:space="preserve">
    <value>¡Error! Por favor, introduzca una orden válida.</value>
  </data>
  <data name="validatorRequireOrder.Text" xml:space="preserve">
    <value>Orden * Se requiere un.</value>
  </data>
  <data name="ErrorDelete.Text" xml:space="preserve">
    <value>Esta categoría no se puede quitar! Posibles causas: una o más categorías sub son dependientes. Uno o más productos son dependientes.</value>
  </data>
  <data name="valReqCategoryName.Text" xml:space="preserve">
    <value>* Nombre de Categoría es necesario.</value>
  </data>
  <data name="labelCategoryKeywords.Help" xml:space="preserve">
    <value>Introduzca las palabras clave separadas por una coma. &lt;br/&gt; Este valor se inserta en la meta keywords &lt;br/&gt; cuando la página aparece el catálogo. &lt;br/&gt; El ajuste de la función SEO debe estar habilitado &lt;br/&gt; en la configuración del almacén de las obras.</value>
  </data>
  <data name="labelCategoryKeywords.Text" xml:space="preserve">
    <value>SEO Palabras clave</value>
  </data>
  <data name="lblSeoCategoryName.Help" xml:space="preserve">
    <value>Nombre de la categoría que desea mostrar en URL SEO</value>
  </data>
  <data name="lblSeoCategoryName.Text" xml:space="preserve">
    <value>Url SEO Categoría Nombre</value>
  </data>
  <data name="revSeoCategoryName.Text" xml:space="preserve">
    <value>* El campo sólo puede contener az, 0-9 o los símbolos "_", "-"</value>
  </data>
  <data name="rfvSeoName.Text" xml:space="preserve">
    <value>* Url SEO nombre de categoría se requiere</value>
  </data>
  <data name="cvSeoCategoryName.Text" xml:space="preserve">
    <value>* Url SEO nombre de la categoría no es el único</value>
  </data>
  <data name="lblCategoryRole.Help" xml:space="preserve">
    <value>Si se asigna un papel aquí, en esta categoría y todos los productos dentro de la categoría sólo será visible para los usuarios de esta función. Si no se especifica role a todos los usuarios serán capaces de ver la categoría.</value>
  </data>
  <data name="lblCategoryRole.Text" xml:space="preserve">
    <value>Categoría Papel</value>
  </data>
  <data name="lblCategoryImage.Help" xml:space="preserve">
    <value>La imagen que se puede dar salida en la interfaz de usuario para esta categoría.</value>
  </data>
  <data name="lblCategoryImage.Text" xml:space="preserve">
    <value>Categoría de la imagen</value>
  </data>
  <data name="cmdDelete.Text" xml:space="preserve">
    <value>Eliminar categoría</value>
  </data>
  <data name="cmdDeleteImage.Text" xml:space="preserve">
    <value>Eliminar imagen Categoría</value>
  </data>
  <data name="lblPage.Help" xml:space="preserve">
    <value>La página que la categoría se debe abrir a, tenga en cuenta que se necesita una instancia del módulo de catálogo Cesta Viper en esta página. Si "no" se selecciona la categoría se mostrarán en la página del catálogo estándar carrito víbora.</value>
  </data>
  <data name="lblPage.Text" xml:space="preserve">
    <value>Categoría Página</value>
  </data>
  <data name="TabHidden.Text" xml:space="preserve">
    <value>(Hidden!)</value>
  </data>
</root>