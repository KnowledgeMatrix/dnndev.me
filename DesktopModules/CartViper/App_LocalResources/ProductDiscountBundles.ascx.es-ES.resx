<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnAddNewBundle.Text" xml:space="preserve">
    <value>Añadir nuevo paquete</value>
  </data>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="btnDelete.Text" xml:space="preserve">
    <value>Eliminar seleccionados</value>
  </data>
  <data name="btnReturn.Text" xml:space="preserve">
    <value>Volver</value>
  </data>
  <data name="btnSave.Text" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="lblActive.Help" xml:space="preserve">
    <value>Si la casilla de verificación no se ha seleccionado el paquete no se activa y los usuarios no reciben un descuento si compra los artículos en el paquete.</value>
  </data>
  <data name="lblActive.Text" xml:space="preserve">
    <value>Activo</value>
  </data>
  <data name="lblAddEditProductBundleResource.Text" xml:space="preserve">
    <value>Agregar / Editar paquetes de productos con descuento</value>
  </data>
  <data name="lblAddProducts.Text" xml:space="preserve">
    <value>Productos para agregarlo al paquete de descuento</value>
  </data>
  <data name="lblAlreadyAdded.Text" xml:space="preserve">
    <value>Este producto ya se ha agregado al paquete</value>
  </data>
  <data name="lblBundleDescription.Help" xml:space="preserve">
    <value>Una descripción del paquete de oferta de productos</value>
  </data>
  <data name="lblBundleDescription.Text" xml:space="preserve">
    <value>Descripción</value>
  </data>
  <data name="lblBundleDescriptionRequired.Text" xml:space="preserve">
    <value>Requerido</value>
  </data>
  <data name="lblBundleDiscountAmountRequired.Text" xml:space="preserve">
    <value>Requerido</value>
  </data>
  <data name="lblBundleName.Help" xml:space="preserve">
    <value>El nombre que se debe dar a la oferta de productos.</value>
  </data>
  <data name="lblBundleName.Text" xml:space="preserve">
    <value>Descuento nombre del paquete</value>
  </data>
  <data name="lblBundleNameRequired.Text" xml:space="preserve">
    <value>Requerido.</value>
  </data>
  <data name="lblDiscountPercentage.Help" xml:space="preserve">
    <value>El importe% debemos descuento de la suma total de los elementos del paquete. Escriba las cantidades en números enteros: por ejemplo, para un descuento del 20% entre 20 para un descuento del 5% entre 5.</value>
  </data>
  <data name="lblDiscountPercentage.Text" xml:space="preserve">
    <value>Descuento Cantidad Porcentaje</value>
  </data>
  <data name="lblError.Text" xml:space="preserve">
    <value>Por favor, seleccione al menos dos productos para que el paquete de descuento.</value>
  </data>
  <data name="lblExistingBundles.Text" xml:space="preserve">
    <value>Paquetes de productos existentes de descuento</value>
  </data>
  <data name="lblHeaderText.Text" xml:space="preserve">
    <value>Paquetes de productos con descuento</value>
  </data>
  <data name="lblInclude.Text" xml:space="preserve">
    <value>Para seleccionar Eliminar</value>
  </data>
  <data name="lblModelNumber.Help" xml:space="preserve">
    <value>El número de modelo del producto para añadir al paquete de descuento, tenga en cuenta el número de modelo se auto-sugirió.</value>
  </data>
  <data name="lblModelNumber.Text" xml:space="preserve">
    <value>Número de modelo</value>
  </data>
  <data name="lblMultipleProductsWithSameSku.Text" xml:space="preserve">
    <value>Hay varios productos en su tienda con el mismo número de modelo, &lt;br /&gt; asegúrese de que todos los números de modelo están unqiue.</value>
  </data>
  <data name="lblProductName.Text" xml:space="preserve">
    <value>Nombre del producto</value>
  </data>
  <data name="lblProducts.Help" xml:space="preserve">
    <value>A continuación se presentan todos los productos que conforman este paquete de descuento.</value>
  </data>
  <data name="lblProducts.Text" xml:space="preserve">
    <value>En el paquete de productos</value>
  </data>
  <data name="linkDelete.Text" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="linkEdit.Text" xml:space="preserve">
    <value>Editar detalles Bundle</value>
  </data>
  <data name="linkProducts.Text" xml:space="preserve">
    <value>Editar productos en paquete con descuento</value>
  </data>
</root>