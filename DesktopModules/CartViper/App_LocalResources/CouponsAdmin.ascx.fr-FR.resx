<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSave.Text" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="dshExpiredCoupons.Text" xml:space="preserve">
    <value>Coupons expiré</value>
  </data>
  <data name="lblActiveTokens.Text" xml:space="preserve">
    <value>Coupons Actif</value>
  </data>
  <data name="lblCanUseMultipleTimes.Help" xml:space="preserve">
    <value>Peut-coupon être utilisée plusieurs fois.</value>
  </data>
  <data name="lblCanUseMultipleTimes.Text" xml:space="preserve">
    <value>Peut utiliser plusieurs fois</value>
  </data>
  <data name="lblCategory.Help" xml:space="preserve">
    <value>La catégorie que le coupon doit être appliqué à, notez tous les produits de cette catégorie seront admissibles à la remise du coupon. Ceci ne s'applique pas à prix réduits vers des produits de sous-catégories pour la catégorie sélectionnée.</value>
  </data>
  <data name="lblCategory.Text" xml:space="preserve">
    <value>Catégorie</value>
  </data>
  <data name="lblCouponBasics.Text" xml:space="preserve">
    <value>Bases Coupons</value>
  </data>
  <data name="lblCouponCode.Help" xml:space="preserve">
    <value>Le code de l'utilisateur entrera à utiliser le coupon.</value>
  </data>
  <data name="lblCouponCode.Text" xml:space="preserve">
    <value>Le code de coupon</value>
  </data>
  <data name="lblCouponCodeIsNotUnique.Text" xml:space="preserve">
    <value>Le code promo n'est pas unique, s'il vous plaît entrer un code promo différents.</value>
  </data>
  <data name="lblCouponDateRestriction.Text" xml:space="preserve">
    <value>Restrictions date de coupon</value>
  </data>
  <data name="lblCouponRestrictions.Text" xml:space="preserve">
    <value>Restrictions coupon</value>
  </data>
  <data name="lblCouponType.Help" xml:space="preserve">
    <value>Le type de coupon, par exemple, le coupon doit offrir un rabais monétaire ou pourcentage par rapport au panier subtotale ou doit-elle droit à l'utilisateur de la livraison gratuite.</value>
  </data>
  <data name="lblCouponType.Text" xml:space="preserve">
    <value>Type de coupon</value>
  </data>
  <data name="lblCustomerEmailAddress.Help" xml:space="preserve">
    <value>Cela permet le coupon d'être limité à une adresse de courriel donnée, le client nous avons besoin d'entrer l'adresse email correspondant à racheter ce coupon.</value>
  </data>
  <data name="lblCustomerEmailAddress.Text" xml:space="preserve">
    <value>Unique adresse email à la clientèle</value>
  </data>
  <data name="lblDescription.Help" xml:space="preserve">
    <value>Description du coupon.</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Descriptif</value>
  </data>
  <data name="lblDiscountAmount.Help" xml:space="preserve">
    <value>Le montant de rabais, ce qui devrait être saisie comme une ex nombre entier 50.00 si "coupon de réduction en pourcentage" est sélectionné, le montant sera réduit en% du sous-total sinon il sera une valeur monétaire hors du sous-total. Si coupon de transport gratuit est cependant choisi cette option n'est pas applicable.</value>
  </data>
  <data name="lblDiscountAmount.Text" xml:space="preserve">
    <value>Montant du rabais</value>
  </data>
  <data name="lblExpiredTokens.Text" xml:space="preserve">
    <value>Coupons expiré</value>
  </data>
  <data name="lblExpiryDate.Help" xml:space="preserve">
    <value>Vous pouvez éventuellement entrer une date d'expiration du coupon, laisser vide s'il n'ya pas de date d'expiration.</value>
  </data>
  <data name="lblExpiryDate.Text" xml:space="preserve">
    <value>Coupon Date d'expiration</value>
  </data>
  <data name="lblHeaderText.Text" xml:space="preserve">
    <value>Bons de réduction magasin</value>
  </data>
  <data name="lblInfo.Text" xml:space="preserve">
    <value>Les coupons peuvent être créés ici et les codes distribués aux clients, qui au moment de la caisse sera en mesure de les saisir pour recevoir soit la remise monétaire ou pourcentage de leur expédition subtotale ou libre, à condition qu'ils répondent aux critères d'utiliser le coupon que vous avez définis. Plus d'informations relatives aux coupons peuvent être trouvés dans le guide de l'utilisateur panier Viper.</value>
  </data>
  <data name="lblInvalidStartDate.Text" xml:space="preserve">
    <value>La date de début ne peut pas être après la date de fin.</value>
  </data>
  <data name="lblMinSubTotal.Help" xml:space="preserve">
    <value>Vous pouvez éventuellement entrer un minimum subtotale avant le coupon peut être utilisé, laissez en blanc si aucun minimum de sous-total.</value>
  </data>
  <data name="lblMinSubTotal.Text" xml:space="preserve">
    <value>Sous-total minimum</value>
  </data>
  <data name="lblNumberTimesUsed.Text" xml:space="preserve">
    <value>Non: parfois utilisés</value>
  </data>
  <data name="lblProductSku.Help" xml:space="preserve">
    <value>Si le coupon est entré donnera seulement un rabais pour le produit qui a été entré ici, tous les autres produits seront facturés au tarif standard.</value>
  </data>
  <data name="lblProductSku.Text" xml:space="preserve">
    <value>Numéro de modèle de produit</value>
  </data>
  <data name="lblStartDate.Help" xml:space="preserve">
    <value>Si le coupon est entré ne sera pas valable jusqu'à la date de début est passée.</value>
  </data>
  <data name="lblStartDate.Text" xml:space="preserve">
    <value>Date de début coupon</value>
  </data>
  <data name="linkDelete.Text" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="linkEdit.Text" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="rdFreeShipping.Text" xml:space="preserve">
    <value>Coupon Livraison gratuite</value>
  </data>
  <data name="rdMonetaryDiscount.Text" xml:space="preserve">
    <value>Coupon de réduction monétaire</value>
  </data>
  <data name="rdPercentageDiscount.Text" xml:space="preserve">
    <value>Coupon de réduction Pourcentage</value>
  </data>
  <data name="reEmailAddress" xml:space="preserve">
    <value>Adresse email invalide.</value>
  </data>
</root>