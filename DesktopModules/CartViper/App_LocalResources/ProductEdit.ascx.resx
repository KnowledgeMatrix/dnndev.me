<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelManufacturer.Text" xml:space="preserve">
    <value>Manufacturer</value>
  </data>
  <data name="labelManufacturer.Help" xml:space="preserve">
    <value>Manufacturer is the producer of the product.</value>
  </data>
  <data name="labelModelName.Text" xml:space="preserve">
    <value>Product Name</value>
  </data>
  <data name="labelModelName.Help" xml:space="preserve">
    <value>Name of the product.</value>
  </data>
  <data name="labelModelNumber.Text" xml:space="preserve">
    <value>Model Number</value>
  </data>
  <data name="labelModelNumber.Help" xml:space="preserve">
    <value>Model number of the product.</value>
  </data>
  <data name="labelSummary.Text" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="labelSummary.Help" xml:space="preserve">
    <value>Short summary describing the product. If the SEO Feature setting is enabled in the Store settings, the META Description will be replaced by this value when the product details page is displayed.</value>
  </data>
  <data name="labelUnitPrice.Text" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="labelUnitPrice.Help" xml:space="preserve">
    <value>Price of the product per unit.</value>
  </data>
  <data name="labelImage.Text" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="labelImage.Help" xml:space="preserve">
    <value>Image of the product.</value>
  </data>
  <data name="labelCategory.Text" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="labelCategory.Help" xml:space="preserve">
    <value>Category for the product.</value>
  </data>
  <data name="labelArchived.Text" xml:space="preserve">
    <value>Archived</value>
  </data>
  <data name="labelArchived.Help" xml:space="preserve">
    <value>Indicates whether the item has been archived and is no longer active.</value>
  </data>
  <data name="labelFeatured.Help" xml:space="preserve">
    <value>Indicates whether the item is featured.</value>
  </data>
  <data name="labelDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="labelDescription.Help" xml:space="preserve">
    <value>Full description of the product.</value>
  </data>
  <data name="validatorUnitPrice.Text" xml:space="preserve">
    <value>Error! Please enter a valid price.</value>
  </data>
  <data name="labelUnitWeight.Help" xml:space="preserve">
    <value>Enter the shipping weight of the product per unit.  If you use fixed rate shipping, you can leave this field blank.</value>
  </data>
  <data name="labelUnitWeight.Text" xml:space="preserve">
    <value>Shipping Weight</value>
  </data>
  <data name="labelSaleEndDate.Help" xml:space="preserve">
    <value>If this product is on special offer, then enter the end date of the special offer period here.</value>
  </data>
  <data name="labelSaleEndDate.Text" xml:space="preserve">
    <value>Special offer end date</value>
  </data>
  <data name="labelSalePrice.Help" xml:space="preserve">
    <value>If this product is on special offer, then enter the special offer price here.</value>
  </data>
  <data name="labelSalePrice.Text" xml:space="preserve">
    <value>Special offer unit price</value>
  </data>
  <data name="labelSaleStartDate.Help" xml:space="preserve">
    <value>If this product is on special offer, then enter the start date of the special offer period here.</value>
  </data>
  <data name="labelSaleStartDate.Text" xml:space="preserve">
    <value>Special offer start date</value>
  </data>
  <data name="btnClearEndDate.Text" xml:space="preserve">
    <value>Clear end date</value>
  </data>
  <data name="btnClearStartDate.Text" xml:space="preserve">
    <value>Clear start date</value>
  </data>
  <data name="dshSpecialOffer.Text" xml:space="preserve">
    <value>Special Offer Pricing</value>
  </data>
  <data name="validatorRequireUnitPrice.Text" xml:space="preserve">
    <value>* Price is required.</value>
  </data>
  <data name="validatorRequireUnitWeight.Text" xml:space="preserve">
    <value>* Weight is required.</value>
  </data>
  <data name="validatorSalePrice.Text" xml:space="preserve">
    <value>Error! Please enter a valid price.</value>
  </data>
  <data name="validatorUnitWeight.Text" xml:space="preserve">
    <value>Error! Please enter a valid weight.</value>
  </data>
  <data name="labelUnitHeight.Help" xml:space="preserve">
    <value>Enter the shipping height of the product per unit.  If you use fixed rate&lt;br/&gt;shipping, you can leave this field blank.</value>
  </data>
  <data name="labelUnitHeight.Text" xml:space="preserve">
    <value>Shipping Height</value>
  </data>
  <data name="labelUnitLength.Help" xml:space="preserve">
    <value>Enter the shipping length of the product per unit.  If you use fixed rate&lt;br/&gt;shipping, you can leave this field blank.</value>
  </data>
  <data name="labelUnitLength.Text" xml:space="preserve">
    <value>Shipping Length</value>
  </data>
  <data name="labelUnitWidth.Help" xml:space="preserve">
    <value>Enter the shipping width of the product per unit.  If you use fixed rate shipping, you can leave this field blank.</value>
  </data>
  <data name="labelUnitWidth.Text" xml:space="preserve">
    <value>Shipping Width</value>
  </data>
  <data name="validatorRequireUnitHeight.Text" xml:space="preserve">
    <value>* Height is required.</value>
  </data>
  <data name="validatorRequireUnitLength.Text" xml:space="preserve">
    <value>* Length is required.</value>
  </data>
  <data name="validatorRequireUnitWidth.Text" xml:space="preserve">
    <value>* Width is required.</value>
  </data>
  <data name="validatorUnitHeight.Text" xml:space="preserve">
    <value>Error! Please enter a valid height.</value>
  </data>
  <data name="validatorUnitLength.Text" xml:space="preserve">
    <value>Error! Please enter a valid length.</value>
  </data>
  <data name="validatorUnitWidth.Text" xml:space="preserve">
    <value>Error! Please enter a valid width.</value>
  </data>
  <data name="validatorRequireCategory.Text" xml:space="preserve">
    <value>* Category is required.</value>
  </data>
  <data name="labelKeywords.Help" xml:space="preserve">
    <value>Enter keywords separated by a comma.&lt;br/&gt;This value will be inserted in the META Keywords&lt;br/&gt;when the details product page is displayed.&lt;br/&gt;The SEO Feature setting must be enabled&lt;br/&gt;in the Store settings for works.</value>
  </data>
  <data name="labelKeywords.Text" xml:space="preserve">
    <value>SEO Keywords</value>
  </data>
  <data name="labelStockQuantity.Help" xml:space="preserve">
    <value>Available quantity in stock.</value>
  </data>
  <data name="labelStockQuantity.Text" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="validatorRequireStockQuantity.Text" xml:space="preserve">
    <value>* Quantity is required.</value>
  </data>
  <data name="validatorStockQuantity.Text" xml:space="preserve">
    <value>Error! Please enter a valid quantity.</value>
  </data>
  <data name="labelDeliveryTime.Help" xml:space="preserve">
    <value>Delivery Time (in days).</value>
  </data>
  <data name="labelDeliveryTime.Text" xml:space="preserve">
    <value>Delivery Time</value>
  </data>
  <data name="labelHighThreshold.Help" xml:space="preserve">
    <value>Maximum quantity in stock.</value>
  </data>
  <data name="labelHighThreshold.Text" xml:space="preserve">
    <value>High Threshold</value>
  </data>
  <data name="labelLowThreshold.Help" xml:space="preserve">
    <value>Minimum quantity in stock before reorder.</value>
  </data>
  <data name="labelLowThreshold.Text" xml:space="preserve">
    <value>Low Threshold</value>
  </data>
  <data name="validatorDeliveryTime.Text" xml:space="preserve">
    <value>Error! Please enter a number of days.</value>
  </data>
  <data name="validatorHighThreshold.Text" xml:space="preserve">
    <value>Error! Please enter a valid quantity.</value>
  </data>
  <data name="validatorLowThreshold.Text" xml:space="preserve">
    <value>Error! Please enter a valid quantity.</value>
  </data>
  <data name="validatorRequireDeliveryTime.Text" xml:space="preserve">
    <value>* Delivery Time is required.</value>
  </data>
  <data name="validatorRequireHighThreshold.Text" xml:space="preserve">
    <value>* High threshold quantity is required.</value>
  </data>
  <data name="validatorRequireLowThreshold.Text" xml:space="preserve">
    <value>* Low threshold quantity is required.</value>
  </data>
  <data name="dshStockManagement.Text" xml:space="preserve">
    <value>Stock Management</value>
  </data>
  <data name="labelPurchasePrice.Help" xml:space="preserve">
    <value>Purchase price of the product.</value>
  </data>
  <data name="labelPurchasePrice.Text" xml:space="preserve">
    <value>Purchase Price</value>
  </data>
  <data name="validatorPurchasePrice.Text" xml:space="preserve">
    <value>Error! Please enter a valid price.</value>
  </data>
  <data name="validatorRequirePurchasePrice.Text" xml:space="preserve">
    <value>* Purchase price is required.</value>
  </data>
  <data name="EmptyComboValue.Text" xml:space="preserve">
    <value>--- Select ---</value>
  </data>
  <data name="labelRole.Help" xml:space="preserve">
    <value>Select the role to apply to the customer account when  this product is paid. If the order is canceled by the customer or the store administrator, this role will be removed  from the customer account.</value>
  </data>
  <data name="labelRole.Text" xml:space="preserve">
    <value>Apply Role</value>
  </data>
  <data name="confirmDeleteImage.Text" xml:space="preserve">
    <value>Are you sure that you want to delete this image?</value>
  </data>
  <data name="lblUploadImage.Text" xml:space="preserve">
    <value>Upload Image</value>
  </data>
  <data name="lblSaveItemFirst.Text" xml:space="preserve">
    <value>Please update the item to enable this section.</value>
  </data>
  <data name="lblCategoryUpdateInfo.Text" xml:space="preserve">
    <value>Category updates are stored immediately and do not need an Update command to save.</value>
  </data>
  <data name="lblImageUpdateInfo.Text" xml:space="preserve">
    <value>Image updates are stored immediately and do not need an Update command to save.</value>
  </data>
  <data name="cvSeoProductName.Text" xml:space="preserve">
    <value>* SEO Url Product name is not unique</value>
  </data>
  <data name="lblSeoProductName.Help" xml:space="preserve">
    <value>Name of the product to display in SEO URL</value>
  </data>
  <data name="lblSeoProductName.Text" xml:space="preserve">
    <value>SEO Url Product Name</value>
  </data>
  <data name="revSeoProductName.Text" xml:space="preserve">
    <value>* The field can only contain a-z, 0-9 or the symbols "_", "-"</value>
  </data>
  <data name="rfvSeoName.Text" xml:space="preserve">
    <value>* SEO Url Product Name is required</value>
  </data>
  <data name="lblTabCategories.Text" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="lblTabDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="lblTabImages.Text" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="lblTabOffers.Text" xml:space="preserve">
    <value>Offers</value>
  </data>
  <data name="lblTabProductDetails.Text" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="lblTabVariants.Text" xml:space="preserve">
    <value>Variants</value>
  </data>
  <data name="ddlVatRate.Help" xml:space="preserve">
    <value>The VAT rate that should be applied to this product, this option is only enabled if VAT is selected for your store.</value>
  </data>
  <data name="ddlVatRate.Text" xml:space="preserve">
    <value>VAT Rate</value>
  </data>
  <data name="lblTaxFree.Help" xml:space="preserve">
    <value>When ticked the product will not attract any tax during the checkout. This allows you to define products which are tax free.</value>
  </data>
  <data name="lblTaxFree.Text" xml:space="preserve">
    <value>Tax Free</value>
  </data>
  <data name="lblVatRate.Help" xml:space="preserve">
    <value>The VAT rate to sell this product at, this option is only enabled if VAT is configured for the store.</value>
  </data>
  <data name="lblVatRate.Text" xml:space="preserve">
    <value>VAT Rate</value>
  </data>
  <data name="lblModelNumber.Text" xml:space="preserve">
    <value>Model Number</value>
  </data>
  <data name="lblProductName.Text" xml:space="preserve">
    <value>Product Name</value>
  </data>
  <data name="lblRelatedProducts.Text" xml:space="preserve">
    <value>Select all products to be added as a related product, note you do not need to click "update" changes are instantly saved.
&lt;br/&gt;&lt;br/&gt;
To add new related product simple use the search box below to find the product then tick the checkbox to assign with this product.</value>
  </data>
  <data name="lblTabRelatedProducts.Text" xml:space="preserve">
    <value>Related</value>
  </data>
  <data name="lblDefaultImage.Text" xml:space="preserve">
    <value>&lt;br/&gt;The default product image is the first image, this is highlighted in the yellow box.</value>
  </data>
  <data name="hypSaveOffer.Text" xml:space="preserve">
    <value>Save product offer</value>
  </data>
  <data name="lblDateHelp.Text" xml:space="preserve">
    <value>e.g. MM/DD/YYYY</value>
  </data>
  <data name="lblOfferHelp.Text" xml:space="preserve">
    <value>Here you can enter an offer price that the product will be sold at.&lt;br /&gt; Note start and end dates are inclusive.</value>
  </data>
  <data name="lblDigitalDownloads.Text" xml:space="preserve">
    <value>Downloads</value>
  </data>
  <data name="lblDigitalDownloadsHelp.Text" xml:space="preserve">
    <value>&lt;p&gt;If a file is selected here it will be made available to download by the user after they have created an order and the status of the order is "paid".&lt;/p&gt;
&lt;p&gt;Please use the standard DNN File Manager to upload the required files, an unlimited amount of files can be specified as digital download files.&lt;/p&gt;
&lt;p&gt;Please note only files with the extension {0} can be attached to a product for download.&lt;/p&gt;&lt;p&gt;It is also possible to set the number of times a product can be downloaded as well as the number of days the customer has to download the product from the date of purchase. If these are not applicable please leave blank - these values also can be set globally at the store info settings and overridden on a per product basis.&lt;/p&gt;</value>
  </data>
  <data name="lblRequestQuote.Help" xml:space="preserve">
    <value>This item needs to be requested as a quote. If checked&lt;br /&gt; this item can not be purchased using the shopping cart.</value>
  </data>
  <data name="lblRequestQuote.Text" xml:space="preserve">
    <value>Request a Quote</value>
  </data>
  <data name="lblUnitPriceHelp.Text" xml:space="preserve">
    <value>Please enter the price ex TAX or VAT</value>
  </data>
  <data name="labelFeatured.Text" xml:space="preserve">
    <value>Featured</value>
  </data>
  <data name="lblSaveConfirmed.Text" xml:space="preserve">
    <value>Item Updated - Subject To Any Workflow Approval</value>
  </data>
  <data name="lblTabUserPricing.Text" xml:space="preserve">
    <value>User Pricing</value>
  </data>
  <data name="lblFreeProduct.Help" xml:space="preserve">
    <value>If selected the product will be "free" and will not incur a cost to the user.</value>
  </data>
  <data name="lblFreeProduct.Text" xml:space="preserve">
    <value>Is Free Product</value>
  </data>
  <data name="lblFreeProductOptionNotAvailable.Text" xml:space="preserve">
    <value>This option is not available as this is a "free product".</value>
  </data>
  <data name="lblFreeShipping.Help" xml:space="preserve">
    <value>If selected this product will not incur any shipping charges</value>
  </data>
  <data name="lblFreeShipping.Text" xml:space="preserve">
    <value>Is Free To Ship</value>
  </data>
  <data name="lblLimitPerCustomerOrder.Help" xml:space="preserve">
    <value>If a number is entered here, a single customer will not be able to purchase more of this item per order than the value entered. e.g if 5 is entered a single customer cannot purchase  more than 5 of this item per order. Leave blank if this settings  is not required.</value>
  </data>
  <data name="lblLimitPerCustomerOrder.Text" xml:space="preserve">
    <value>Qty Limit Per Order</value>
  </data>
  <data name="lblProductBarcode.Help" xml:space="preserve">
    <value>The barcode of the product.</value>
  </data>
  <data name="lblProductBarcode.Text" xml:space="preserve">
    <value>Product Barcode</value>
  </data>
  <data name="lblProductSku.Help" xml:space="preserve">
    <value>The SKU of the product</value>
  </data>
  <data name="lblProductSku.Text" xml:space="preserve">
    <value>Product SKU</value>
  </data>
  <data name="lblRelatedExistingProductsHeader.Text" xml:space="preserve">
    <value>Existing Related Products</value>
  </data>
  <data name="lblRelatedNoExistingItems.Text" xml:space="preserve">
    <value>No Items are Related</value>
  </data>
  <data name="lblRelatedNoSearchResults.Text" xml:space="preserve">
    <value>No results</value>
  </data>
  <data name="lblRelatedSearchHeader.Text" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="lblRelatedSearchInput.Text" xml:space="preserve">
    <value>Search for Products</value>
  </data>
  <data name="linkDelete.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="linkEdit.Text" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="lblProductSerials.Text" xml:space="preserve">
    <value>Import Product Serials</value>
  </data>
  <data name="lblProductSerialsHelp.Text" xml:space="preserve">
    <value>From here you can upload product serial numbers, when an order for this product has been marked as "paid" they will then be assigned the next available product serial number.&lt;br /&gt;The import file should be in the form of a .csv file with no header data. The only field should be the product serial number, each on a seperate line, with no end of line deliminater.&lt;br /&gt;&lt;br /&gt;e.g.&lt;br /&gt;serialNumber1&lt;br /&gt;serialNumber2&lt;br /&gt;serialNumber3</value>
  </data>
  <data name="hypDeleteOffer.Text" xml:space="preserve">
    <value>Remove Offer</value>
  </data>
  <data name="lblMSRP.Help" xml:space="preserve">
    <value>The manufacturer suggested retail price.</value>
  </data>
  <data name="lblMSRP.Text" xml:space="preserve">
    <value>MSRP</value>
  </data>
  <data name="lblProductTabs.Text" xml:space="preserve">
    <value>Product Tabs</value>
  </data>
  <data name="lblProductTabsHelp.Text" xml:space="preserve">
    <value>&lt;p&gt;From here you can create and manage any number of tabs to appear on this product details page.&lt;/p&gt; Note the order the tabs are listed below is the order they will be outputted left to right on the product details page.</value>
  </data>
  <data name="lblOutOfStock.Help" xml:space="preserve">
    <value>When check the product is marked out of stock, depending on Product's Behaviour setting in the Store Admin this can then hide the product from the store front.</value>
  </data>
  <data name="lblOutOfStock.Text" xml:space="preserve">
    <value>Out of Stock</value>
  </data>
  <data name="lblRoleExpiry.Help" xml:space="preserve">
    <value>This will be the number of days that the user will be in the above role for, e.g. 90 days. If this value is not specified they will be in the role forever.</value>
  </data>
  <data name="lblRoleExpiry.Text" xml:space="preserve">
    <value>Role Expiry</value>
  </data>
  <data name="cmdDuplicate.Text" xml:space="preserve">
    <value>Duplicate</value>
  </data>
  <data name="lblDataSheet.Help" xml:space="preserve">
    <value>Select an existing PDF to assign to the product as a datasheet.</value>
  </data>
  <data name="lblDataSheet.Text" xml:space="preserve">
    <value>Datasheet</value>
  </data>
  <data name="lblNoSupplierSelected.Text" xml:space="preserve">
    <value>-- Non Entered --</value>
  </data>
  <data name="lblSupplierName.Help" xml:space="preserve">
    <value>The name of the supplier of this product, suppliers are added via the "add supplier" section of the mega menu.</value>
  </data>
  <data name="lblSupplierName.Text" xml:space="preserve">
    <value>Supplier Name</value>
  </data>
  <data name="lblBulkPurchasingDiscount.Text" xml:space="preserve">
    <value>Qty Discounts</value>
  </data>
  <data name="rfvModelName.Text" xml:space="preserve">
    <value>* Product Name is a required field</value>
  </data>
  <data name="confirmDeleteOption.Text" xml:space="preserve">
    <value>Are you sure you want to delete this option?</value>
  </data>
  <data name="confirmDeleteVariant.Text" xml:space="preserve">
    <value>Are you sure you want to delete this variant?</value>
  </data>
  <data name="dshDnnRoles.Text" xml:space="preserve">
    <value>Product DNN Roles</value>
  </data>
  <data name="lblDnnRoleHelp.Text" xml:space="preserve">
    <value>Define the DNN roles that the user should be added to once they have purchased the product. Optionally enter an expiry date that defines how long in days after the date of purchase they should be in the DNN role for. Or you can optionally enter the exact date the role should expire.</value>
  </data>
  <data name="lblStockDisableDueToVariant.Text" xml:space="preserve">
    <value>The stock level is disabled here since this product has variants.Please define the stock level for the variants using the Product Variant Inventory Management on the Variant Tab.</value>
  </data>
  <data name="lblInstorePickupOnly.Help" xml:space="preserve">
    <value>If checked the item can only be collected direct from the store</value>
  </data>
  <data name="lblInstorePickupOnly.Text" xml:space="preserve">
    <value>Instore Pickup Only</value>
  </data>
  <data name="lblQtyRestriction.Help" xml:space="preserve">
    <value>You can optionally enter values here that would define in what qty's this item can be purchased in. You can enter the qtys comma seperated or a range of numbers.</value>
  </data>
  <data name="lblQtyRestriction.Text" xml:space="preserve">
    <value>Qty Restriction</value>
  </data>
  <data name="lblUseGlobalRestriction.Help" xml:space="preserve">
    <value>If selected we will use the global restriction pattern for restricting the QTY's that a user can purchase.</value>
  </data>
  <data name="lblUseGlobalRestriction.Text" xml:space="preserve">
    <value>Use Global QTY Restriction</value>
  </data>
  <data name="lblProductYouTubeVideos.Text" xml:space="preserve">
    <value>YouTube Videos</value>
  </data>
  <data name="lblProductFacetSearch.Text" xml:space="preserve">
    <value>Facet Search</value>
  </data>
  <data name="lblAllDayEvent.Help" xml:space="preserve">
    <value>Will the event last all day or part of the day, if the event lasts all day you do not need to set the time portion</value>
  </data>
  <data name="lblAllDayEvent.Text" xml:space="preserve">
    <value>All Day Event</value>
  </data>
  <data name="lblEventEndDate.Help" xml:space="preserve">
    <value>Event End Date, if the event lasts all day you do not need to set the time portion of the event.</value>
  </data>
  <data name="lblEventEndDate.Text" xml:space="preserve">
    <value>Event End Date &amp; Time</value>
  </data>
  <data name="lblEventStartDate.Help" xml:space="preserve">
    <value>The start date of the event, if the event lasts all day you do not need to set the time portion for the event.</value>
  </data>
  <data name="lblEventStartDate.Text" xml:space="preserve">
    <value>Event Start Date &amp; Time</value>
  </data>
  <data name="rf.Text" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="lblEventColor.Help" xml:space="preserve">
    <value>The color for the event that will be used to display in the calender. This should be in hexadecimal format. e.g. #6490e6</value>
  </data>
  <data name="lblEventColor.Text" xml:space="preserve">
    <value>Event Color</value>
  </data>
  <data name="day.Text" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="friday.Text" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="lblDays.Text" xml:space="preserve">
    <value>day(s)</value>
  </data>
  <data name="lblEndAfter.Help" xml:space="preserve">
    <value>How many times the event should end after. e.g. end after 10 occurences.</value>
  </data>
  <data name="lblEndAfter.Text" xml:space="preserve">
    <value>End After</value>
  </data>
  <data name="lblEvery.Text" xml:space="preserve">
    <value>Every</value>
  </data>
  <data name="lblEveryWeekDay.Text" xml:space="preserve">
    <value>Every Weekday</value>
  </data>
  <data name="lblIsRecurringEvent.Help" xml:space="preserve">
    <value>By Selecting you are indicating this is a recurring event, from the below UI you will be able to define the recurring options.</value>
  </data>
  <data name="lblIsRecurringEvent.Text" xml:space="preserve">
    <value>Is Recurring Event</value>
  </data>
  <data name="lblMonthlyOptions.Text" xml:space="preserve">
    <value>Recur Monthly Options:</value>
  </data>
  <data name="lblMonths.Text" xml:space="preserve">
    <value>month(s)</value>
  </data>
  <data name="lblNone.Text" xml:space="preserve">
    <value>-- None --</value>
  </data>
  <data name="lblOccurances.Text" xml:space="preserve">
    <value>occurances</value>
  </data>
  <data name="lblOfEvery.Text" xml:space="preserve">
    <value>of every</value>
  </data>
  <data name="lblRecurDaily.Text" xml:space="preserve">
    <value>Daily</value>
  </data>
  <data name="lblRecurEvery.Text" xml:space="preserve">
    <value>Recur Every</value>
  </data>
  <data name="lblRecurMonthly.Text" xml:space="preserve">
    <value>Monthly</value>
  </data>
  <data name="lblRecurringOption.Help" xml:space="preserve">
    <value>Select the date period when the event should recur.</value>
  </data>
  <data name="lblRecurringOption.Help1" xml:space="preserve">
    <value>Select the date period when the event should recur.</value>
  </data>
  <data name="lblRecurringOption.Text" xml:space="preserve">
    <value>Recurring Intervals</value>
  </data>
  <data name="lblRecurringOption.Text1" xml:space="preserve">
    <value>Recurring Intervals</value>
  </data>
  <data name="lblRecurWeekly.Text" xml:space="preserve">
    <value>Weekly</value>
  </data>
  <data name="lblRecurYearly.Text" xml:space="preserve">
    <value>Yearly</value>
  </data>
  <data name="lblWeeklyOptions.Text" xml:space="preserve">
    <value>Recur Weekly Options:</value>
  </data>
  <data name="lblWeeksOn.Text" xml:space="preserve">
    <value>weeks on:</value>
  </data>
  <data name="lblYearlyOptions.Text" xml:space="preserve">
    <value>Recur Yearly Options:</value>
  </data>
  <data name="monday.Text" xml:space="preserve">
    <value>Monday</value>
  </data>
  <data name="saturday.Text" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="sunday.Text" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="the.Text" xml:space="preserve">
    <value>The</value>
  </data>
  <data name="thursday.Text" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="tuesday.Text" xml:space="preserve">
    <value>Tuesday</value>
  </data>
  <data name="wednesday.Text" xml:space="preserve">
    <value>Wednesday</value>
  </data>
  <data name="lblDailyOptions.Text" xml:space="preserve">
    <value>Recur Daily Options</value>
  </data>
  <data name="lblNumberOfPlacesAvailable.Help" xml:space="preserve">
    <value>The number of spaces available for this event, if you would like Cart Viper to stop taking bookings when the event is full, please adjust your settings in store admin to either "hide product when out of stock" or "hide product links and add to cart" when out of stock.</value>
  </data>
  <data name="lblNumberOfPlacesAvailable.Text" xml:space="preserve">
    <value>No: Spaces Available</value>
  </data>
  <data name="Everyone.Text" xml:space="preserve">
    <value>Everyone</value>
  </data>
  <data name="lblRequiredRoleId.Help" xml:space="preserve">
    <value>Defines the roles that the user must have in order to be able to view and purchase this item. A user only needs to have a single role of any that are defined. If no roles are selected the product is available to all users.</value>
  </data>
  <data name="lblRequiredRoleId.Text" xml:space="preserve">
    <value>User Role to View/Purchase</value>
  </data>
  <data name="lblPriceMode.Help" xml:space="preserve">
    <value>Determines if the item is a simple pay once for the item or if the item has a recurring billing cycle.</value>
  </data>
  <data name="lblPriceMode.Text" xml:space="preserve">
    <value>Price Mode</value>
  </data>
  <data name="lblRecurringPrice.Help" xml:space="preserve">
    <value>Defines the recurring price for the item</value>
  </data>
  <data name="lblRecurringPrice.Text" xml:space="preserve">
    <value>Recurring Price</value>
  </data>
  <data name="rbRecurringPrice.Text" xml:space="preserve">
    <value>Recurring Price</value>
  </data>
  <data name="rbStandardPrice.Text" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="cvRecurringInitialPayment.Text" xml:space="preserve">
    <value>&lt;br/&gt;Please enter a valid price</value>
  </data>
  <data name="lblRecurringAmount.Help" xml:space="preserve">
    <value>The amount to be charged at recurring intervals to the customer's credit card.</value>
  </data>
  <data name="lblRecurringAmount.Text" xml:space="preserve">
    <value>Recurring Amount</value>
  </data>
  <data name="lblRecurringBillingCycle.Help" xml:space="preserve">
    <value>No. of time to charge the recurring amount, this can be left blank or set to 0 to allow the system to keep billing at the recurring interval.</value>
  </data>
  <data name="lblRecurringBillingCycle.Text" xml:space="preserve">
    <value>No. of Billing Cycles</value>
  </data>
  <data name="lblRecurringInitialPrice.Help" xml:space="preserve">
    <value>The amount charged to the customer's credit card at the time of checkout</value>
  </data>
  <data name="lblRecurringInitialPrice.Text" xml:space="preserve">
    <value>Initial Amount</value>
  </data>
  <data name="lblRecurringInterval.Help" xml:space="preserve">
    <value>The amount of time time between each recurring billing event.</value>
  </data>
  <data name="lblRecurringInterval.Text" xml:space="preserve">
    <value>Recurring Interval</value>
  </data>
  <data name="lblHandlingCharge.Help" xml:space="preserve">
    <value>Optional handling charge which is applied when the customer purchases this item. This will be multipled by the quantity of items purchased.</value>
  </data>
  <data name="lblHandlingCharge.Text" xml:space="preserve">
    <value>Handling Charge</value>
  </data>
  <data name="lblShippingSurcharge.Help" xml:space="preserve">
    <value>Optional shipping surcharge that should be applied when purchasing this product. This number will be multiple by the quantity of items purchased.</value>
  </data>
  <data name="lblShippingSurcharge.Text" xml:space="preserve">
    <value>Shipping Surcharge</value>
  </data>
  <data name="lblMetaDescription.Help" xml:space="preserve">
    <value>Optional meta description field to be used in the page when viewing the product</value>
  </data>
  <data name="lblMetaDescription.Text" xml:space="preserve">
    <value>SEO Description</value>
  </data>
  <data name="lblPageTitle.Help" xml:space="preserve">
    <value>Option page title to display in the browser bar when viewing this product. If this value is blank then the product name will be used as the page title.</value>
  </data>
  <data name="lblPageTitle.Text" xml:space="preserve">
    <value>Page Title</value>
  </data>
  <data name="lblCannotSignUpToEvent.Help" xml:space="preserve">
    <value>If selected users will not be able to sign up to this event, however it will still be displayed. This would allow you to display what is upcoming without letting users signup.</value>
  </data>
  <data name="lblCannotSignUpToEvent.Text" xml:space="preserve">
    <value>User's Cannot Sign Up To Event</value>
  </data>
  <data name="lblBackOrderDate.Help" xml:space="preserve">
    <value>If the item is on back order enter the date when the item will be back in stock, this will be shown to the user in the store front</value>
  </data>
  <data name="lblBackOrderDate.Text" xml:space="preserve">
    <value>Back Order Date</value>
  </data>
  <data name="lblEmailMessage.Help" xml:space="preserve">
    <value>Here you can define any text that should appear in the email that is sent to the customer if this order is purchased. Full HTML is supported so you could include a link to a signup page etc.</value>
  </data>
  <data name="lblEmailMessage.Text" xml:space="preserve">
    <value>Message In Order Confirmation Email</value>
  </data>
  <data name="lblUseModalRfq.Help" xml:space="preserve">
    <value>If selected we will use an Ajax modal window to capture the RFQ details rather than letting them assemble a cart and then submit it.</value>
  </data>
  <data name="lblUseModalRfq.Text" xml:space="preserve">
    <value>Use Modal RFQ Dialogue</value>
  </data>
  <data name="lblKeyBenifits.Help" xml:space="preserve">
    <value>Key benefits of the product.</value>
  </data>
  <data name="lblKeyBenifits.Text" xml:space="preserve">
    <value>Key Benefit's</value>
  </data>
  <data name="lblDataSheetHelp.Text" xml:space="preserve">
    <value>From here you can define an unlimited number of datasheets for the given product, note only PDF files are supported and they must be uploaded via the admin -&gt; file manager menu before they can be selected here.</value>
  </data>
  <data name="lblProductDataSheets.Text" xml:space="preserve">
    <value>Product Data Sheets</value>
  </data>
  <data name="lblBuyNowHelp.Text" xml:space="preserve">
    <value>The buy it now price is optional by entering a price here you are allowing this event to be "rented" at the unit price entered above for the date the user selects when they add to cart or the user can choose to purchase the event at the defined "buy it now price" and not select a date.</value>
  </data>
  <data name="lblBuyNowPrice.Help" xml:space="preserve">
    <value>The price a user will be able to purchase this product for.</value>
  </data>
  <data name="lblBuyNowPrice.Text" xml:space="preserve">
    <value>Buy Now Price</value>
  </data>
  <data name="lblNumberDaysToDelivery.Help" xml:space="preserve">
    <value>The number of days until delivery, if a number greater than 0 is entered here we will calculate the estimated delivery date for this product based on the order date and display to the user in the order confirmation email.</value>
  </data>
  <data name="lblNumberDaysToDelivery.Text" xml:space="preserve">
    <value>Est Number Days Untill Delivery</value>
  </data>
  <data name="lblFreeShippingMinQty.Text" xml:space="preserve">
    <value>Quantity Required</value>
  </data>
  <data name="dshGoogleProductFeed.Text" xml:space="preserve">
    <value>Google Product Feed</value>
  </data>
  <data name="lblGoogleProductCategory.Help" xml:space="preserve">
    <value>Optionally allows you to define a custom Google Product Category, if this is blank then the default value defined at the Category level will be used. This should be selected from list here http://support.google.com/merchants/bin/answer.py?hl=en&amp;answer=1705911</value>
  </data>
  <data name="lblGoogleProductCategory.Text" xml:space="preserve">
    <value>Google Product Category</value>
  </data>
  <data name="lblGpfAvailability.Help" xml:space="preserve">
    <value>Select the availability for product.</value>
  </data>
  <data name="lblGpfAvailability.Text" xml:space="preserve">
    <value>Availability of the Product</value>
  </data>
  <data name="lblGpfBrand.Help" xml:space="preserve">
    <value>The brand for the item</value>
  </data>
  <data name="lblGpfBrand.Text" xml:space="preserve">
    <value>Brand</value>
  </data>
  <data name="lblGpfCondition.Help" xml:space="preserve">
    <value>Defines the condition of the product offered for sale.</value>
  </data>
  <data name="lblGpfCondition.Text" xml:space="preserve">
    <value>Item Condition</value>
  </data>
  <data name="lblGpfGoogleProductType.Help" xml:space="preserve">
    <value>This allows you to define the type of product being submitted, this can contain multiple definitions. This value should be selected from the list here http://support.google.com/merchants/bin/answer.py?hl=en&amp;answer=1705911</value>
  </data>
  <data name="lblGpfGoogleProductType.Text" xml:space="preserve">
    <value>Google Product Type</value>
  </data>
  <data name="lblGpfUpc.Help" xml:space="preserve">
    <value>The unique product identifier for the item.</value>
  </data>
  <data name="lblGpfUpc.Text" xml:space="preserve">
    <value>UPC/EAN/ISBN</value>
  </data>
  <data name="lblAllowVariantRestriction.Help" xml:space="preserve">
    <value>If selected if their is a quantity restriction on this product it can be made up with different versions of the product via variants.</value>
  </data>
  <data name="lblAllowVariantRestriction.Text" xml:space="preserve">
    <value>Make QTY Restriction With Variants </value>
  </data>
  <data name="labelFeatured2.Help" xml:space="preserve">
    <value>Indicates whether the item is featured.</value>
  </data>
  <data name="labelFeatured2.Text" xml:space="preserve">
    <value>Featured</value>
  </data>
  <data name="lblAssign.Text" xml:space="preserve">
    <value>Assign Product Image Using DNN File Picker</value>
  </data>
  <data name="lblProductAccordion.Text" xml:space="preserve">
    <value>Product Accordion</value>
  </data>
  <data name="lblProductAccordionHelp.Text" xml:space="preserve">
    <value>From here you can create an manage data that can be outputted in accordion fashion. It is possible to create multiple accordions per product, by entering the number of accordions this product will support then assigning the accordion leaf to the relevant accordion.&lt;br /&gt;&lt;br /&gt;To output the accordion you would use the token: [PRODUCTACCORDION:1] - this would output the 1st product accordion. Token [PRODUCTACCORDION:2] would output the 2nd accordion and so forth.</value>
  </data>
  <data name="lblTags.Help" xml:space="preserve">
    <value>Assign this products tags, this would allow the product to appear along with any other tagged content using the standard DNN taxonomy.</value>
  </data>
  <data name="lblTags.Text" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="lblProductRedirectHelp.Text" xml:space="preserve">
    <value>Enter the urls which should redirect to this product
                    &lt;br /&gt;
                    Example &lt;i&gt;/some_product.aspx&lt;/i&gt;</value>
  </data>
  <data name="lblRedirectRules.Text" xml:space="preserve">
    <value>Product Redirect Rules</value>
  </data>
  <data name="lblProductDetailsPage.Help" xml:space="preserve">
    <value>The DNN page this page should open in, in none selected the standard catalogue page will be used.</value>
  </data>
  <data name="lblProductDetailsPage.Text" xml:space="preserve">
    <value>Product Details Page</value>
  </data>
  <data name="TabHidden.Text" xml:space="preserve">
    <value> (Hidden!)</value>
  </data>
  <data name="lblPendingModeration.Text" xml:space="preserve">
    <value>This product has changes that are pending moderation.</value>
  </data>
  <data name="lblAllowQuantity.Help" xml:space="preserve">
    <value>If selected we will not output a quantity textbox in the store for this product to allow the customer to enter the quantity they want.</value>
  </data>
  <data name="lblAllowQuantity.Text" xml:space="preserve">
    <value>Disable Quantity</value>
  </data>
  <data name="lblDisableProductReviews.Help" xml:space="preserve">
    <value>If selected we will disable the product review option for this product.</value>
  </data>
  <data name="lblDisableProductReviews.Text" xml:space="preserve">
    <value>Disable Product Reviews</value>
  </data>
  <data name="lblRfqDisplayPrice.Help" xml:space="preserve">
    <value>If selected we will also output the price for this RFQ product.</value>
  </data>
  <data name="lblRfqDisplayPrice.Text" xml:space="preserve">
    <value>Display Price</value>
  </data>
  <data name="cvRecurringInterval.Text" xml:space="preserve">
    <value>Ensure the recurring frequency is greater than once every 7 days.</value>
  </data>
  <data name="lblAdditionalFeatures.Help" xml:space="preserve">
    <value>Additional features for the product.</value>
  </data>
  <data name="lblAdditionalFeatures.Text" xml:space="preserve">
    <value>Additional Features</value>
  </data>
  <data name="chkApplyHandlingChargePerProduct.Text" xml:space="preserve">
    <value>Apply handling charge per product NOT per unit.</value>
  </data>
  <data name="lblProductUoM.Help" xml:space="preserve">
    <value>Defines the unit which the product is sold as.</value>
  </data>
  <data name="lblProductUoM.Text" xml:space="preserve">
    <value>Product Unit of Measure</value>
  </data>
  <data name="lblIsOnHold.Help" xml:space="preserve">
    <value>If selected the product will still be displayed, however it will not be able to purchase it.</value>
  </data>
  <data name="lblIsOnHold.Text" xml:space="preserve">
    <value>Is On Hold</value>
  </data>
  <data name="lblIsFavorite.Help" xml:space="preserve">
    <value>Is Favourite</value>
  </data>
  <data name="lblIsFavorite.Text" xml:space="preserve">
    <value>Is Favourite</value>
  </data>
  <data name="lblAllowPreRegistration.Help" xml:space="preserve">
    <value>If selected during the below dates the event will only be allowed to be signed up to by users with the specified roles. After the window has passed the event will be available to the general public.</value>
  </data>
  <data name="lblAllowPreRegistration.Text" xml:space="preserve">
    <value>Allow Pre-Registration</value>
  </data>
  <data name="lblPreRegistrationRoles.Help" xml:space="preserve">
    <value>Pre registration will only be available to users that have at least 1 of the below roles.</value>
  </data>
  <data name="lblPreRegistrationRoles.Text" xml:space="preserve">
    <value>Pre Registration Roles</value>
  </data>
  <data name="lblPreRegistrationWindow.Help" xml:space="preserve">
    <value>The dates the pre-registration dates, during these dates registration will only be open to users with the roles specified in the setting "Pre-registration Roles"</value>
  </data>
  <data name="lblPreRegistrationWindow.Text" xml:space="preserve">
    <value>Pre- Registration Window</value>
  </data>
</root>