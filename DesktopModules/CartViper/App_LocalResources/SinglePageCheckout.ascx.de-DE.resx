<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnPlaceOrder.Text" xml:space="preserve">
    <value>Bestellung aufgeben</value>
  </data>
  <data name="chkInStorePickUp.Text" xml:space="preserve">
    <value>Abholung im Ladengeschäft möglich &lt;br /&gt;&lt;br /&gt;</value>
  </data>
  <data name="lblAddress1.Text" xml:space="preserve">
    <value>Adresse 1</value>
  </data>
  <data name="lblAddress1Required.Text" xml:space="preserve">
    <value>Adresse 1 ist erforderlich, &lt;br /&gt;</value>
  </data>
  <data name="lblAddress2.Text" xml:space="preserve">
    <value>Anschrift 2</value>
  </data>
  <data name="lblBillingAddress.Text" xml:space="preserve">
    <value>Rechnungsadresse</value>
  </data>
  <data name="lblCardSecurityNumber.Text" xml:space="preserve">
    <value>Sicherheitsnummer</value>
  </data>
  <data name="lblCardSecurityRequired.Text" xml:space="preserve">
    <value>Card Security Number ist erforderlich &lt;br /&gt;</value>
  </data>
  <data name="lblCartEmpty.Text" xml:space="preserve">
    <value>Ihr Warenkorb ist leer</value>
  </data>
  <data name="lblCCRequired.Text" xml:space="preserve">
    <value>Credit Card Nummer wird benötigt &lt;br /&gt;</value>
  </data>
  <data name="lblCity.Text" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="lblCityRequired.Text" xml:space="preserve">
    <value>City ist erforderlich &lt;br /&gt;</value>
  </data>
  <data name="lblCompanyName.Text" xml:space="preserve">
    <value>Name des Unternehmens</value>
  </data>
  <data name="lblCompanyNameRequired.Text" xml:space="preserve">
    <value>Name des Unternehmens erforderlich ist &lt;br /&gt;</value>
  </data>
  <data name="lblCountry.Text" xml:space="preserve">
    <value>Land</value>
  </data>
  <data name="lblCreditCardNumber.Text" xml:space="preserve">
    <value>Nummer der Kreditkarte</value>
  </data>
  <data name="lblDiscount.Text" xml:space="preserve">
    <value>Rabatt</value>
  </data>
  <data name="lblEmail.Text" xml:space="preserve">
    <value>E-Mail Adresse</value>
  </data>
  <data name="lblEmailNotValid.Text" xml:space="preserve">
    <value>Email ist nicht gültig &lt;br /&gt;</value>
  </data>
  <data name="lblEmailRequired.Text" xml:space="preserve">
    <value>E-Mail ist erforderlich &lt;br /&gt;</value>
  </data>
  <data name="lblExpiry.Text" xml:space="preserve">
    <value>Verfallsdatum</value>
  </data>
  <data name="lblFirstName.Text" xml:space="preserve">
    <value>Vorname</value>
  </data>
  <data name="lblFirstNameRequired.Text" xml:space="preserve">
    <value>Vorname ist erforderlich &lt;br /&gt;</value>
  </data>
  <data name="lblFreeShipping.Text" xml:space="preserve">
    <value>Kostenloser Versand</value>
  </data>
  <data name="lblOrderFailed.Text" xml:space="preserve">
    <value>Auftrag fehlgeschlagen bitte versuchen Sie es erneut, haben Sie nicht angeklagt worden.</value>
  </data>
  <data name="lblPaymentDetails.Text" xml:space="preserve">
    <value>Einzelheiten zur Bezahlung</value>
  </data>
  <data name="lblPhone.Text" xml:space="preserve">
    <value>Telefon</value>
  </data>
  <data name="lblPhoneRequired.Text" xml:space="preserve">
    <value>Telefon ist erforderlich &lt;br /&gt;</value>
  </data>
  <data name="lblQty.Text" xml:space="preserve">
    <value>Anz</value>
  </data>
  <data name="lblShipping.Text" xml:space="preserve">
    <value>Versand</value>
  </data>
  <data name="lblShippingAddress.Text" xml:space="preserve">
    <value>Liefer-Adresse</value>
  </data>
  <data name="lblShippingOptions.Text" xml:space="preserve">
    <value>Versandoptionen</value>
  </data>
  <data name="lblState.Text" xml:space="preserve">
    <value>Zustand</value>
  </data>
  <data name="lblSubtotal.Text" xml:space="preserve">
    <value>Zwischensumme</value>
  </data>
  <data name="lblSurname.Text" xml:space="preserve">
    <value>Nachname</value>
  </data>
  <data name="lblSurnameRequired.Text" xml:space="preserve">
    <value>Nachname ist erforderlich &lt;br /&gt;</value>
  </data>
  <data name="lblTax.Text" xml:space="preserve">
    <value>Steuer</value>
  </data>
  <data name="lblTotal.Text" xml:space="preserve">
    <value>Gesamt</value>
  </data>
  <data name="lblUnableToShip.Text" xml:space="preserve">
    <value>Wir sind nicht in der Lage, um die ausgewählte Adresse versenden.</value>
  </data>
  <data name="lblUseShipping.Text" xml:space="preserve">
    <value>Verwenden Rechnungsadresse</value>
  </data>
  <data name="lblVat.Text" xml:space="preserve">
    <value>Mehrwertsteuer</value>
  </data>
  <data name="lblVatNumber.Text" xml:space="preserve">
    <value>Umsatzsteuer-Identifikationsnummer</value>
  </data>
  <data name="lblZip.Text" xml:space="preserve">
    <value>Reißverschluss</value>
  </data>
  <data name="lblZipRequired.Text" xml:space="preserve">
    <value>Zip ist erforderlich &lt;br /&gt;</value>
  </data>
  <data name="AwaitingPayment.Text" xml:space="preserve">
    <value>Ihre Bestellung wurde erfolgreich aufgenommen, und wir sind noch nicht bezahlt. Sie können den Status Ihrer Bestellung jederzeit von dieser Seite aus zu überprüfen. &lt;br /&gt; Die Reihenfolge der Geschichte Abschnitt enthält detaillierte Informationen über Ihre Bestellungen.</value>
  </data>
  <data name="btnDisplayOrder.Text" xml:space="preserve">
    <value>Bestellung anzeigen</value>
  </data>
  <data name="lblCounty.Text" xml:space="preserve">
    <value>Grafschaft</value>
  </data>
  <data name="lblCreateAccount.Text" xml:space="preserve">
    <value>&lt;br &gt; Klicken Sie &lt;a href='{0}'&gt;hier&lt;/a&gt; , um ein neues Benutzerkonto zu erstellen.</value>
  </data>
  <data name="lblDigitalDownloads.Text" xml:space="preserve">
    <value>&lt;br /&gt; Klicken Sie &lt;a href="{0}"&gt;hier&lt;/a&gt; , um zum &lt;b&gt;digitalen Download locker&lt;/b&gt; und laden Sie Ihre Dateien. &lt;br /&gt;</value>
  </data>
  <data name="lblOrderNumber.Text" xml:space="preserve">
    <value>Danke für Ihren Einkauf bei uns. &lt;br /&gt; Ihre Bestellnummer lautet: {0}</value>
  </data>
  <data name="lblRegistrationCode.Text" xml:space="preserve">
    <value>&lt;br /&lt;br /&gt; Ihr Registrierungscode ist: &lt;b&gt;{0}.&lt;/b&gt; &lt;br /&gt;</value>
  </data>
  <data name="OrderPlaced.Text" xml:space="preserve">
    <value>Ihre Bestellnummer lautet:</value>
  </data>
  <data name="rdOfflinePayment.Text" xml:space="preserve">
    <value>Offline-Payment</value>
  </data>
  <data name="lblCardType.Text" xml:space="preserve">
    <value>Card Type</value>
  </data>
  <data name="lblIssueNumber.Text" xml:space="preserve">
    <value>Issue Numer</value>
  </data>
  <data name="lblIssueNumberRequired.Text" xml:space="preserve">
    <value>Ausgabe Nummer ist erforderlich &lt;br /&gt;</value>
  </data>
  <data name="lblNoPaymentGateways.Text" xml:space="preserve">
    <value>Keine Zahlungs-Gateways konfiguriert wurden.</value>
  </data>
  <data name="lblStartDate.Text" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="lblRecievedFreeProduct.Text" xml:space="preserve">
    <value>Sie haben Ihr kostenloses Produkt erhalten, entfernen Sie diese bitte aus dem Warenkorb.</value>
  </data>
  <data name="PrePaidCredit.Text" xml:space="preserve">
    <value>Prepaid Kreditkarten</value>
  </data>
  <data name="rdOfflinePaymentTerms.Text" xml:space="preserve">
    <value>Offline-Zahlung - &lt;i&gt;Zahlung muss innerhalb {0} Tage nach Bestellung vorgenommen werden&lt;/i&gt;</value>
  </data>
  <data name="lblPaymentTerms.Text" xml:space="preserve">
    <value>&lt;br /&gt;&lt;br /&gt; Die Zahlung sollte innerhalb von &lt;b&gt;{0}&lt;/b&gt; Tagen erfüllt werden. &lt;br /&gt;</value>
  </data>
  <data name="cvvHelp.Text" xml:space="preserve">
    <value>&lt;p&gt; &lt;b&gt;Visa, MasterCard und Discover:&lt;/b&gt; Auf der Rückseite der Karte in der rechten oberen Ecke der Signatur ein. Geben Sie die dreistellige Zahl nach der Kreditkartennummer. &lt;br/&gt;
&lt;img src="{0}" alt="cvv" style="margin:10px;"/&gt;&lt;/p&gt;

&lt;p&gt; &lt;b&gt;American Express:&lt;/b&gt; Auf der Vorderseite der Karte. Geben Sie die vierstellige Zahl auf der rechten Seite, direkt über der Kreditkartennummer. &lt;br/&gt;
&lt;img src="{1}" alt="cvv" style="margin:10px;"/&gt;&lt;/p&gt;</value>
  </data>
  <data name="cvvHelpFrontImage.Text" xml:space="preserve">
    <value>frontcvv.png</value>
  </data>
  <data name="cvvHelpRearImage.Text" xml:space="preserve">
    <value>rearcvv.png</value>
  </data>
  <data name="lblCvvHelpLink.Text" xml:space="preserve">
    <value>Was ist das?</value>
  </data>
  <data name="lblStateRequired.Text" xml:space="preserve">
    <value>Staat erforderlich ist &lt;br/&gt;</value>
  </data>
  <data name="AwaitingModeration.Text" xml:space="preserve">
    <value>Ihre Bestellung wurde erfolgreich aufgenommen und wird durch den Laden admin moderiert werden, sobald diese abgeschlossen ist, werden wir Sie kennen. Sie können den Status Ihrer Bestellung jederzeit von dieser Seite aus zu überprüfen. &lt;br /&gt; Die Reihenfolge der Geschichte Abschnitt enthält detaillierte Informationen über Ihre Bestellungen.</value>
  </data>
  <data name="lblPostPaidPaymentTerms.Text" xml:space="preserve">
    <value>&lt;br /&gt;&lt;br /&gt; Die Zahlung sollte innerhalb von &lt;b&gt;{0}&lt;/b&gt; Tagen erfüllt werden. &lt;br /&gt;</value>
  </data>
  <data name="PostPaid.Text" xml:space="preserve">
    <value>Ihre Bestellung wurde erfolgreich aufgenommen und wird nun ausgeliefert werden. &lt;br /&gt; Die Reihenfolge der Geschichte Abschnitt enthält detaillierte Informationen über Ihre Bestellungen.</value>
  </data>
</root>