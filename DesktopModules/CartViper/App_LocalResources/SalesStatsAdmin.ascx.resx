<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Graph.AbandonedCarts.Title.Text" xml:space="preserve">
    <value>Abandoned Carts</value>
  </data>
  <data name="Graph.AbandonedCarts.XColumn.Text" xml:space="preserve">
    <value>Abandon Carts Count</value>
  </data>
  <data name="Graph.AbandonedCarts.Ycolumn.Text" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Graph.OrderStatus.Title.Text" xml:space="preserve">
    <value>Orders by Status for the Last 30 Days</value>
  </data>
  <data name="Graph.OrderStatus.XColumn.Text" xml:space="preserve">
    <value>Sales Count</value>
  </data>
  <data name="Graph.OrderStatus.Ycolumn.Text" xml:space="preserve">
    <value>Order Status</value>
  </data>
  <data name="Graph.SalesAmount.Title.Text" xml:space="preserve">
    <value>Order Amounts for the Last 30 Days</value>
  </data>
  <data name="Graph.SalesAmount.XColumn.Text" xml:space="preserve">
    <value>Order Amount</value>
  </data>
  <data name="Graph.SalesAmount.Ycolumn.Text" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Graph.SalesCount.Title.Text" xml:space="preserve">
    <value>Order Count for the Last 30 Days</value>
  </data>
  <data name="Graph.SalesCount.XColumn.Text" xml:space="preserve">
    <value>Order Count</value>
  </data>
  <data name="Graph.SalesCount.Ycolumn.Text" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="lblAvgNumbersOrder.Help" xml:space="preserve">
    <value>The average number of orders per day for the last 30 days.</value>
  </data>
  <data name="lblAvgNumbersOrder.Text" xml:space="preserve">
    <value>Avg orders per day in last 30 days</value>
  </data>
  <data name="lblAvgOrder.Help" xml:space="preserve">
    <value>The average order value for the orders from the last 30 days.</value>
  </data>
  <data name="lblAvgOrder.Text" xml:space="preserve">
    <value>Avg order value in last 30 days</value>
  </data>
  <data name="lblAwaitingPayment.Help" xml:space="preserve">
    <value>The total number of order in the last 30 days that have a status as awaiting payment.</value>
  </data>
  <data name="lblAwaitingPayment.Text" xml:space="preserve">
    <value>Awaiting Payment</value>
  </data>
  <data name="lblAwaitingStock.Help" xml:space="preserve">
    <value>The total number of orders in the last 30 days that have a status of awaiting stock.</value>
  </data>
  <data name="lblAwaitingStock.Text" xml:space="preserve">
    <value>Awaiting Stock</value>
  </data>
  <data name="lblCancelled.Help" xml:space="preserve">
    <value>The total number of orders in the last 30 days that have an order status of cancelled.</value>
  </data>
  <data name="lblCancelled.Text" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="lblDispatched.Help" xml:space="preserve">
    <value>The total number of orders in the last 30 days that have an order status of dispatched.</value>
  </data>
  <data name="lblDispatched.Text" xml:space="preserve">
    <value>Dispatched</value>
  </data>
  <data name="lblGraphError.Text" xml:space="preserve">
    <value>You do not have enough sales data to create a graph, you need at least 2 days of sales data in the last 30 days to plot this graph.</value>
  </data>
  <data name="lblGraphTitle.Text" xml:space="preserve">
    <value>Order data for the last 30 days</value>
  </data>
  <data name="lblHeaderText.Text" xml:space="preserve">
    <value>Store Sales Statistics</value>
  </data>
  <data name="lblMarkedAsPaid.Help" xml:space="preserve">
    <value>The total number of orders in the last 30 days that have a status as paid.</value>
  </data>
  <data name="lblMarkedAsPaid.Text" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="lblNoActiveItemsInStore.Help" xml:space="preserve">
    <value>The current number of active products in your store.</value>
  </data>
  <data name="lblNoActiveItemsInStore.Text" xml:space="preserve">
    <value>Active products</value>
  </data>
  <data name="lblNoArchivedItemsInStore.Help" xml:space="preserve">
    <value>The number of products in your store that are marked as archived.</value>
  </data>
  <data name="lblNoArchivedItemsInStore.Text" xml:space="preserve">
    <value>Archived products</value>
  </data>
  <data name="lblNoOrder30Days.Text" xml:space="preserve">
    <value>Numbers of orders in last 30 days</value>
  </data>
  <data name="lblNumberOfOrders.Help" xml:space="preserve">
    <value>The total number of orders the store has done.</value>
  </data>
  <data name="lblNumberOfOrders.Text" xml:space="preserve">
    <value>Total number of orders</value>
  </data>
  <data name="lblNumberOfOrdersYesterday.Help" xml:space="preserve">
    <value>The total number of orders from yesterday.</value>
  </data>
  <data name="lblNumberOfOrdersYesterday.Text" xml:space="preserve">
    <value>Number of orders yesterday</value>
  </data>
  <data name="lblNumberOrderToday.Help" xml:space="preserve">
    <value>The total number of orders that have been place today.</value>
  </data>
  <data name="lblNumberOrderToday.Text" xml:space="preserve">
    <value>Number of orders to today</value>
  </data>
  <data name="lblOrderLast30Days.Text" xml:space="preserve">
    <value>Orders last 30 days</value>
  </data>
  <data name="lblOrderValueToday.Help" xml:space="preserve">
    <value>The total value of the orders that have been placed today.</value>
  </data>
  <data name="lblOrderValueToday.Text" xml:space="preserve">
    <value>Value of orders today</value>
  </data>
  <data name="lblOrderValueYesterday.Help" xml:space="preserve">
    <value>The total value of the orders that have been placed yesterday.</value>
  </data>
  <data name="lblOrderValueYesterday.Text" xml:space="preserve">
    <value>Value of orders yesterday</value>
  </data>
  <data name="lblPacking.Help" xml:space="preserve">
    <value>The total number of orders in the last 30 days that have an order status of packing.</value>
  </data>
  <data name="lblPacking.Text" xml:space="preserve">
    <value>Packing</value>
  </data>
  <data name="lblProcessing.Help" xml:space="preserve">
    <value>The number of orders in the last 30 days that have an order status of processing.</value>
  </data>
  <data name="lblProcessing.Text" xml:space="preserve">
    <value>Processing</value>
  </data>
  <data name="lblStoreStats.Text" xml:space="preserve">
    <value>Recent Order Statistics</value>
  </data>
  <data name="lblTotalSales30Days.Help" xml:space="preserve">
    <value>The value of the total sales in the last 30 days.</value>
  </data>
  <data name="lblTotalSales30Days.Text" xml:space="preserve">
    <value>Sales in the last 30 days</value>
  </data>
  <data name="lblXaxisLabel.Text" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="lblyAxisLabel.Text" xml:space="preserve">
    <value>{0}</value>
  </data>
</root>