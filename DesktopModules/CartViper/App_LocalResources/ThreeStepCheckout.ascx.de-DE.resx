<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AwaitingPayment.Text" xml:space="preserve">
    <value>Ihre Bestellung wurde erfolgreich aufgenommen, und wir sind noch nicht bezahlt. Sie können den Status Ihrer Bestellung jederzeit von dieser Seite aus zu überprüfen. &lt;br /&gt; Die Reihenfolge der Geschichte Abschnitt enthält detaillierte Informationen über Ihre Bestellungen.</value>
  </data>
  <data name="btnDisplayOrder.Text" xml:space="preserve">
    <value>Bestellung anzeigen</value>
  </data>
  <data name="btnNext.Text" xml:space="preserve">
    <value>Nächste</value>
  </data>
  <data name="btnPlaceOrder.Text" xml:space="preserve">
    <value>Bestellung aufgeben</value>
  </data>
  <data name="btnPrevious.Text" xml:space="preserve">
    <value>Vorherige</value>
  </data>
  <data name="lblCreateAccount.Text" xml:space="preserve">
    <value>&lt;br &gt; Klicken Sie &lt;a href='{0}'&gt;hier&lt;/a&gt; , um ein neues Benutzerkonto zu erstellen.</value>
  </data>
  <data name="lblDigitalDownloads.Text" xml:space="preserve">
    <value>&lt;br /&gt; Klicken Sie &lt;a href="{0}"&gt;hier&lt;/a&gt; , um zum &lt;b&gt;digitalen Download locker&lt;/b&gt; und laden Sie Ihre Dateien. &lt;br /&gt;</value>
  </data>
  <data name="lblInvalidLicense.Text" xml:space="preserve">
    <value>Ihre Lizenz ist entweder abgelaufen oder ungültig ist und Ihre Kunden sind daher nicht zur Kasse. &lt;br /&gt; Bitte kaufen Sie eine neue Lizenz bei &lt;a href="http://www.cartviper.com" target="_blank"&gt;www.cartviper.com&lt;/a&gt;</value>
  </data>
  <data name="lblOfflinePayment.Help" xml:space="preserve">
    <value>Wählen Sie Ihre Bestellung aufgeben, bezahlen aber über eine Offline-Mitteln wie Scheck, Bargeld, etc. Ihre Bestellung platziert werden und wird den Status "in Erwartung der Zahlung" haben, bis Sie die Zahlung abgeschlossen haben.</value>
  </data>
  <data name="lblOfflinePayment.Text" xml:space="preserve">
    <value>Offline-Zahlung</value>
  </data>
  <data name="lblOnlinePayment.Help" xml:space="preserve">
    <value>Pay sofort und sicher per Online-Zahlung.</value>
  </data>
  <data name="lblOnlinePayment.Text" xml:space="preserve">
    <value>Online-Zahlung</value>
  </data>
  <data name="lblOrderNumber.Text" xml:space="preserve">
    <value>Danke für Ihren Einkauf bei uns. &lt;br /&gt; Ihre Bestellnummer lautet: {0}</value>
  </data>
  <data name="OrderPlaced.Text" xml:space="preserve">
    <value>Ihre Bestellnummer lautet:</value>
  </data>
  <data name="PaymentCancelled.Text" xml:space="preserve">
    <value>Sie haben die Zahlung storniert, wird Ihre Bestellung noch nicht platziert ist, und Sie haben nicht angeklagt worden.</value>
  </data>
  <data name="PaymentFailed.Text" xml:space="preserve">
    <value>Ihre Zahlung ist fehlgeschlagen, Ihre Bestellung wurde nicht gestellt und Sie wurden nicht erhoben.</value>
  </data>
  <data name="PaymentRequiresConfirmation.Text" xml:space="preserve">
    <value>Ihre Bestellung wurde erfolgreich wir sind jedoch für die Bestätigung der Zahlung von Ihrer Bank erwarten aufgezeichnet. Sie erhalten eine E-Mail, wenn wir diese Bestätigung erhalten haben. &lt;br /&gt; Wenn Sie ein Konto bei uns registriert haben, können Sie den Status Ihrer Bestellung jederzeit von dieser Seite aus zu überprüfen. &lt;br /&gt; Die Reihenfolge der Geschichte Abschnitt enthält detaillierte Informationen über Ihre Bestellungen.</value>
  </data>
  <data name="PaymentSucceeded.Text" xml:space="preserve">
    <value>Ihre Bestellung wurde erfolgreich verarbeitet. &lt;br /&gt; Wenn Sie ein Konto bei uns registriert haben, können Sie den Status Ihrer Bestellung jederzeit aus, um die Geschichte Seite zu überprüfen. &lt;br /&gt; Die Reihenfolge der Geschichte Abschnitt enthält detaillierte Informationen über alle Ihre Bestellungen.</value>
  </data>
  <data name="RequiresConfirmationMessage.Text" xml:space="preserve">
    <value>Danke für Ihren Einkauf bei uns. &lt;br /&gt; Ihre Bestellnummer lautet: {0} &lt;br/&gt;</value>
  </data>
  <data name="btnRetry.Text" xml:space="preserve">
    <value>Wiederholen</value>
  </data>
  <data name="lblRegistrationCode.Text" xml:space="preserve">
    <value>&lt;br /&lt;br /&gt; Ihr Registrierungscode ist: &lt;b&gt;{0}.&lt;/b&gt; &lt;br /&gt;</value>
  </data>
  <data name="lblPaymentTerms.Text" xml:space="preserve">
    <value>&lt;br /&gt;&lt;br /&gt; Die Zahlung sollte innerhalb von &lt;b&gt;{0}&lt;/b&gt; Tagen erfüllt werden. &lt;br /&gt;</value>
  </data>
  <data name="AwaitingModeration.Text" xml:space="preserve">
    <value>Ihre Bestellung wurde erfolgreich aufgenommen und wird durch den Laden admin moderiert werden, sobald diese abgeschlossen ist, werden wir Sie kennen. Sie können den Status Ihrer Bestellung jederzeit von dieser Seite aus zu überprüfen. &lt;br /&gt; Die Reihenfolge der Geschichte Abschnitt enthält detaillierte Informationen über Ihre Bestellungen.</value>
  </data>
  <data name="lblPostPaidPaymentTerms.Text" xml:space="preserve">
    <value>&lt;br /&gt;&lt;br /&gt; Die Zahlung sollte innerhalb von &lt;b&gt;{0}&lt;/b&gt; Tagen erfüllt werden. &lt;br /&gt;</value>
  </data>
  <data name="PostPaid.Text" xml:space="preserve">
    <value>Ihre Bestellung wurde erfolgreich aufgenommen und wird nun ausgeliefert werden. &lt;br /&gt; Die Reihenfolge der Geschichte Abschnitt enthält detaillierte Informationen über Ihre Bestellungen.</value>
  </data>
</root>