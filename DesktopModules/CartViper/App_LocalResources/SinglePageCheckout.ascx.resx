<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnPlaceOrder.Text" xml:space="preserve">
    <value>&lt;i class="fa fa-arrow-circle-right fa-lg"&gt;&lt;/i&gt; Place Order</value>
  </data>
  <data name="chkInStorePickUp.Text" xml:space="preserve">
    <value>Collect All Items From the Store&lt;br /&gt;&lt;br /&gt;</value>
  </data>
  <data name="lblAddress1.Text" xml:space="preserve">
    <value>Address 1</value>
  </data>
  <data name="lblAddress1Required.Text" xml:space="preserve">
    <value>Address 1 is required &lt;br /&gt;</value>
  </data>
  <data name="lblAddress2.Text" xml:space="preserve">
    <value>Address 2</value>
  </data>
  <data name="lblBillingAddress.Text" xml:space="preserve">
    <value>Billing Address</value>
  </data>
  <data name="lblCardSecurityNumber.Text" xml:space="preserve">
    <value>Card Security Number</value>
  </data>
  <data name="lblCardSecurityRequired.Text" xml:space="preserve">
    <value>Card Security Number is required &lt;br /&gt;</value>
  </data>
  <data name="lblCartEmpty.Text" xml:space="preserve">
    <value>Your cart is empty</value>
  </data>
  <data name="lblCCRequired.Text" xml:space="preserve">
    <value>Credit Card number is required &lt;br /&gt;</value>
  </data>
  <data name="lblCity.Text" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="lblCityRequired.Text" xml:space="preserve">
    <value>City is required &lt;br /&gt;</value>
  </data>
  <data name="lblCompanyName.Text" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="lblCompanyNameRequired.Text" xml:space="preserve">
    <value>Company Name is required &lt;br /&gt;</value>
  </data>
  <data name="lblCountry.Text" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="lblCreditCardNumber.Text" xml:space="preserve">
    <value>Credit Card Number</value>
  </data>
  <data name="lblDiscount.Text" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="lblEmail.Text" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="lblEmailNotValid.Text" xml:space="preserve">
    <value>Email is not valid&lt;br /&gt;</value>
  </data>
  <data name="lblEmailRequired.Text" xml:space="preserve">
    <value>Email is required &lt;br /&gt;</value>
  </data>
  <data name="lblExpiry.Text" xml:space="preserve">
    <value>Expiry Date</value>
  </data>
  <data name="lblFirstName.Text" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="lblFirstNameRequired.Text" xml:space="preserve">
    <value>First Name is required &lt;br /&gt;</value>
  </data>
  <data name="lblFreeShipping.Text" xml:space="preserve">
    <value>Free Shipping</value>
  </data>
  <data name="lblOrderFailed.Text" xml:space="preserve">
    <value>Order failed please try again, you have not been charged.</value>
  </data>
  <data name="lblPaymentDetails.Text" xml:space="preserve">
    <value>Payment Details</value>
  </data>
  <data name="lblPhone.Text" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="lblPhoneRequired.Text" xml:space="preserve">
    <value>Phone is required &lt;br /&gt;</value>
  </data>
  <data name="lblQty.Text" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="lblShipping.Text" xml:space="preserve">
    <value>Shipping</value>
  </data>
  <data name="lblShippingAddress.Text" xml:space="preserve">
    <value>Shipping Address</value>
  </data>
  <data name="lblShippingOptions.Text" xml:space="preserve">
    <value>Shipping Options</value>
  </data>
  <data name="lblState.Text" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="lblSubtotal.Text" xml:space="preserve">
    <value>Subtotal</value>
  </data>
  <data name="lblSurname.Text" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="lblSurnameRequired.Text" xml:space="preserve">
    <value>Last Name is required &lt;br /&gt;</value>
  </data>
  <data name="lblTax.Text" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="lblTotal.Text" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="lblUnableToShip.Text" xml:space="preserve">
    <value>We are unable to ship to your selected address.</value>
  </data>
  <data name="lblUseShipping.Text" xml:space="preserve">
    <value>Use Billing Address</value>
  </data>
  <data name="lblVat.Text" xml:space="preserve">
    <value>Vat</value>
  </data>
  <data name="lblVatNumber.Text" xml:space="preserve">
    <value>VAT Number</value>
  </data>
  <data name="lblZip.Text" xml:space="preserve">
    <value>Zip</value>
  </data>
  <data name="lblZipRequired.Text" xml:space="preserve">
    <value>Zip is required &lt;br /&gt;</value>
  </data>
  <data name="AwaitingPayment.Text" xml:space="preserve">
    <value>Your order has been successfully recorded and we are awaiting payment. You can check the status of your order at any time from this page.&lt;br /&gt;The order history section contains detailed informations about your orders.</value>
  </data>
  <data name="btnDisplayOrder.Text" xml:space="preserve">
    <value>View Order</value>
  </data>
  <data name="lblCounty.Text" xml:space="preserve">
    <value>County</value>
  </data>
  <data name="lblCreateAccount.Text" xml:space="preserve">
    <value>&lt;br &gt;Click &lt;a href='{0}'&gt;here&lt;/a&gt; to create a new user account.</value>
  </data>
  <data name="lblDigitalDownloads.Text" xml:space="preserve">
    <value>&lt;br /&gt;Click &lt;a href="{0}"&gt;here&lt;/a&gt; to go to the &lt;b&gt;digital download locker&lt;/b&gt; and download your files.&lt;br /&gt;</value>
  </data>
  <data name="lblOrderNumber.Text" xml:space="preserve">
    <value>Thank you for shopping with us.&lt;br /&gt;Your order number is:&amp;nbsp;{0}&amp;nbsp;</value>
  </data>
  <data name="lblRegistrationCode.Text" xml:space="preserve">
    <value>&lt;br /&lt;br /&gt;Your registration code is: &lt;b&gt;{0}&lt;/b&gt;.&lt;br /&gt;</value>
  </data>
  <data name="OrderPlaced.Text" xml:space="preserve">
    <value>Your order number is: </value>
  </data>
  <data name="rdOfflinePayment.Text" xml:space="preserve">
    <value>Offline Payment</value>
  </data>
  <data name="lblCardType.Text" xml:space="preserve">
    <value>Card Type</value>
  </data>
  <data name="lblIssueNumber.Text" xml:space="preserve">
    <value>Issue Number</value>
  </data>
  <data name="lblIssueNumberRequired.Text" xml:space="preserve">
    <value>Issue Number Is Required &lt;br /&gt;</value>
  </data>
  <data name="lblNoPaymentGateways.Text" xml:space="preserve">
    <value>No Payment Gateways Have Been Configured.</value>
  </data>
  <data name="lblStartDate.Text" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="lblRecievedFreeProduct.Text" xml:space="preserve">
    <value>You have already received your free product, please remove it from the cart.</value>
  </data>
  <data name="PrePaidCredit.Text" xml:space="preserve">
    <value>Prepaid Credit</value>
  </data>
  <data name="rdOfflinePaymentTerms.Text" xml:space="preserve">
    <value>Offline Payment - &lt;i&gt;Payment must be made within {0} days of the order being placed &lt;/i&gt;</value>
  </data>
  <data name="lblPaymentTerms.Text" xml:space="preserve">
    <value>&lt;br /&gt;&lt;br /&gt;Payment should be made within &lt;b&gt;{0}&lt;/b&gt; days.&lt;br /&gt;</value>
  </data>
  <data name="cvvHelp.Text" xml:space="preserve">
    <value>&lt;p&gt;&lt;b&gt;Visa, MasterCard, and Discover:&lt;/b&gt; On the back of the card in the top-right corner of the signature box. Enter the three-digit number following the credit card number. &lt;br/&gt;
&lt;img src="{0}" alt="cvv" style="margin:10px;"/&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;American Express: &lt;/b&gt;On the front of the card. Enter the four-digit number on the right, directly above the credit card number.&lt;br/&gt;
&lt;img src="{1}" alt="cvv" style="margin:10px;"/&gt;&lt;/p&gt;</value>
  </data>
  <data name="cvvHelpFrontImage.Text" xml:space="preserve">
    <value>frontcvv.png</value>
    <comment>no_translate</comment>
  </data>
  <data name="cvvHelpRearImage.Text" xml:space="preserve">
    <value>rearcvv.png</value>
    <comment>no_translate</comment>
  </data>
  <data name="lblCvvHelpLink.Text" xml:space="preserve">
    <value>What is this?</value>
  </data>
  <data name="lblStateRequired.Text" xml:space="preserve">
    <value>State is required&lt;br/&gt;</value>
  </data>
  <data name="AwaitingAdminModeration.Text" xml:space="preserve">
    <value>Your order has been successfully recorded and will be moderated by the store admin, once this has been completed we will let you know. You can check the status of your order at any time from the Order History page.&lt;br /&gt;The order history section contains detailed informations about your orders.</value>
  </data>
  <data name="lblPostPaidPaymentTerms.Text" xml:space="preserve">
    <value>&lt;br /&gt;&lt;br /&gt;Payment should be made within &lt;b&gt;{0}&lt;/b&gt; days.&lt;br /&gt;</value>
  </data>
  <data name="PostPaid.Text" xml:space="preserve">
    <value>Your order has been successfully recorded and will now be shipped.&lt;br /&gt;The order history section contains detailed informations about your orders.</value>
  </data>
  <data name="rdBuckarooPayment.Text" xml:space="preserve">
    <value>Buckaroo</value>
  </data>
  <data name="lblInvalidLicense.Text" xml:space="preserve">
    <value>Your license has either expired or is invalid and your customers are therefore unable to checkout.&lt;br /&gt; Please purchase a new license at &lt;a href="http://www.cartviper.com" target="_blank"&gt;www.cartviper.com&lt;/a&gt;</value>
  </data>
  <data name="lblShippingAddressIsResidential.Text" xml:space="preserve">
    <value>My shipping address is a business address</value>
  </data>
  <data name="lblMixedShippedInStore.Text" xml:space="preserve">
    <value>This order contains items which need to be picked up instore.</value>
  </data>
  <data name="lblShippingOptionHelp.Text" xml:space="preserve">
    <value>Please select a shipping option.</value>
  </data>
  <data name="lblInStorePickup.Text" xml:space="preserve">
    <value>Your order needs to be collected for the store</value>
  </data>
  <data name="rdOfflinePaymentModeration.Text" xml:space="preserve">
    <value>Place order into quote moderation queue</value>
  </data>
  <data name="lblShippingStateError.Text" xml:space="preserve">
    <value>We cannot ship to your selected billing state.</value>
  </data>
  <data name="AwaitingCustManModeration.Text" xml:space="preserve">
    <value>Your order has been successfully recorded and will be moderated by the customer manager, once this has been completed we will let you know. You can check the status of your order at any time from the Order History page.&lt;br /&gt;The order history section contains detailed informations about your orders.</value>
  </data>
  <data name="rdPlaceIntoCustomerModeration.Text" xml:space="preserve">
    <value>Place ordering in customer manager moderation queue</value>
  </data>
  <data name="btnCompleteQuote.Text" xml:space="preserve">
    <value>Request Quote</value>
  </data>
  <data name="rdOgonePaymentCC.Text" xml:space="preserve">
    <value>Credit Card Payment</value>
  </data>
  <data name="rdOgonePaymentIdeal.Text" xml:space="preserve">
    <value>iDeal Bank Payment</value>
  </data>
  <data name="rbRaboOmniKassa.Text" xml:space="preserve">
    <value>Credit Card/iDeal Payment</value>
  </data>
  <data name="rbFirstDataConnect.Text" xml:space="preserve">
    <value>Credit Card</value>
  </data>
  <data name="lblHandling.Text" xml:space="preserve">
    <value>Handling</value>
  </data>
  <data name="paymentFailMessage.Text" xml:space="preserve">
    <value />
  </data>
  <data name="PaymentPointsCaption.Text" xml:space="preserve">
    <value>Pay for this order using your existing points balance of {0:0.00}</value>
  </data>
  <data name="lblShippingProvider.Text" xml:space="preserve">
    <value>Available Shipping Providers:</value>
  </data>
  <data name="lnkMakeCustomerOrder.Text" xml:space="preserve">
    <value>&lt;i class="fa fa-arrow-circle-right fa-lg"&gt;&lt;/i&gt; Create an Order</value>
  </data>
  <data name="lnkMakeCustomerQuote.Text" xml:space="preserve">
    <value>&lt;i class="fa fa-quote-left fa-lg"&gt;&lt;/i&gt; Create a Quote (Allows you to change the prices)</value>
  </data>
  <data name="btnRequestAQuote.Text" xml:space="preserve">
    <value>&lt;i class="fa fa-quote-left fa-lg"&gt;&lt;/i&gt; Request a Quote</value>
  </data>
  <data name="lblShippingCaption.Text" xml:space="preserve">
    <value>Unable to ship the order&lt;br/&gt;</value>
  </data>
  <data name="chkAgreeTermsAndConditions.Text" xml:space="preserve">
    <value>I agree to the Terms and Conditions of the website</value>
  </data>
  <data name="rfvTermsRequired.Text" xml:space="preserve">
    <value>&lt;br/&gt;You need to agree to the Terms and Conditions before placing your order.</value>
  </data>
  <data name="lblKvkNumber.Text" xml:space="preserve">
    <value>KVK Number</value>
  </data>
  <data name="lblKvkRequired.Text" xml:space="preserve">
    <value>KVK Number is required&lt;br /&gt;</value>
  </data>
  <data name="lblVatRequired.Text" xml:space="preserve">
    <value>VAT Number is required&lt;br /&gt;</value>
  </data>
  <data name="rdAuthnetSIM.Text" xml:space="preserve">
    <value />
  </data>
  <data name="rdNabDirect.Text" xml:space="preserve">
    <value>Credit Card Payment</value>
  </data>
  <data name="lblInStoreLocationCaption.Text" xml:space="preserve">
    <value>Please select a store location</value>
  </data>
  <data name="lblOrderDetails.Text" xml:space="preserve">
    <value>Order Details</value>
  </data>
  <data name="hypSelectFromAddressBook.Text" xml:space="preserve">
    <value>&lt;i class="fa fa-book"&gt;&lt;/i&gt; Select From Address Book</value>
  </data>
  <data name="hypCancelSave.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="hypSaveBookAddress.Text" xml:space="preserve">
    <value>&lt;i class='fa fa-save'&gt;&lt;/i&gt; Save Address</value>
  </data>
  <data name="lblAddNewAddress.Text" xml:space="preserve">
    <value>Click To Add A New Address To Your Address Book</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="lblExistingAddresses.Text" xml:space="preserve">
    <value>Existing Addresses</value>
  </data>
  <data name="lblAddressSaveError.Text" xml:space="preserve">
    <value>Please complete all required fields.</value>
  </data>
  <data name="lblCardHolder.Text" xml:space="preserve">
    <value>Name on Card</value>
  </data>
  <data name="lblCardHolderRequired.Text" xml:space="preserve">
    <value>The Name on Card is required</value>
  </data>
  <data name="lblOrderNotes.Text" xml:space="preserve">
    <value>Order Notes</value>
  </data>
</root>