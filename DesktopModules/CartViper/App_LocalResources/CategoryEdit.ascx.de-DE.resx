<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelCategoryName.Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="labelCategoryName.Help" xml:space="preserve">
    <value>User-friendly Name der Kategorie zu identifizieren.</value>
  </data>
  <data name="labelCategoryDescription.Text" xml:space="preserve">
    <value>Beschreibung</value>
  </data>
  <data name="labelCategoryDescription.Help" xml:space="preserve">
    <value>Ausführliche Beschreibung des aktuellen Elements.</value>
  </data>
  <data name="labelArchived.Text" xml:space="preserve">
    <value>Archivierte</value>
  </data>
  <data name="labelArchived.Help" xml:space="preserve">
    <value>Gibt an, ob das Objekt archiviert wurde und nicht mehr aktiv ist.</value>
  </data>
  <data name="labelMessage.Text" xml:space="preserve">
    <value>Nachricht</value>
  </data>
  <data name="labelMessage.Help" xml:space="preserve">
    <value>Nachricht an der Spitze der Kategorie Liste angezeigt werden.</value>
  </data>
  <data name="labelOrder.Help" xml:space="preserve">
    <value>Die um die Kategorie in der Anzeige</value>
  </data>
  <data name="labelOrder.Text" xml:space="preserve">
    <value>Anzeigereihenfolge</value>
  </data>
  <data name="labelParentCategory.Help" xml:space="preserve">
    <value>Die übergeordnete Kategorie dieser Kategorie</value>
  </data>
  <data name="labelParentCategory.Text" xml:space="preserve">
    <value>Elternteil</value>
  </data>
  <data name="lblRecursionWarning.Text" xml:space="preserve">
    <value>Rekursive Kategorie Beziehung nachgewiesen werden. Bitte geben Sie einen &lt;br/&gt; verschiedene übergeordnete Kategorie.</value>
  </data>
  <data name="None.Text" xml:space="preserve">
    <value>Keiner</value>
  </data>
  <data name="validatorOrder.Text" xml:space="preserve">
    <value>Error! Bitte geben Sie eine gültige Bestellung.</value>
  </data>
  <data name="validatorRequireOrder.Text" xml:space="preserve">
    <value>* Display Auftrag erforderlich ist.</value>
  </data>
  <data name="ErrorDelete.Text" xml:space="preserve">
    <value>Diese Kategorie kann nicht entfernt werden! Mögliche Ursachen: Ein oder mehrere Unterkategorien abhängig sind. Ein oder mehrere Produkte sind abhängig.</value>
  </data>
  <data name="valReqCategoryName.Text" xml:space="preserve">
    <value>* Kategorie Name ist erforderlich.</value>
  </data>
  <data name="labelCategoryKeywords.Help" xml:space="preserve">
    <value>Geben Sie Schlüsselwörter durch Komma getrennt. &lt;br/&gt; Dieser Wert wird in der META Schlüsselwörter eingefügt werden &lt;br/&gt; wenn der Katalog-Seite wird angezeigt. &lt;br/&gt; Die SEO-Feature-Einstellung muss aktiviert werden &lt;br/&gt; in den Shop-Einstellungen für die Arbeiten.</value>
  </data>
  <data name="labelCategoryKeywords.Text" xml:space="preserve">
    <value>SEO Keywords</value>
  </data>
  <data name="lblSeoCategoryName.Help" xml:space="preserve">
    <value>Name der Kategorie, in SEO URL-Anzeige</value>
  </data>
  <data name="lblSeoCategoryName.Text" xml:space="preserve">
    <value>SEO Url Kategorie Name</value>
  </data>
  <data name="revSeoCategoryName.Text" xml:space="preserve">
    <value>* Das Feld darf nur az, 0-9 oder die Symbole "_", "-"</value>
  </data>
  <data name="rfvSeoName.Text" xml:space="preserve">
    <value>* SEO Url Kategorie Name ist erforderlich</value>
  </data>
  <data name="cvSeoCategoryName.Text" xml:space="preserve">
    <value>* SEO Url Kategorie Name ist nicht eindeutig</value>
  </data>
  <data name="lblCategoryRole.Help" xml:space="preserve">
    <value>Wenn hier eine Rolle zugewiesen wird, wird diese Kategorie, und alle Produkte in der Kategorie nur von den Benutzern dieser Rolle sichtbar. Wenn keine Rolle angegeben wird alle Benutzer in der Lage sein, um die Kategorie zu sehen.</value>
  </data>
  <data name="lblCategoryRole.Text" xml:space="preserve">
    <value>Kategorie Role</value>
  </data>
  <data name="lblCategoryImage.Help" xml:space="preserve">
    <value>Das Bild, das in der Benutzeroberfläche für diese Kategorie ausgegeben werden können.</value>
  </data>
  <data name="lblCategoryImage.Text" xml:space="preserve">
    <value>Category Image</value>
  </data>
  <data name="cmdDelete.Text" xml:space="preserve">
    <value>Kategorie löschen</value>
  </data>
  <data name="cmdDeleteImage.Text" xml:space="preserve">
    <value>Delete Category Image</value>
  </data>
  <data name="lblPage.Help" xml:space="preserve">
    <value>Die Seite, die der Kategorie nach geöffnet werden soll, beachten Sie eine Instanz der Cart Viper Katalog-Modul auf dieser Seite benötigen. Wenn "none" ausgewählt ist der Kategorie wird auf dem Standard-Warenkorb viper Katalog Seite angezeigt werden.</value>
  </data>
  <data name="lblPage.Text" xml:space="preserve">
    <value>Kategorie Seite</value>
  </data>
  <data name="TabHidden.Text" xml:space="preserve">
    <value>(Hidden!)</value>
  </data>
</root>