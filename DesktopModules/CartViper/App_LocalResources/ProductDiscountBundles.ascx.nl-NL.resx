<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnAddNewBundle.Text" xml:space="preserve">
    <value>Voeg nieuwe bundel</value>
  </data>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>Annuleren</value>
  </data>
  <data name="btnDelete.Text" xml:space="preserve">
    <value>Geselecteerde verwijderen</value>
  </data>
  <data name="btnReturn.Text" xml:space="preserve">
    <value>Terug</value>
  </data>
  <data name="btnSave.Text" xml:space="preserve">
    <value>Opslaan</value>
  </data>
  <data name="lblActive.Help" xml:space="preserve">
    <value>Als het selectievakje niet is geselecteerd zal de bundel niet actief worden en de gebruikers ontvangt geen korting als ze de aankoop van de items in de bundel.</value>
  </data>
  <data name="lblActive.Text" xml:space="preserve">
    <value>Actief</value>
  </data>
  <data name="lblAddEditProductBundleResource.Text" xml:space="preserve">
    <value>Add / Edit Product Korting Bundels</value>
  </data>
  <data name="lblAddProducts.Text" xml:space="preserve">
    <value>Voeg producten toe aan Bundel korting</value>
  </data>
  <data name="lblAlreadyAdded.Text" xml:space="preserve">
    <value>Dit product is al toegevoegd aan de bundel</value>
  </data>
  <data name="lblBundleDescription.Help" xml:space="preserve">
    <value>Een beschrijving van het product korting bundel</value>
  </data>
  <data name="lblBundleDescription.Text" xml:space="preserve">
    <value>Beschrijving</value>
  </data>
  <data name="lblBundleDescriptionRequired.Text" xml:space="preserve">
    <value>Vereist</value>
  </data>
  <data name="lblBundleDiscountAmountRequired.Text" xml:space="preserve">
    <value>Vereist</value>
  </data>
  <data name="lblBundleName.Help" xml:space="preserve">
    <value>De naam die moet worden gegeven aan het product korting.</value>
  </data>
  <data name="lblBundleName.Text" xml:space="preserve">
    <value>Korting Bundel Naam</value>
  </data>
  <data name="lblBundleNameRequired.Text" xml:space="preserve">
    <value>Vereist.</value>
  </data>
  <data name="lblDiscountPercentage.Help" xml:space="preserve">
    <value>Het bedrag dat we moeten% korting van de totale som van de items in de bundel. Voer bedragen in hele getallen: bijvoorbeeld voor een korting van 20% in te voeren 20 voor een 5% korting van 5 in te voeren.</value>
  </data>
  <data name="lblDiscountPercentage.Text" xml:space="preserve">
    <value>Kortingspercentage Bedrag</value>
  </data>
  <data name="lblError.Text" xml:space="preserve">
    <value>Selecteer ten minste 2 producten op de korting bundel te maken.</value>
  </data>
  <data name="lblExistingBundles.Text" xml:space="preserve">
    <value>Bestaand Product Korting Bundels</value>
  </data>
  <data name="lblHeaderText.Text" xml:space="preserve">
    <value>Product Korting Bundels</value>
  </data>
  <data name="lblInclude.Text" xml:space="preserve">
    <value>Selecteer om te verwijderen</value>
  </data>
  <data name="lblModelNumber.Help" xml:space="preserve">
    <value>Het modelnummer van het product toe te voegen aan de korting bundel, noteer het modelnummer automatisch zal worden voorgesteld.</value>
  </data>
  <data name="lblModelNumber.Text" xml:space="preserve">
    <value>Modelnummer</value>
  </data>
  <data name="lblMultipleProductsWithSameSku.Text" xml:space="preserve">
    <value>Er zijn meerdere producten in uw winkel met hetzelfde modelnummer, &lt;br /&gt; Zorg ervoor dat alle modelnummers unqiue zijn.</value>
  </data>
  <data name="lblProductName.Text" xml:space="preserve">
    <value>Naam van het product</value>
  </data>
  <data name="lblProducts.Help" xml:space="preserve">
    <value>Hieronder staan ​​alle producten die deel uitmaken van deze korting bundel.</value>
  </data>
  <data name="lblProducts.Text" xml:space="preserve">
    <value>Producten in de bundel</value>
  </data>
  <data name="linkDelete.Text" xml:space="preserve">
    <value>Verwijderen</value>
  </data>
  <data name="linkEdit.Text" xml:space="preserve">
    <value>Edit Bundel Details</value>
  </data>
  <data name="linkProducts.Text" xml:space="preserve">
    <value>Edit Producten In Korting Bundel</value>
  </data>
</root>