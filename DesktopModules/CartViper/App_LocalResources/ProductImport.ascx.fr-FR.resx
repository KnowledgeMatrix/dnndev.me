<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnImport.Text" xml:space="preserve">
    <value>Importation de produits</value>
  </data>
  <data name="hypShowHelp.Text" xml:space="preserve">
    <value>Show Aide</value>
  </data>
  <data name="importFail.Text" xml:space="preserve">
    <value>Des erreurs sont survenues durant le processus d'importation.</value>
  </data>
  <data name="importSuccess.Text" xml:space="preserve">
    <value>Les produits ont été importés avec succès à partir du fichier.</value>
  </data>
  <data name="lblCsvFile.Help" xml:space="preserve">
    <value>Sélectionnez le fichier CSV contenant les produits à importer dans le magasin</value>
  </data>
  <data name="lblCsvFile.Text" xml:space="preserve">
    <value>Sélectionnez un fichier CSV</value>
  </data>
  <data name="lblCsvHelp.Text" xml:space="preserve">
    <value>&lt;p&gt; Les produits peuvent être importés dans le panier Viper à partir de fichiers de données CSV. Tous les fichiers csv doit avoir une tête sur la première ligne, cette défini ce que chaque colonne de la repsents csv. Notez que si un produit est détecté lors de l'importation avec le même numéro de modèle du produit existant sera mis à jour plutôt que de nouveau ajouté. &lt;/p&gt;

&lt;p&gt; L'importation supporte les colonnes suivantes, tout nom de colonne d'autres sont ignorés. &lt;/p&gt;

&lt;table class="csvHelpTable" cellspacing="0" cellpadding="3" border="0"&gt;
&lt;tr&gt;
&lt;td&gt; &lt;strong&gt;Nom du champ&lt;/strong&gt; &lt;/td&gt;
&lt;td&gt; &lt;strong&gt;Obligatoires&lt;/strong&gt; &lt;/td&gt;
&lt;td&gt; &lt;strong&gt;Tapez&lt;/strong&gt; &lt;/td&gt;
&lt;td&gt; &lt;strong&gt;Remarques&lt;/strong&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Fabricant &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; string (50) &lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; ModelNumber &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; string (50) &lt;/td&gt;
&lt;td&gt; Bien que ce champ n'est pas obligatoire, si vous souhaitez mettre à jour vos produits via l'importation, ce champ doit être fourni en ce domaine est de savoir comment panier Viper détermine quel produit de mise à jour. &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; ModelName &lt;/td&gt;
&lt;td&gt; VRAI &lt;/td&gt;
&lt;td&gt; string (255) &lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; UnitCost &lt;/td&gt;
&lt;td&gt; VRAI &lt;/td&gt;
&lt;td&gt; décimal &lt;/td&gt;
&lt;td&gt; Cela devrait être hors TVA / taxe &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Résumé &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; cordes (1000) &lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Descriptif &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; cordes &lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; SeoKeywords &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; cordes &lt;/td&gt;
&lt;td&gt; Option Mots-clés de SEO pour importation pour le produit &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; ProductWeight &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; décimal &lt;/td&gt;
&lt;td&gt; Par défaut à zéro si non fourni &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; ProductHeight &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; décimal &lt;/td&gt;
&lt;td&gt; Par défaut à zéro si non fourni &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; ProductLength &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; décimal &lt;/td&gt;
&lt;td&gt; Par défaut à zéro si non fourni &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; ProductWidth &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; décimal &lt;/td&gt;
&lt;td&gt; Par défaut à zéro si non fourni &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; StockQuantity &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; int &lt;/td&gt;
&lt;td&gt; Par défaut à zéro si non fourni &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; IsTaxFree &lt;/td&gt;
&lt;td valign="top"&gt; FAUX &lt;/td&gt;
&lt;td valign="top"&gt; oui / non &lt;/td&gt;
&lt;td&gt; Ceci n'est utilisé que lorsque vous utilisez les pays TVA non. à savoir des Etats-Unis. S'il n'est pas fourni, nous supposons PAS libres d'impôt. S'il n'est pas défini par défaut
«Non» &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; VatRate &lt;/td&gt;
&lt;td valign="top"&gt; FAUX &lt;/td&gt;
&lt;td valign="top"&gt; s / r / z &lt;/td&gt;
&lt;td&gt; Uniquement utilisé lorsque le pays est un territoire de TVA. S'il n'est pas défini par défaut que nous à "s" standardrate. L'entrée devrait devrait juste la première lettre du code de taux de TVA. &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; Catégorie &lt;/td&gt;
&lt;td valign="top"&gt; FAUX &lt;/td&gt;
&lt;td valign="top"&gt; cordes &lt;/td&gt;
&lt;td&gt; Nom de la catégorie d'affecter le produit à. Une catégorie doit être inscrit pleinement avec toutes les catégories définies parent. Le format devrait être
«Parent&gt; sous-catég&gt; mycategory", chaque niveau de la catégorie devrait être divisé par un "&gt;". &lt;br/&gt;
En outre, il est également possible d'affecter un produit à des catégories mulitple en séparant chacune avec un point-virgule. ie.
«Parent&gt; sous-catég&gt; mycategory; parent&gt; sous-catég&gt; othercategory" &lt;br /&gt; Notez que si la catégorie n'existe pas déjà dans le magasin alors la catégorie sera créée automatiquement et ensuite le produit sera affecté à la catégorie nouvellement créée.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; Image &lt;/td&gt;
&lt;td valign="top"&gt; FAUX &lt;/td&gt;
&lt;td valign="top"&gt; cordes &lt;/td&gt;
&lt;td&gt; Nom de fichier de l'image d'être attribuée au produit. &lt;br/&gt;
En outre, il est également possible d'affecter un produit à mulitple images en séparant chacune avec un point-virgule. ie.
"Product001.jpg; product001_alternative.jpg" &lt;br/&gt;
Le fichier image réelle devrait être chargées manuellement à l'Portails dossier / X / CVStoreImages où X est le PortalID actuelle
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; IsQuote &lt;/td&gt;
&lt;td valign="top"&gt; FAUX &lt;/td&gt;
&lt;td valign="top"&gt; oui / non &lt;/td&gt;
&lt;td&gt; Marque l'élément comme étant disponible pour la demande d'une fonctionnalité Citation. La valeur par défaut est «non» &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; IsFreeShipping &lt;/td&gt;
&lt;td valign="top"&gt; FAUX &lt;/td&gt;
&lt;td valign="top"&gt; oui / non &lt;/td&gt;
&lt;td&gt; Marque l'élément comme étant shippinh libre. La valeur par défaut est «non» &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; IsFreeProduct &lt;/td&gt;
&lt;td valign="top"&gt; FAUX &lt;/td&gt;
&lt;td valign="top"&gt; oui / non &lt;/td&gt;
&lt;td&gt; Marque l'élément comme étant libre et ne pas supporter un coût. La valeur par défaut est «non» &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; ProductSku &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; string (50) &lt;/td&gt;
&lt;td&gt; Une valeur interne qui identifie le produit. &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; ProductBarcode &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; string (50) &lt;/td&gt;
&lt;td&gt; Une valeur interne qui est utilisé pour stocker le code à barres du produit. &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; PDSF &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; décimal &lt;/td&gt;
&lt;td&gt; Le prix de détail suggéré du fabricant. &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Variant1 ... Variant14 &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; cordes &lt;/td&gt;
&lt;td&gt; Permet l'importation de la variante pour le produit. Voir le panier Viper manuel pour les détails &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Options 1 ... Options14 &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; cordes &lt;/td&gt;
&lt;td&gt; Permet l'importation des options variante pour le produit. Voir le panier Viper manuel pour les détails &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Tab1Name ... Tab5Name &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; cordes &lt;/td&gt;
&lt;td&gt; Permet d'importer jusqu'à 5 onglets pour un produit. Ce champ contient le nom de l'onglet &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Tab1Content ... Tab5Content &lt;/td&gt;
&lt;td&gt; FAUX &lt;/td&gt;
&lt;td&gt; cordes &lt;/td&gt;
&lt;td&gt; Permet d'importer jusqu'à 5 onglets pour un produit. Ce champ contient le contenu de l'onglet &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; PDFdataSheet &lt;/td&gt;
&lt;td valign="top"&gt; FAUX &lt;/td&gt;
&lt;td valign="top"&gt; cordes &lt;/td&gt;
&lt;td&gt; Permet de joindre un document PDF en tant que la fiche produit. Le PDF doit déjà exister sur le serveur dans le répertoire d'accueil du portail. Pour le fichier attaché "samplePDF.pdf" dans la racine du répertoire d'accueil du portail de la valeur correcte pour le CSV serait "samplePDF.pdf". Si le fichier PDF a été dans un sous-dossier appelé "fiches", alors la valeur correcte serait «fiches / samplePDF.pdf". Notez que si vous avez copié les fichiers PDF sur le serveur via FTP, vous aurez besoin de «synchroniser des fichiers" avec le gestionnaire de fichiers DNN premier. &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign="top"&gt; NomFournisseur &lt;/td&gt;
&lt;td valign="top"&gt; FAUX &lt;/td&gt;
&lt;td valign="top"&gt; cordes &lt;/td&gt;
&lt;td&gt; Permet d'assigner un fournisseur de ce produit, notez le fournisseur doit exister dans le magasin pour que le produit lui être attribuées. &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;</value>
  </data>
  <data name="lblHeaderText.Text" xml:space="preserve">
    <value>Importation de produits</value>
  </data>
</root>