<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblDiscountAmount.Help" xml:space="preserve">
    <value>Het bedrag korting.</value>
  </data>
  <data name="lblDiscountAmount.Text" xml:space="preserve">
    <value>Kortingsbedrag</value>
  </data>
  <data name="lblDiscountAsMonetary.Help" xml:space="preserve">
    <value>Als de gekozen korting bedrag zal worden verdisconteerd als een monetaire korting, anders zal een percentage korting zal zijn.</value>
  </data>
  <data name="lblDiscountAsMonetary.Text" xml:space="preserve">
    <value>Korting Monetaire</value>
  </data>
  <data name="lblEndDate.Help" xml:space="preserve">
    <value>De einddatum wanneer alle vouchers inactief worden.</value>
  </data>
  <data name="lblEndDate.Text" xml:space="preserve">
    <value>Einddatum</value>
  </data>
  <data name="lblGroupName.Help" xml:space="preserve">
    <value>De naam van de groep van cadeaubonnen.</value>
  </data>
  <data name="lblGroupName.Text" xml:space="preserve">
    <value>Groepsnaam</value>
  </data>
  <data name="lblHeaderText.Text" xml:space="preserve">
    <value>Edit cadeaubon Group</value>
  </data>
  <data name="lblInfo.Text" xml:space="preserve">
    <value>Hieronder staan ​​de regels die zijn gedefinieerd voor deze cadeaubon groep. &lt;br /&gt;&lt;br /&gt; Meer cadeaubonnen kunnen auto-gemaakt voor deze groep op elk moment veranderen door het invoeren van het nummer te maken in de toegewezen tekstvak en te klikken op "opslaan" te zijn.</value>
  </data>
  <data name="lblIsActive.Help" xml:space="preserve">
    <value>Als de geselecteerde groep actief is en de cadeaubonnen in deze groep kan worden gebruikt, zo niet klanten zullen niet in staat zijn om ze te gebruiken.</value>
  </data>
  <data name="lblIsActive.Text" xml:space="preserve">
    <value>Is actief</value>
  </data>
  <data name="lblNotes.Help" xml:space="preserve">
    <value>Opmerkingen met betrekking tot deze cadeaubon groep.</value>
  </data>
  <data name="lblNotes.Text" xml:space="preserve">
    <value>Opmerkingen</value>
  </data>
  <data name="lblNumberToMake.Help" xml:space="preserve">
    <value>Het aantal cadeaubonnen te genereren en toe te wijzen aan deze groep.</value>
  </data>
  <data name="lblNumberToMake.Text" xml:space="preserve">
    <value>Nee: Vouchers To Make</value>
  </data>
  <data name="lblProductSku.Help" xml:space="preserve">
    <value>Het modelnummer van het product, als u een modelnummer hier deze cadeaubon zal enkel in staat om de gebruikte als de klant heeft de gespecificeerde product in hun winkelwagentje.</value>
  </data>
  <data name="lblProductSku.Text" xml:space="preserve">
    <value>Product modelnummer</value>
  </data>
  <data name="lblStartDate.Help" xml:space="preserve">
    <value>De start datum waarop alle bewijzen in deze groep actief zijn.</value>
  </data>
  <data name="lblStartDate.Text" xml:space="preserve">
    <value>Startdatum</value>
  </data>
  <data name="lblVoucherLength.Help" xml:space="preserve">
    <value>Het aantal willekeurige alfanumerieke karakters toe te voegen aan de voucher prefix die hierboven werd ingevoerd.</value>
  </data>
  <data name="lblVoucherLength.Text" xml:space="preserve">
    <value>Voucher Lengte</value>
  </data>
  <data name="lblVoucherPrefix.Help" xml:space="preserve">
    <value>Voorvoegsel dat zal worden toegevoegd aan het begin van elke cadeaubon aantal in deze groep.</value>
  </data>
  <data name="lblVoucherPrefix.Text" xml:space="preserve">
    <value>Voucher Prefix</value>
  </data>
  <data name="lnkCancel.Text" xml:space="preserve">
    <value>Annuleren</value>
  </data>
  <data name="lnkSave.Text" xml:space="preserve">
    <value>Besparen</value>
  </data>
  <data name="rf.Text" xml:space="preserve">
    <value>Nodig</value>
  </data>
</root>