<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AwaitingPayment.Text" xml:space="preserve">
    <value>Votre commande a été enregistrée avec succès et nous attendons le paiement. Vous pouvez vérifier le statut de votre commande à tout moment à partir de cette page. &lt;br /&gt; La section historique de commande contient des informations détaillées sur vos commandes.</value>
  </data>
  <data name="btnDisplayOrder.Text" xml:space="preserve">
    <value>Afficher ma commande</value>
  </data>
  <data name="btnNext.Text" xml:space="preserve">
    <value>Suivant</value>
  </data>
  <data name="btnPlaceOrder.Text" xml:space="preserve">
    <value>Passer une commande</value>
  </data>
  <data name="btnPrevious.Text" xml:space="preserve">
    <value>Précédente</value>
  </data>
  <data name="lblCreateAccount.Text" xml:space="preserve">
    <value>&lt;br &gt; Cliquez &lt;a href='{0}'&gt;ici&lt;/a&gt; pour créer un nouveau compte utilisateur.</value>
  </data>
  <data name="lblDigitalDownloads.Text" xml:space="preserve">
    <value>&lt;br /&gt; Cliquez &lt;a href="{0}"&gt;ici&lt;/a&gt; pour aller à &lt;b&gt;l&amp;#39;armoire de téléchargement numérique&lt;/b&gt; et télécharger vos fichiers. &lt;br /&gt;</value>
  </data>
  <data name="lblInvalidLicense.Text" xml:space="preserve">
    <value>Votre licence a expiré ou n'est pas valide et vos clients sont donc incapables de caisse. &lt;br /&gt; S'il vous plaît acheter une nouvelle licence au &lt;a href="http://www.cartviper.com" target="_blank"&gt;www.cartviper.com&lt;/a&gt;</value>
  </data>
  <data name="lblOfflinePayment.Help" xml:space="preserve">
    <value>Choisissez de passer votre commande, mais payer par l'intermédiaire d'un moyen hors ligne tels que chèques, espèces, etc Votre commande sera placée et aura un statut de «paiement en attente" jusqu'à ce que vous avez terminé de paiement.</value>
  </data>
  <data name="lblOfflinePayment.Text" xml:space="preserve">
    <value>Paiement hors ligne</value>
  </data>
  <data name="lblOnlinePayment.Help" xml:space="preserve">
    <value>Payez instantanément et de manière sécurisée via le paiement en ligne.</value>
  </data>
  <data name="lblOnlinePayment.Text" xml:space="preserve">
    <value>Le paiement en ligne</value>
  </data>
  <data name="lblOrderNumber.Text" xml:space="preserve">
    <value>Merci pour vos achats chez nous. &lt;br /&gt; Votre numéro de commande est: {0}</value>
  </data>
  <data name="OrderPlaced.Text" xml:space="preserve">
    <value>Votre numéro de commande est la suivante:</value>
  </data>
  <data name="PaymentCancelled.Text" xml:space="preserve">
    <value>Vous avez annulé le paiement, votre commande n'a pas été placé et que vous n'avez pas été accusé.</value>
  </data>
  <data name="PaymentFailed.Text" xml:space="preserve">
    <value>Votre paiement a échoué, votre commande n'a pas été placée et vous n'avez pas été inculpé.</value>
  </data>
  <data name="PaymentRequiresConfirmation.Text" xml:space="preserve">
    <value>Votre commande a été enregistrée avec succès mais nous sommes en attente de confirmation de paiement de votre banque. Vous recevrez un e-mail lorsque nous aurons reçu cette confirmation. &lt;br /&gt; Si vous avez enregistré un compte avec nous, vous pouvez vérifier le statut de votre commande à tout moment à partir de cette page. &lt;br /&gt; La section historique de commande contient des informations détaillées sur vos commandes.</value>
  </data>
  <data name="PaymentSucceeded.Text" xml:space="preserve">
    <value>Votre commande a été traitée avec succès. &lt;br /&gt; Si vous avez enregistré un compte avec nous, vous pouvez vérifier le statut de votre commande à tout moment de la page historique de commandes. &lt;br /&gt; La section historique de commande contient des informations détaillées sur toutes vos commandes.</value>
  </data>
  <data name="RequiresConfirmationMessage.Text" xml:space="preserve">
    <value>Merci pour vos achats chez nous. &lt;br /&gt; Votre numéro de commande est: {0} &lt;br/&gt;</value>
  </data>
  <data name="btnRetry.Text" xml:space="preserve">
    <value>Réessayer</value>
  </data>
  <data name="lblRegistrationCode.Text" xml:space="preserve">
    <value>&lt;br /&lt;br /&gt; Votre code d&amp;#39;enregistrement est: &lt;b&gt;{0}.&lt;/b&gt; &lt;br /&gt;</value>
  </data>
  <data name="lblPaymentTerms.Text" xml:space="preserve">
    <value>&lt;br /&gt;&lt;br /&gt; Le paiement doit être effectué dans les &lt;b&gt;{0}&lt;/b&gt; jours. &lt;br /&gt;</value>
  </data>
  <data name="AwaitingModeration.Text" xml:space="preserve">
    <value>Votre commande a été correctement enregistrée et sera animée par l'administrateur du magasin, une fois cela a été terminé, nous vous le ferons savoir. Vous pouvez vérifier le statut de votre commande à tout moment à partir de cette page. &lt;br /&gt; La section historique de commande contient des informations détaillées sur vos commandes.</value>
  </data>
  <data name="lblPostPaidPaymentTerms.Text" xml:space="preserve">
    <value>&lt;br /&gt;&lt;br /&gt; Le paiement doit être effectué dans les &lt;b&gt;{0}&lt;/b&gt; jours. &lt;br /&gt;</value>
  </data>
  <data name="PostPaid.Text" xml:space="preserve">
    <value>Votre commande a été enregistrée avec succès et va maintenant être expédiés. &lt;br /&gt; La section historique de commande contient des informations détaillées sur vos commandes.</value>
  </data>
</root>