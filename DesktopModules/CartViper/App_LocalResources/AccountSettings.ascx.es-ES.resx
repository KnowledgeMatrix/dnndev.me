<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblRequireSSL.Text" xml:space="preserve">
    <value>Fuerza de SSL en la Caja</value>
  </data>
  <data name="lblRequireSSL.Help" xml:space="preserve">
    <value>Fuerza SSL que se utilizará durante la verificación.</value>
  </data>
  <data name="lblSSLNote.Text" xml:space="preserve">
    <value>NOTA</value>
  </data>
  <data name="SSLMessage.Text" xml:space="preserve">
    <value>Este ajuste fuerzas HTTPS durante chekout. HTTPS debe ser configurado correctamente en el servidor, de lo contrario la página de pago no se carga.</value>
  </data>
  <data name="lblSSLNote.Help" xml:space="preserve">
    <value>Mensaje importante sobre el uso de configuración de SSL.</value>
  </data>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>Configuración de la cuenta</value>
  </data>
  <data name="dshMainCartSettings.Text" xml:space="preserve">
    <value>Configuración principal Cesta</value>
  </data>
  <data name="lblIncludeVAT.Help" xml:space="preserve">
    <value>De verificación para mostrar el precio del producto, incluyendo el IVA.</value>
  </data>
  <data name="lblIncludeVAT.Text" xml:space="preserve">
    <value>Incluyen el IVA</value>
  </data>
  <data name="lblProductColumn.Help" xml:space="preserve">
    <value>Seleccione el atributo del producto que desea mostrar en la columna de producto.</value>
  </data>
  <data name="lblProductColumn.Text" xml:space="preserve">
    <value>Producto de la columna</value>
  </data>
  <data name="lblShowThumbnail.Help" xml:space="preserve">
    <value>De verificación para mostrar imagen del producto en el carrito del usuario.</value>
  </data>
  <data name="lblShowThumbnail.Text" xml:space="preserve">
    <value>Mostrar miniatura</value>
  </data>
  <data name="lblThumbnailWidth.Help" xml:space="preserve">
    <value>Introduzca el ancho de miniatura en píxeles. El valor por defecto: 100.</value>
  </data>
  <data name="lblThumbnailWidth.Text" xml:space="preserve">
    <value>Miniatura Ancho</value>
  </data>
  <data name="ModelName.Text" xml:space="preserve">
    <value>Nombre del modelo</value>
  </data>
  <data name="ModelNumber.Text" xml:space="preserve">
    <value>Número de modelo</value>
  </data>
  <data name="ProductTitle.Text" xml:space="preserve">
    <value>Título del producto</value>
  </data>
  <data name="lblGIFBgColor.Help" xml:space="preserve">
    <value>Introduzca el valor hexadecimal del color de fondo para su uso con formato de imagen GIF. Los valores válidos: # FFFFFF, # f00, FF0000, F09, ...</value>
  </data>
  <data name="lblGIFBgColor.Text" xml:space="preserve">
    <value>GIF de fondo:</value>
  </data>
  <data name="lblDefaultView.Help" xml:space="preserve">
    <value>Seleccionar la vista predeterminada para mostrar.</value>
  </data>
  <data name="lblDefaultView.Text" xml:space="preserve">
    <value>Ver por defecto</value>
  </data>
  <data name="CustomerCart.Text" xml:space="preserve">
    <value>Al cliente Cesta</value>
  </data>
  <data name="CustomerOrders.Text" xml:space="preserve">
    <value>Los pedidos de los clientes</value>
  </data>
  <data name="CustomerDigitalDownloads.Text" xml:space="preserve">
    <value>Descargas digitales de los clientes</value>
  </data>
  <data name="lblEnableWishlist.Help" xml:space="preserve">
    <value>Si es verdad permite a los usuarios almacenar los productos en su lista</value>
  </data>
  <data name="lblEnableWishlist.Text" xml:space="preserve">
    <value>Lista habilitado</value>
  </data>
  <data name="lblAllowAnonCheckout.Help" xml:space="preserve">
    <value>Si el usuario selecciona se le permitirá a la caja como invitados &lt;br /&gt; es decir, no será necesario crear una cuenta de usuario en el sitio antes de que se les permita a la caja. Sin embargo, si tienen un producto en su carro que es una descarga digital, no será capaz de compra como invitado.</value>
  </data>
  <data name="lblAllowAnonCheckout.Text" xml:space="preserve">
    <value>Permitir Invitado Pedido</value>
  </data>
  <data name="lblAcceptDonations.Help" xml:space="preserve">
    <value>Si se selecciona en el punto de compra, el usuario tiene la opción de hacer una donación y agregue esto a la subtotal de su compra.</value>
  </data>
  <data name="lblAcceptDonations.Text" xml:space="preserve">
    <value>Aceptar donaciones</value>
  </data>
  <data name="lblAddEditDonationAmount.Text" xml:space="preserve">
    <value>Agregar / Editar cantidades de donaciones</value>
  </data>
  <data name="lblDonationAmount.Help" xml:space="preserve">
    <value>Introduzca una cantidad predefinida, el usuario puede seleccionar a donar, tenga en cuenta que el usuario tendrá un cuadro de texto libre también de entrar en su propia cantidad.</value>
  </data>
  <data name="lblDonationAmount.Text" xml:space="preserve">
    <value>Cantidad de Donación</value>
  </data>
  <data name="lblDonations.Text" xml:space="preserve">
    <value>Configuración de la donación</value>
  </data>
  <data name="lblExistingDonationAmount.Text" xml:space="preserve">
    <value>Las cantidades existentes de donación</value>
  </data>
  <data name="lnkCancel.Text" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="lnkDelete.Text" xml:space="preserve">
    <value>Borrar</value>
  </data>
  <data name="lnkSave.Text" xml:space="preserve">
    <value>Ahorrar</value>
  </data>
  <data name="rfDonations.Text" xml:space="preserve">
    <value>Necesario</value>
  </data>
  <data name="lblDonationsTemplate.Help" xml:space="preserve">
    <value>La plantilla que se debe utilizar cuando la salida del control de donación.</value>
  </data>
  <data name="lblDonationsTemplate.Text" xml:space="preserve">
    <value>Las donaciones de plantilla</value>
  </data>
  <data name="lblCartSettings.Text" xml:space="preserve">
    <value>Cesta Configuración</value>
  </data>
  <data name="lblHideDownloadLink.Help" xml:space="preserve">
    <value>Cuando se activa el enlace Descarga Digital Locker está oculto a la barra Mis Cuenta submenú.</value>
  </data>
  <data name="lblHideDownloadLink.Text" xml:space="preserve">
    <value>Ocultar Download Link casillero</value>
  </data>
  <data name="lblDonationThankyouMessage.Help" xml:space="preserve">
    <value>Si se selecciona, una vez que el usuario ha hecho una donación que se mostrará un mensaje de agradecimiento. El mensaje se define en sharedresources.ascx.resx y se pueden personalizar según sus necesidades.</value>
  </data>
  <data name="lblDonationThankyouMessage.Text" xml:space="preserve">
    <value>Mostrar mensaje de agradecimiento</value>
  </data>
  <data name="lblDisplayContinueShoppingButton.Help" xml:space="preserve">
    <value>Si se selecciona un botón se mostrará en la página del carrito, que al hacer clic se redircect el usuario a la página de catálogo de la tienda.</value>
  </data>
  <data name="lblDisplayContinueShoppingButton.Text" xml:space="preserve">
    <value>Mostrar el botón Continuar Compras</value>
  </data>
  <data name="lblDisplayPricesInVat.Help" xml:space="preserve">
    <value>Si se marca los precios se muestran con IVA incluido en el carro y el carro pequeño</value>
  </data>
  <data name="lblDisplayPricesInVat.Text" xml:space="preserve">
    <value>Mostrar precios con IVA / GST</value>
  </data>
  <data name="lblDisplayCheckoutLink.Help" xml:space="preserve">
    <value>Cuando se activa el enlace de compra se muestra en el mensaje de agradecimiento</value>
  </data>
  <data name="lblDisplayCheckoutLink.Text" xml:space="preserve">
    <value>Mostrar Pedido Enlace</value>
  </data>
  <data name="lblDonationThankyouMessageData.Help" xml:space="preserve">
    <value>El mensaje que se mostrará cuando la donación se suma a la canasta. Esto puede incluir HTML</value>
  </data>
  <data name="lblDonationThankyouMessageData.Text" xml:space="preserve">
    <value>Donación mensaje</value>
  </data>
  <data name="lblDisplayCompanyName.Help" xml:space="preserve">
    <value>Si se selecciona en el punto de compra un cuadro de texto se mostrará para que el usuario introduzca su nombre de la empresa, también es posible especificar si se trata de un campo requiere que el usuario debe introducir.</value>
  </data>
  <data name="lblDisplayCompanyName.Text" xml:space="preserve">
    <value>Solicitud Nombre de la empresa</value>
  </data>
  <data name="lblDisplayVatNumber.Help" xml:space="preserve">
    <value>Si se selecciona en el punto de casilla un cuadro de texto se mostrará para que el usuario introduzca su número de IVA.</value>
  </data>
  <data name="lblDisplayVatNumber.Text" xml:space="preserve">
    <value>Requiere número de IVA</value>
  </data>
  <data name="lblEnableExpressCheckout.Help" xml:space="preserve">
    <value>Cuando se marca un paso 2 proceso de pago se utiliza cuando se compra sólo contiene elementos de descarga digitales.</value>
  </data>
  <data name="lblEnableExpressCheckout.Text" xml:space="preserve">
    <value>Activar exprés</value>
  </data>
  <data name="lblDisplayOrderNotesTextbox.Help" xml:space="preserve">
    <value>Si se selecciona un cuadro de texto estará visible en la página del carrito de detalles, donde el cliente podrá introducir notas para acompañar a la orden.</value>
  </data>
  <data name="lblDisplayOrderNotesTextbox.Text" xml:space="preserve">
    <value>Orden de visualización de texto Notas</value>
  </data>
  <data name="chkCompanyNameRequired.Text" xml:space="preserve">
    <value>El usuario debe introducir el nombre de la empresa</value>
  </data>
  <data name="lblSinglePageCheckout.Help" xml:space="preserve">
    <value>Si se selecciona el proceso de compra se completará en una sola página en lugar de la opción de la página 3 o 4 que ofrecemos.</value>
  </data>
  <data name="lblSinglePageCheckout.Text" xml:space="preserve">
    <value>Sola página de pago</value>
  </data>
  <data name="lblCheckoutOption.Help" xml:space="preserve">
    <value>La opción de compra que debe utilizar.</value>
  </data>
  <data name="lblCheckoutOption.Text" xml:space="preserve">
    <value>Opción compra</value>
  </data>
  <data name="lblOrders.Text" xml:space="preserve">
    <value>Configuración de administración de pedidos</value>
  </data>
  <data name="lblShowOrderThumbnail.Help" xml:space="preserve">
    <value>Si se selecciona en el orden de la sección de la imagen del producto se muestra junto con el título del producto.</value>
  </data>
  <data name="lblShowOrderThumbnail.Text" xml:space="preserve">
    <value>Orden Mostrar Artículo Miniatura</value>
  </data>
  <data name="lblDigitalDownloads.Text" xml:space="preserve">
    <value>Descarga digital Armario</value>
  </data>
  <data name="lblShowDDThumbnail.Help" xml:space="preserve">
    <value>Mostrar la imagen del producto en el armario de descarga digital.</value>
  </data>
  <data name="lblShowDDThumbnail.Text" xml:space="preserve">
    <value>Mostrar miniatura del producto</value>
  </data>
  <data name="lblHideOrderManagementSection.Help" xml:space="preserve">
    <value>Si se selecciona que se oculta una orden de sección de gestión de clientes de mi cuenta el módulo.</value>
  </data>
  <data name="lblHideOrderManagementSection.Text" xml:space="preserve">
    <value>Ocultar la sección de administración de pedidos</value>
  </data>
  <data name="lblHideSubtotalMiniCart.Help" xml:space="preserve">
    <value>Si se selecciona, no se mostrará el subtotal de la mini-carro, es posible que desee este si sólo vende artículos solicitud de cotización.</value>
  </data>
  <data name="lblHideSubtotalMiniCart.Text" xml:space="preserve">
    <value>Ocultar Cesta Mini Subtotal</value>
  </data>
  <data name="lblMiniCartTemplate.Help" xml:space="preserve">
    <value>La plantilla que vamos a utilizar para mostrar el carro pequeño.</value>
  </data>
  <data name="lblMiniCartTemplate.Text" xml:space="preserve">
    <value>Mini Plantilla de compra</value>
  </data>
  <data name="lblCheckForUserPrefix.Help" xml:space="preserve">
    <value>Cuando se activa buscamos un atributo de perfil llamado "cvStoreOrderPrefix" antepuesto a la orden con. Todos los pedidos de los usuarios con perfil de este atributo tendrá el valor frente al número de orden.</value>
  </data>
  <data name="lblCheckForUserPrefix.Text" xml:space="preserve">
    <value>Compruebe que Prefijo Orden del usuario</value>
  </data>
</root>