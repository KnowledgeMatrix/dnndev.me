<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSave.Text" xml:space="preserve">
    <value>Sparen</value>
  </data>
  <data name="EmptyComboValue.Text" xml:space="preserve">
    <value>--- Auswahl ---</value>
  </data>
  <data name="GatewayNotSelected.Text" xml:space="preserve">
    <value>Bitte wählen Sie ein Gateway-Provider.</value>
  </data>
  <data name="lblGateway.Help" xml:space="preserve">
    <value>Payment Gateway Anbieter</value>
  </data>
  <data name="lblGateway.Text" xml:space="preserve">
    <value>Payment Gateway</value>
  </data>
  <data name="lblAllowOfflinePayment.Help" xml:space="preserve">
    <value>Wenn zusammen mit unter Online-Zahlung gewählt haben, werden die Nutzer in der Lage, ihre Aufträge zu erteilen und dann zahlen über eine Offline-Methode. Die Reihenfolge platziert werden und der Status auf "noch nicht bezahlt", sobald der Benutzer per Scheck, Telefon, usw. Sie die Bestellung den Status "bezahlt" Update kann bezahlt hat.</value>
  </data>
  <data name="lblAllowOfflinePayment.Text" xml:space="preserve">
    <value>Accept offline Zahlung</value>
  </data>
  <data name="lblOffline.Text" xml:space="preserve">
    <value>Offline-Zahlungsmöglichkeiten.</value>
  </data>
  <data name="lblOnline.Text" xml:space="preserve">
    <value>Online Zahlungsmöglichkeiten</value>
  </data>
  <data name="lblAllowGoogleCheckout.Help" xml:space="preserve">
    <value>Prüfen Sie, Google Checkout zusätzlich zu allen anderen Zahlungsarten ermöglichen.</value>
  </data>
  <data name="lblAllowGoogleCheckout.Text" xml:space="preserve">
    <value>Aktivieren Sie Google Checkout</value>
  </data>
  <data name="lblGoogleCheckout.Text" xml:space="preserve">
    <value>GoogleCheckout Optionen</value>
  </data>
  <data name="lblGoogleCheckoutNotSupported.Text" xml:space="preserve">
    <value>GoogleCheckout ist nicht für Ihre Währung zur Verfügung.</value>
  </data>
  <data name="lblHeaderText.Text" xml:space="preserve">
    <value>Payment Gateway-Einstellungen</value>
  </data>
  <data name="lblCheckoutStyle.Text" xml:space="preserve">
    <value>Wählen Kasse Stil</value>
  </data>
  <data name="lblChekoutStyle.Help" xml:space="preserve">
    <value>Die Kasse Stil präsentieren wir dem Kunden entweder eine 3 oder 4 Schritt style-Schnittstelle. Basierend auf den Payment-Gateway gewählt einige der Kasse werden nicht unterstützt.</value>
  </data>
  <data name="lblChekoutStyle.Text" xml:space="preserve">
    <value>Kasse Stil</value>
  </data>
  <data name="lblCheckoutSelectionNotValid.Text" xml:space="preserve">
    <value>Diese Kasse Option nicht durch dieses Gateway unterstützt, bitte wähle einen anderen.</value>
  </data>
  <data name="lblEnablePaypalStd.Help" xml:space="preserve">
    <value>Wenn diese Option aktiviert kann der Kunde wählen PayPal mit ihrem Konto bezahlen.</value>
  </data>
  <data name="lblEnablePaypalStd.Text" xml:space="preserve">
    <value>Accept PayPal-Zahlung</value>
  </data>
  <data name="lblPayPalNotSupported.Text" xml:space="preserve">
    <value>Paypal ist nicht für Ihre Währung zur Verfügung.</value>
  </data>
  <data name="lblPayPalStd.Text" xml:space="preserve">
    <value>PayPal-Optionen</value>
  </data>
  <data name="lblDays.Text" xml:space="preserve">
    <value>Tage</value>
  </data>
  <data name="lblOnlyAllowRegisteredUsers.Help" xml:space="preserve">
    <value>Wenn diese Option aktiviert nur registrierte Benutzer können via offline bedeutet bezahlen.</value>
  </data>
  <data name="lblOnlyAllowRegisteredUsers.Text" xml:space="preserve">
    <value>Nur registrierte User</value>
  </data>
  <data name="lblPaymentTerms.Help" xml:space="preserve">
    <value>Die Anzahl der Tage, die ein Kunde haben, um ihr Gleichgewicht bezahlen.</value>
  </data>
  <data name="lblPaymentTerms.Text" xml:space="preserve">
    <value>Zahlungsbedingungen</value>
  </data>
  <data name="lblOfflinePaymentInfo.Text" xml:space="preserve">
    <value>Diese Felder sind optional und können Sie steuern, ob nur registrierte Benutzer dürfen mit dem Offline-Anbieter Kasse und zeigen auch die Anzahl der Tage hat der Kunde für die Bestellung zu bezahlen. &lt;br /&gt;&lt;br /&gt; Sie können auch angeben, wenn Bestellungen offline müssen moderiert werden, wenn diese Option aktiviert, sobald ein Auftrag erteilt wird, wird dann durch den Laden admin moderiert werden, bevor eine Auftragsbestätigung an den Kunden gesendet wird. Während Mäßigung sie in der Lage, Elemente hinzufügen / entfernen, um die Reihenfolge. &lt;br/&gt;&lt;br/&gt; Siehe Warenkorb Viper Handbuch für weitere Informationen.</value>
  </data>
  <data name="lblModerateOffline.Help" xml:space="preserve">
    <value>Wenn diese Option aktiviert offline Bestellungen müssen moderiert werden, werden bei Auswahl dieser können Sie Elemente in der Reihenfolge bearbeitet, bevor sie gestellt werden.</value>
  </data>
  <data name="lblModerateOffline.Text" xml:space="preserve">
    <value>Moderate Offline-Bestellungen</value>
  </data>
  <data name="lblPostPaidPaymentTerms.Help" xml:space="preserve">
    <value>Die Anzahl der Tage ein Kunde, um ihr Gleichgewicht zu zahlen, wenn sie "post zahlen"</value>
  </data>
  <data name="lblPostPaidPaymentTerms.Text" xml:space="preserve">
    <value>Postpaid Zahlungsbedingungen</value>
  </data>
</root>