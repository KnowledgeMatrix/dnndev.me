<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblProduct.Text" xml:space="preserve">
    <value>Producto</value>
  </data>
  <data name="lblPriceHeader.Text" xml:space="preserve">
    <value>Precio</value>
  </data>
  <data name="lblTotals.Text" xml:space="preserve">
    <value>Cesta subtotal:</value>
  </data>
  <data name="lblQty.Text" xml:space="preserve">
    <value>Cantidad</value>
  </data>
  <data name="lblSubtotal.Text" xml:space="preserve">
    <value>Total de la partida</value>
  </data>
  <data name="lblBasketEmpty.Text" xml:space="preserve">
    <value>Su cesta está vacía.</value>
  </data>
  <data name="lblControlHeader.Text" xml:space="preserve">
    <value>Cantidad de control</value>
  </data>
  <data name="ErrorSettings.Text" xml:space="preserve">
    <value>&lt;b&gt;Usted no puede utilizar este módulo porque la tienda no existe todavía! &lt;br /&gt; En primer lugar definir la configuración de la tienda en el interior del módulo de administración de la tienda.&lt;/b&gt;</value>
  </data>
  <data name="hypDeleteAll.ToolTip" xml:space="preserve">
    <value>Quitar todos los elementos de la cesta</value>
  </data>
  <data name="lblCouponCode.Text" xml:space="preserve">
    <value>Código promocional:</value>
  </data>
  <data name="lblInvalidCoupon.Text" xml:space="preserve">
    <value>Código de descuento no es válido.</value>
  </data>
  <data name="hyperDeleteAllItemsFromCart.ToolTip" xml:space="preserve">
    <value>Quitar todos los elementos de la cesta</value>
  </data>
  <data name="hyperSingleAllItemsFromCart.ToolTip" xml:space="preserve">
    <value>Eliminar elemento de compra</value>
  </data>
  <data name="hypUpdateCartRow.ToolTip" xml:space="preserve">
    <value>Actualización de la cesta</value>
  </data>
  <data name="lblCouponEmailAddress.Text" xml:space="preserve">
    <value>Dirección de correo electrónico:</value>
  </data>
  <data name="reEmailAddress" xml:space="preserve">
    <value>Dirección de correo electrónico no válida.</value>
  </data>
  <data name="lblShipping.Text" xml:space="preserve">
    <value>Envío Est:</value>
  </data>
  <data name="shippingEstCaption.Text" xml:space="preserve">
    <value>El transporte marítimo es una estimación hasta que sepamos su dirección de envío correcta, por favor, continúe con el pago y envío para determinar el coste real</value>
  </data>
  <data name="lblApplyCoupon.Text" xml:space="preserve">
    <value>Aplicar Cupón</value>
  </data>
  <data name="lblRemoveCoupon.Text" xml:space="preserve">
    <value>Retire promocional</value>
  </data>
  <data name="lblDiscountAmount.Text" xml:space="preserve">
    <value>Descuento:</value>
  </data>
  <data name="freeShippingCoupon.Text" xml:space="preserve">
    <value>El envío gratuito</value>
  </data>
  <data name="lblNotesToStore.Text" xml:space="preserve">
    <value>Orden Notas:</value>
  </data>
  <data name="lblOrderNotesHelp.Text" xml:space="preserve">
    <value>Este cuadro de texto le permite introducir notas relativas a esta orden, las notas se guardan junto con esta orden para el almacén de administración para ver. observa por ejemplo en materia de envío y pago, etc</value>
  </data>
  <data name="lblCouponEmailAddressHelp.Text" xml:space="preserve">
    <value>Este cupón se ha asignado a una dirección de correo electrónico, introduzca la dirección de correo electrónico para validar el cupón le pertenece a usted.</value>
  </data>
  <data name="lblCouponHelp.Text" xml:space="preserve">
    <value>Ingrese el código de cupón que se ha dado a usted a fin de recibir un descuento en los artículos en su carrito.</value>
  </data>
  <data name="hypUpdateEntireCart.Text" xml:space="preserve">
    <value>Actualizar todo cantidades en el carrito</value>
  </data>
</root>