<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblShipping.Help" xml:space="preserve">
    <value>Select the shipping provider which should be used to calculate the shipping charge for the cart.</value>
  </data>
  <data name="lblShipping.Text" xml:space="preserve">
    <value>Shipping Provider</value>
  </data>
  <data name="ShippingNotSelected.Text" xml:space="preserve">
    <value>Unable to find the selected shipping provider</value>
  </data>
  <data name="lblShippingAppliesTax.Help" xml:space="preserve">
    <value>When checked the shipping cost of an order also attracts Tax/VAT. When unchecked the shipping cost does attract any taxation. Note the handling fee is a separate item and this setting doesn't control if this is tax or not. See the checkbox below to define the handling fee tax flag.</value>
  </data>
  <data name="lblShippingAppliesTax.Text" xml:space="preserve">
    <value>Apply Tax/Vat to Shipping Costs</value>
  </data>
  <data name="lblAllowInStorePickup.Help" xml:space="preserve">
    <value>Is selected during the shipping selection process the customer will have the option to "pick up from store", this shipping option will not encur any costs to the customer.</value>
  </data>
  <data name="lblAllowInStorePickup.Text" xml:space="preserve">
    <value>Allow In Store Pickup</value>
  </data>
  <data name="lblCartMiniSubTotal.Text" xml:space="preserve">
    <value>Min. Cart Sub Total</value>
  </data>
  <data name="lblCountryTitle.Text" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="lblFreeShipping.Help" xml:space="preserve">
    <value>This allows you to define countries which qualify for free shipping, no shipping charge will apply to the orders for these countries.</value>
  </data>
  <data name="lblFreeShipping.Text" xml:space="preserve">
    <value>Free Shipping</value>
  </data>
  <data name="lblFreeShippingBySubTotal.Help" xml:space="preserve">
    <value>This allows you to define if the cart will qualify for free shipping based on the cart sub total and the shipping country. The cart will need to be equal or greater in value than the minimun cart sub total.</value>
  </data>
  <data name="lblFreeShippingBySubTotal.Text" xml:space="preserve">
    <value>Free Shipping by Cart Sub Total</value>
  </data>
  <data name="FreeShippingCountryDuplicate.Text" xml:space="preserve">
    <value>This country already exists in the free shipping table</value>
  </data>
  <data name="FreeShippingMinimumValueZero.Text" xml:space="preserve">
    <value>The Mini. Cart Sub Total should be greater than zero</value>
  </data>
  <data name="lblHeaderText.Text" xml:space="preserve">
    <value>Shipping Settings</value>
  </data>
  <data name="lblRestrictionHelp.Text" xml:space="preserve">
    <value>For Example: NY;LA;NJ;IL;IN;KY</value>
  </data>
  <data name="lblUsRestrictedStates.Help" xml:space="preserve">
    <value>By entering a ; seperated list of US state codes, you can limit which states can be shipped to.</value>
  </data>
  <data name="lblUsRestrictedStates.Text" xml:space="preserve">
    <value>Restricted US Shipping States</value>
  </data>
  <data name="lblShippingProviderActive.Help" xml:space="preserve">
    <value>Shipping provider is active, if this is not selected the provider will not be active and will not be used.</value>
  </data>
  <data name="lblShippingProviderActive.Text" xml:space="preserve">
    <value>Shipping Provider Is Active</value>
  </data>
  <data name="lblRestrictedZiPCodes.Help" xml:space="preserve">
    <value>By entering  a; separated list of zipcodes you can limit which zipcodes will be allowed to be shipped to. If a users zipcode matches any in the defined list we will NOT allow shipping to it.</value>
  </data>
  <data name="lblRestrictedZiPCodes.Text" xml:space="preserve">
    <value>Restriced Shipping Zipcodes</value>
  </data>
  <data name="lblRestrictionZipcodeHelp.Text" xml:space="preserve">
    <value>For Example CA1;CA2;CA3</value>
  </data>
  <data name="hypShippingDatesRestriction.Text" xml:space="preserve">
    <value>Specify Restricted Shipping Dates</value>
  </data>
  <data name="lblAllowUserSpecifyDeliveryDate.Help" xml:space="preserve">
    <value>If selected the user will be able to select a delivery date time when they select their shipping option.</value>
  </data>
  <data name="lblAllowUserSpecifyDeliveryDate.Text" xml:space="preserve">
    <value>Allow Customer To Select Delivery Datetime</value>
  </data>
  <data name="lblRestrictionDateHelp.Text" xml:space="preserve">
    <value>If you are allowing the customer to specify the date / time they would like their delivery, here you can specify dates they cannot pick from e.g public holidays etc.</value>
  </data>
  <data name="lblUnSupported.Text" xml:space="preserve">
    <value>This shipping provider can only be used if the product units are LB or KG and IN or CM.</value>
  </data>
  <data name="lblEnabledStoreLocationLimit.Help" xml:space="preserve">
    <value>Allows you to define a list of locations that the customer can select when they elect to pick up their items from the store at the checkout stage.</value>
  </data>
  <data name="lblEnabledStoreLocationLimit.Text" xml:space="preserve">
    <value>Enable Instore Pickup Locations</value>
  </data>
  <data name="lblShippingSurcharge.Help" xml:space="preserve">
    <value>Add a fixed shipping surchage to the order, not applicable for "in store pickup</value>
  </data>
  <data name="lblShippingSurcharge.Text" xml:space="preserve">
    <value>Shipping Surcharge</value>
  </data>
  <data name="lblHandlingFeeAppliesTax.Help" xml:space="preserve">
    <value>When checked the handling fee of an order also attracts Tax/VAT. When unchecked the handling fee does attract any taxation.</value>
  </data>
  <data name="lblHandlingFeeAppliesTax.Text" xml:space="preserve">
    <value>Apply Tax/Vat to Handling Fee</value>
  </data>
</root>