(function (a) { a.fn.mcDropdown = function (b, c) { var d; this.each(function () { d = a.data(this, "mcDropdown"); if (d) return false; new a.mcDropDownMenu(this, b, c) }); return d || this }; a.mcDropdown = { version: "1.3.1", setDefaults: function (c) { a.extend(b, c) } }; var b = { minRows: 8, maxRows: 25, targetColumnSize: 2, openFx: "slideDown", openSpeed: 250, closeFx: "slideUp", closeSpeed: 250, hoverOverDelay: 200, hoverOutDelay: 0, showFx: "show", showSpeed: 0, hideFx: "hide", hideSpeed: 0, dropShadow: true, autoHeight: true, lineHeight: 19, screenPadding: 10, allowParentSelect: false, delim: ":", showACOnEmptyFocus: false, valueAttr: "rel", click: null, select: null, init: null }; var c = a.browser.version && a.browser.version <= 6; a.mcDropDownMenu = function (d, e, f) { function w(b) { var c; var d = b.contents().filter(function () { return this.nodeType == 1 || this.nodeType == 3 && a.trim(this.nodeValue).length > 0 }); if (d[0] && d[0].nodeType == 3) { c = d[0].nodeValue } else if (d[0] && d[0].nodeType == 1) { c = a(d[0]).text() } else { c = "" } return a.trim(c) } function x(b) { if (b.length == 0) return []; var c = [w(b)]; b.parents().each(function () { var b = a(this); if (this === i[0]) return false; else if (b.is("li")) c.push(w(b)) }); return c.reverse() } function y(a) { return x(Q(a)) } function z(a) { return y(a).join(k.delim) } function A(b) { var c = [], d = arguments.length > 1 ? ++arguments[1] : 1; a("> li", b).each(function () { var b = a(this); var e = a("> ul", this); c.push({ name: w(b), element: this, children: e.length ? A(e, d) : [] }) }); return c } function B(b) { C(b); a("> li", b).bind("mouseover", E).bind("mouseout", F) } function C(b) { a("> li", b).unbind("mouseover", E).unbind("mouseout", F) } function D(b) { var c = J(b, true); var d = L(); if (c.bottom > d.y) { a("html,body").animate({ scrollTop: "+=" + (c.bottom - d.y + k.screenPadding) + "px" }) } } function E(b) { var c = this; var d = a.data(c, "timer"); if (!isNaN(d)) clearTimeout(d); a(this).addClass("mc_hover"); a.data(c, "timer", setTimeout(function () { H.apply(c) }, k.hoverOverDelay)) } function F(b) { var d = this; var e = a.data(d, "timer"); if (!isNaN(e)) clearTimeout(e); a(this).removeClass("mc_hover"); a.data(d, "timer", setTimeout(function () { var b = a(d); setTimeout(function () { if (b.parent().find("> li.mc_hover").length == 0) { b.parents("li").each(function () { var b = this; clearTimeout(a.data(b, "timer")); I.apply(b); if (a(this).siblings().filter(".mc_hover").length > 0) return false }) } }, k.hoverOverDelay); I.apply(d) }, k.hoverOutDelay)); if (c) b.stopPropagation() } function G(b) { var c = g.data("shadows"); if (!c) c = {}; if (!c[b]) { c[b] = a('<div class="mcdropdown_shadow"></div>').appendTo("body"); if (!!a.fn.bgIframe) c[b].bgIframe(); g.data("shadows", c) } return c[b] } function H() { var b = this; var c = a("> ul", this); if (c.is(":visible") || c.length == 0) return false; a(this).parent().find("> li ul:visible").not(c).parent().each(function () { I.apply(this) }); P(c); B(c); var d = c.parents("ul").length; var e = L(); var f = J(a(this)); c.css({ top: f.bottom, left: f.marginLeft }).show(); var g = c.outerHeight() + c.offset().top; if (g > e.y) { c.css("top", f.bottom - (g - e.y) - k.screenPadding) } var h = function () { if (k.dropShadow) { var e = G(d); var f = J(c); e.css({ top: f.top + f.marginTop, left: f.left + f.marginLeft, width: f.width, height: f.height }).insertAfter(c).show(); a.data(b, "shadow", e) } }; if (k.showSpeed <= 0) { h() } else { c.hide()[k.showFx](k.showSpeed, h) } } function I() { var b = a("> ul", this); if (b.is(":hidden") || b.length == 0) return false; if (k.dropShadow && a.data(this, "shadow")) a.data(this, "shadow").hide(); if (c) b.css("visibility", "hidden").parent().removeClass("mc_hover"); b.stop()[k.hideFx](k.hideSpeed) } function J(b, c) { var d = false; if (b.is(":hidden")) { d = !!b.css("visibility", "hidden").show() } var e = a.extend(b[c === true ? "offset" : "position"](), { width: b.outerWidth(), height: b.outerHeight(), marginLeft: parseInt(a.curCSS(b[0], "marginLeft", true), 10) || 0, marginRight: parseInt(a.curCSS(b[0], "marginRight", true), 10) || 0, marginTop: parseInt(a.curCSS(b[0], "marginTop", true), 10) || 0, marginBottom: parseInt(a.curCSS(b[0], "marginBottom", true), 10) || 0 }); if (e.marginTop < 0) e.top += e.marginTop; if (e.marginLeft < 0) e.left += e.marginLeft; e["bottom"] = e.top + e.height; e["right"] = e.left + e.width; if (d) b.hide().css("visibility", "visible"); return e } function K(a, b, c) { var d = J(a, c); b.css({ position: "absolute", top: d.bottom, left: d.left }); return d.bottom } function L() { var b = { scrollLeft: a(window).scrollLeft(), scrollTop: a(window).scrollTop(), width: a(window).width(), height: a(window).height() }; b.x = b.scrollLeft + b.width; b.y = b.scrollTop + b.height; return b } function M(b, c) { var d = c == "height" ? "Top" : "Left", e = c == "height" ? "Bottom" : "Right"; return parseInt("0" + a.curCSS(b, "border" + d + "Width", true), 10) + parseInt("0" + a.curCSS(b, "border" + e + "Width", true), 10) + parseInt("0" + a.curCSS(b, "padding" + d, true), 10) + parseInt("0" + a.curCSS(b, "padding" + e, true), 10) + parseInt("0" + a.curCSS(b, "margin" + d, true), 10) + parseInt("0" + a.curCSS(b, "margin" + e, true), 10) } function N(a, b) { if (!a.data("dimensions")) { var c = j.outerWidth(); if (a.data("width") == 0) { a.data("width", a.width()) } var d = a === i && a.data("width") * b < c ? Math.floor(c / b) : a.data("width"); a.data("dimensions", { column: d, item: d - M(a.children().eq(0)[0], "width"), height: a.height() }) } return a.data("dimensions") } function O(a) { if (k.autoHeight === false) return k.lineHeight; if (!a.data("height")) a.data("height", a.outerHeight()); return a.data("height") } function P(b) { var c = b.find("> li"); var d = c.length; var e = Math.ceil(d / k.maxRows); var f = !!arguments[1] ? arguments[1] : d <= k.minRows ? 1 : e > k.targetColumnSize ? e : k.targetColumnSize; var g = N(b, f); var h = 0; var j = 0; var l = 0; var m = Math.ceil(d / f); var n = b.parent("li").width(); b.css({ visibility: "hidden", display: "block" }); c.each(function (b) { var c = b + 1; var e = Math.floor(c / d * f); var i = Math.floor(b / d * f); var m = a(this); var n; if (h != i) { n = (j + 1) * -1; j = 0 } else { n = 0 } j += O(m) || k.lineHeight; m.css({ marginLeft: g.column * i, marginTop: n, width: g.item })[e > i || c == d ? "addClass" : "removeClass"]("mc_endcol")[n != 0 ? "addClass" : "removeClass"]("mc_firstrow"); if (j > l) l = j; h = i }); if (b !== i && l + k.screenPadding * 2 >= L().height) { return P(b, f + 1) } b.css("visibility", "visible").height(l); return b } function Q(a) { return i.find("li[" + k.valueAttr + "='" + a + "']") } function R() { return Q(t.val()) } function S(b) { var d = R(); var e = g.val().toLowerCase(); var f = e.toLowerCase().split(k.delim); var h = f.pop(); var j = e.lastIndexOf(k.delim) + 1; l = f.join(k.delim) + (f.length > 0 ? k.delim : ""); setTimeout(function () { bb(g[0], j, j + h.length) }, 0); if (!o) { o = a('<ul class="mcdropdown_autocomplete"></ul>').appendTo("body"); if (c && !!a.fn.bgIframe) p = a("<div></div>").bgIframe().appendTo("body") } var m = !(k.showACOnEmptyFocus && l.length == 0); var n = d.length == 0 || d.hasClass("mc_root") ? i.find("> li") : d.parent().find("> li"); V(n, m) } function U(a) { if (T) clearTimeout(T); T = setTimeout(function () { var a = R(); if (!k.allowParentSelect && a.is(".mc_parent")) { var b = a.find("li:not('.mc_parent'):first").attr(k.valueAttr); h.setValue(b, true) } if (k.select != null) k.select.apply(h, h.getValue()); W(); T = null }, 200) } function V(b, d) { var e = b === n, f = e ? o.find("> li").removeClass("mc_hover mc_hover_parent mc_firstrow") : b.clone().removeAttr("style").removeClass("mc_hover mc_hover_parent mc_firstrow mc_endcol").filter(":last").addClass("mc_endcol").end(); if (!e || o.is(":hidden")) { o.empty().append(f).width(j.outerWidth() - M(o[0], "width")).css("height", "auto"); K(j.parent(), o, true); f.hover(function () { o.find("> li").removeClass("mc_hover_parent mc_hover"); a(this).addClass("mc_hover") }, function () { a(this).removeClass("mc_hover") }); f.find("> ul").css("display", "none"); o.show().css("visibility", d === true ? "hidden" : "visible"); if (c) { var g = parseInt(o.css("max-height"), 10) || 0; if (g > 0 && g < o.outerHeight()) o.height(g); if (!!a.fn.bgIframe) K(j.parent(), p.css({ height: o.outerHeight(), width: o.width() }, true).show()) } if (d !== true) D(o) } if (d === true) { o.css({ top: "-10000px", left: "-10000px" }); if (c && !!a.fn.bgIframe) p.css("display", "none") } var h = o.find("li[" + k.valueAttr + "='" + t.val() + "']"); h.addClass("mc_hover" + (h.is(".mc_parent") ? "_parent" : "")); if (h.length > 0 && d != true) cb(h); n = m = b } function W() { if (c && !!a.fn.bgIframe && p) p.hide(); if (o) o.hide() } function X(b) { var c = String.fromCharCode(b.keyCode || b.charCode).toLowerCase(); var d = R(); var e = d.length == 0 || d.hasClass("mc_root") ? i.find("> li") : d.parent().find("> li"); var f = l.split(k.delim); var j = f.pop(); var n = j + c; var o = ab(g[0]).toLowerCase(); var p = g.val().toLowerCase(); if (b.keyCode == 38) { Y(-1); return false } else if (b.keyCode == 40) { Y(1); return false } else if (b.keyCode == 27) { l = ""; h.setValue(""); V(i.find("> li")); return false } else if (b.keyCode == 8 || b.keyCode == 37) { n = b.keyCode == 37 ? "" : j.substring(0, j.length - 1); if (o == j) { j = "" } if (f.length > 0 && j.length == 0) { _(d.parent().parent()); return false } else if (o == p) { l = ""; h.setValue(""); return false } } else if (b.keyCode == 9 || b.keyCode == 13 || b.keyCode == 39 || c == k.delim) { var q = d.find("> ul > li:first"); if (q.length > 0) { _(q) } else { if (a.browser.msie) bb(g[0], 0, 0); if (b.keyCode == 9) { g.triggerHandler("blur"); W(); return true } else { g.trigger("blur"); W() } } return false } else if (o == p) { l = ""; n = c } m = Z(e, n); if (m.length > 0) { l = f.join(k.delim) + (f.length > 0 ? k.delim : "") + n; _(m.eq(0), true) } else { n = n.length ? n.substring(0, n.length - 1) : ""; m = Z(e, n); if (m.length > 0) V(m); else W() } b.preventDefault(); return false } function Y(a) { var b = R(), c, d = 0; if (b.length == 0) b = m.filter(".mc_hover, .mc_hover_parent"); if (b.length == 0 || o.is(":hidden")) { b = m.eq(0); a = 0 } m.each(function (a) { if (this === b[0]) { d = a; return false } }); if (!m || m.length == 0 || b.length == 0) return false; d = d + a; if (d < 0) d = m.length - 1; else if (d >= m.length) d = 0; c = m.eq(d); _(c, true) } function Z(b, c) { var d = a([]); b.each(function () { var b = a(this), e = w(b); if (e.substring(0, c.length).toLowerCase() == c) { d = d.add(b) } }); return d } function _(a, b) { var c = b ? m : a.length == 0 || a.hasClass("mc_root") ? i.find("> li") : a.parent().find("> li"); var d = x(a); var e = d.pop().toLowerCase(); if (!b) l = d.join(k.delim).toLowerCase() + (d.length > 0 ? k.delim : ""); h.setValue(a.attr(k.valueAttr), true); bb(g[0], l.length, e.length + l.length); c.filter(".mc_hover,.mc_hover_parent").removeClass("mc_hover mc_hover_parent"); a.addClass("mc_hover" + (a.is(".mc_parent") ? "_parent" : "")); V(c) } function ab(a) { var b = ""; if (a.setSelectionRange) { b = a.value.substring(a.selectionStart, a.selectionEnd) } else if (document.selection) { var c = document.selection.createRange(); if (c.parentElement() == a) { b = c.text } } return b } function bb(a, b, c) { if (a.createTextRange) { var d = a.createTextRange(); d.collapse(true); d.moveStart("character", b); d.moveEnd("character", c); d.select() } else if (a.setSelectionRange) { a.setSelectionRange(b, c) } else { if (a.selectionStart) { a.selectionStart = b; a.selectionEnd = c } } a.focus() } function cb(a, b) { var c = a[0]; var d = o[0]; var e = { pTop: parseInt(o.css("paddingTop"), 10) || 0, pBottom: parseInt(o.css("paddingBottom"), 10) || 0, bTop: parseInt(o.css("borderTopWidth"), 10) || 0, bBottom: parseInt(o.css("borderBottomWidth"), 10) || 0 }; if (c.offsetTop + c.offsetHeight > d.scrollTop + d.clientHeight) { d.scrollTop = a.offset().top + (d.scrollTop - o.offset().top) - (d.clientHeight / (b == true ? 2 : 1) - (a.outerHeight() + e.pBottom)) } else if (c.offsetTop - e.bTop - e.bBottom <= d.scrollTop + e.pTop + e.pBottom) { d.scrollTop = a.offset().top + (d.scrollTop - o.offset().top) - e.pTop } } var g, h = this, i, j, k, l = "", m, n, o, p, q, r = false; g = a(d); q = g.is(":input"); k = a.extend({}, b, f); if (k.click == null) { k.click = function (b, c, d) { if (this.attr(d.valueAttr)) { c.setValue(this.attr(d.valueAttr)) } else { c.setValue(a(this.parents("li")[0]).attr(d.valueAttr)) } } } a(document).bind("click", function (b) { var c = a(b.target); var d = c.parents().filter(function () { return this === i[0] || !!o && o[0] === this }); if (d.length) { var e = c.is(".mc_parent"); if (e && o && d[0] === o[0]) { _(c.find("> ul > li:first"), false); b.stopPropagation(); return false } else if (!k.allowParentSelect && e) return false; if (c.not(".mc_root")) I.apply(c.parent().parent()[0], [b]); if (k.click != null && k.click.apply(c, [b, h, k]) == false) { return false } } h.closeMenu() }); i = typeof e == "object" && !!e.jquery ? e : a(e); i.appendTo("body").css({ position: "absolute", top: -1e4, left: -1e4 }).find("ul").andSelf().css("display", "block").each(function () { var b = a(this); b.data("width", b[0].clientWidth) }).css({ top: 0, left: 0, display: "none" }); i.find("> li").addClass("mc_root"); a("li > ul", i).parent().addClass("mc_parent"); j = a('<div class="mcdropdown"><a href="#" tabindex="-1"></a><input type="hidden" name="' + (d.name || d.id) + '" id="' + (d.id || d.name) + '" /></div>').appendTo(a('<div style="position: relative;"></div>')).parent(); var s = g.replaceWith(j).attr({ id: "", name: "" }); var t = j.find(":input"); j = j.find(".mcdropdown").prepend(s); var u = j.clone().css({ position: "absolute", top: -9999999, left: -999999, visibility: "visible" }).show().appendTo("body"); var v = { width: u.width() - a("a", u).width(), height: u.outerHeight() }; if (v.width == 0) v.width = 400; if (v.height == 0) v.height = 20; u.remove(); a.data(t[0], "mcDropdown", h); j.parent().height(v.height); if (a.browser.safari) { setTimeout(function () { g.width(j.width() - a("a", j).width()) }, 100) } g.width(v.width).filter(":input").attr("autocomplete", "off").bind("keypress", X).bind("mousedown", function (b) { a(this).triggerHandler("focus"); b.stopPropagation(); return false }).bind("contextmenu", function () { return false }).bind("focus", S).bind("blur", U); if (a.browser.msie || a.browser.safari) g.bind("keydown", function (a) { if (",8,9,37,38,39,40,".indexOf("," + a.keyCode + ",") > -1) return X(a) }); a("a", j).bind("click", function (a) { if (r) return false; h.openMenu(a); return false }); this.setValue = function (a, b) { t.val(a); var c = z(a); if (k.select != null && b != true) k.select.apply(h, [a, c]); return g[q ? "val" : "text"](c) }; if (q) this.setValue(g[0].defaultValue, true); this.getValue = function (a) { return [t.val(), g[q ? "val" : "text"]()] }; this.openMenu = function (b) { function d() { P(i).hide(); B(i); K(j.parent(), i, true); i.find(".mc_hover").removeClass("mc_hover"); i[k.openFx](k.openSpeed, function () { D(i) }); if (c && !!a.fn.bgIframe) i.bgIframe() } if (i.is(":visible")) { return !!b ? h.closeMenu() : false } if (b) d(); else setTimeout(d, 1) }; this.closeMenu = function (a) { i.find("ul:visible").parent().each(function () { I.apply(this) }); C(i); i[k.closeFx](k.closeSpeed) }; this.focus = function () { g.focus() }; this.disable = function (a) { r = !!a; j[r ? "addClass" : "removeClass"]("mcdropdownDisabled"); s.attr("disabled", r) }; var T = null; if (k.init != null) k.init.apply(h, [s, t, i]) } })(jQuery)