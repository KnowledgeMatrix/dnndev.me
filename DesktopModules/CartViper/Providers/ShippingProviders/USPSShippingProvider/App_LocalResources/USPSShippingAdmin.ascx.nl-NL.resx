<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSave.Text" xml:space="preserve">
    <value>Opslaan</value>
  </data>
  <data name="lblDefaultHeight.Help" xml:space="preserve">
    <value>In het geval van een product dat niet met een hoogte vermeld, is de hoogte zal worden gebruikt.</value>
  </data>
  <data name="lblDefaultHeight.Text" xml:space="preserve">
    <value>Standaard pakket Hoogte</value>
  </data>
  <data name="lblDefaultLength.Help" xml:space="preserve">
    <value>In het geval van een product dat niet met een lengte vermeld, is de lengte zal worden gebruikt.</value>
  </data>
  <data name="lblDefaultLength.Text" xml:space="preserve">
    <value>Standaard pakket Lengte</value>
  </data>
  <data name="lblDefaultSizes.Text" xml:space="preserve">
    <value>In het geval van een product in de winkelwagen gebruikers niet hebben van een hoogte, breedte, lengte of gewicht pand opgegeven onderstaande standaardinstellingen in plaats daarvan zal worden gebruikt om het pakket nodig is om het vervoer te berekenen. De meeteenheid is gedefinieerd in de winkel admin-instellingen. Let op de max. gewicht voor de verzending provider is 70 lb.</value>
  </data>
  <data name="lblDefaultWeight.Help" xml:space="preserve">
    <value>In het geval van een product dat niet met een opgegeven gewicht dit gewicht zal worden gebruikt.</value>
  </data>
  <data name="lblDefaultWeight.Text" xml:space="preserve">
    <value>Standaard pakket Gewicht</value>
  </data>
  <data name="lblDefaultWidth.Help" xml:space="preserve">
    <value>In het geval van een product dat niet hebben opgegeven met een breedte van deze breedte zal worden gebruikt.</value>
  </data>
  <data name="lblDefaultWidth.Text" xml:space="preserve">
    <value>Standaard pakket Breedte</value>
  </data>
  <data name="lblInfoMessage.Text" xml:space="preserve">
    <value>Deze verzendkosten provider laat verzendkosten worden berekend in real time via USPS. Deze verzending is onderworpen aan u aanmelden voor een account met USPS: https: / / secure.shippingapis.com / registratie /</value>
  </data>
  <data name="lblServiceEndPoint.Help" xml:space="preserve">
    <value>De URL van de USPS webdienst eindpunt, zal dit aan u worden verstrekt wanneer u zich registreert voor een account met USPS.</value>
  </data>
  <data name="lblServiceEndPoint.Text" xml:space="preserve">
    <value>USPS Webservice Endpoint</value>
  </data>
  <data name="lblShippingFromAddress1.Help" xml:space="preserve">
    <value>De 1e lijn van het afleveradres, zullen alle kosten worden berekend vanaf hier.</value>
  </data>
  <data name="lblShippingFromAddress1.Text" xml:space="preserve">
    <value>Verzenden van adres 1</value>
  </data>
  <data name="lblShippingFromCity.Help" xml:space="preserve">
    <value>De stad die we zijn van de scheepvaart.</value>
  </data>
  <data name="lblShippingFromCity.Text" xml:space="preserve">
    <value>Verzending van City</value>
  </data>
  <data name="lblShippingFromCountry.Help" xml:space="preserve">
    <value>Het land dat wij de scheepvaart van</value>
  </data>
  <data name="lblShippingFromCountry.Text" xml:space="preserve">
    <value>Verzendkosten Van County</value>
  </data>
  <data name="lblShippingFromPostcode.Help" xml:space="preserve">
    <value>De postcode we verschepen vanaf</value>
  </data>
  <data name="lblShippingFromPostcode.Text" xml:space="preserve">
    <value>Verzendkosten Van Postcode</value>
  </data>
  <data name="lblUspsUsername.Help" xml:space="preserve">
    <value>USPS api gebruikersnaam, rekening mee dat dit is niet uw gebruikersnaam in te loggen op de website van USPS, maar de API gebruikersnaam die je voorzien van wanneer u zich aanmeldt voor een account.</value>
  </data>
  <data name="lblUspsUsername.Text" xml:space="preserve">
    <value>USPS Gebruikersnaam</value>
  </data>
  <data name="rf.Text" xml:space="preserve">
    <value>Vereist.</value>
  </data>
</root>