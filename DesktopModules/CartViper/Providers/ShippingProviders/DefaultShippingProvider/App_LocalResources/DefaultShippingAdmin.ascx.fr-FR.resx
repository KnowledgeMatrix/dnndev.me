<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSaveShippingFee.Text" xml:space="preserve">
    <value>Mise à jour</value>
  </data>
  <data name="ErrorCost.Text" xml:space="preserve">
    <value>Vous devez fournir un coût numérique valide (ne pas inclure les symboles monétaires).</value>
  </data>
  <data name="ErrorMaxWeight.Text" xml:space="preserve">
    <value>Vous devez fournir un poids maximum numérique valide.</value>
  </data>
  <data name="ErrorMinWeight.Text" xml:space="preserve">
    <value>Vous devez fournir un minimum de poids numérique valide.</value>
  </data>
  <data name="lblCostTitle.Text" xml:space="preserve">
    <value>Taux</value>
  </data>
  <data name="lblDelete.Text" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="lblFee.Text" xml:space="preserve">
    <value>Frais de livraison</value>
  </data>
  <data name="lblMaxWeightTitle.Text" xml:space="preserve">
    <value>Max. Poids</value>
  </data>
  <data name="lblMinWeightTitle.Text" xml:space="preserve">
    <value>Min. Poids</value>
  </data>
  <data name="lnkAddNew.Text" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="lblFreeShipping.Help" xml:space="preserve">
    <value>Si l'expédition sélectionnés ne seront pas facturés sur toute commande quel que soit le poids de la charrette ou l'adresse de destination d'expédition.</value>
  </data>
  <data name="lblFreeShipping.Text" xml:space="preserve">
    <value>Livraison gratuite</value>
  </data>
  <data name="lblFreeShippingOver.Help" xml:space="preserve">
    <value>Entrez une valeur alors quand le sous-total du panier est supérieur à ce montant sera expédition libre, sinon expédition seront facturés au taux défini ci-dessous. C'est un des paramètres optionnels.</value>
  </data>
  <data name="lblFreeShippingOver.Text" xml:space="preserve">
    <value>Livraison gratuite Plus</value>
  </data>
  <data name="lblCountryTitle.Text" xml:space="preserve">
    <value>Pays</value>
  </data>
  <data name="lblShippingValues.Help" xml:space="preserve">
    <value>Voici les tarifs d'expédition qui seront appliqués dans le panier au moment de la commande. Ici vous pouvez spécifier des taux d'expédition qui sont basées sur le poids de la charrette ou le sous-total du panier, vous pouvez ajouter plusieurs taux par pays. Si un taux de livraison valide n'est pas entré pour un pays et un utilisateur essaye d'extraire leur ordre ne sera pas prise.</value>
  </data>
  <data name="lblShippingValues.Text" xml:space="preserve">
    <value>Frais d'expédition</value>
  </data>
  <data name="ErrorRatePriority.Text" xml:space="preserve">
    <value>Vous devez fournir une norme par exemple la priorité</value>
  </data>
  <data name="lblShippingRatePriorityTitle.Text" xml:space="preserve">
    <value>Priorité</value>
  </data>
  <data name="lblTextControlInfo.Text" xml:space="preserve">
    <value>&lt;p&gt; Vous êtes capable de définir les bandes maritimes par le poids somme de la corbeille ou le montant de la dans le panier et la destination de livraison. &lt;/p&gt;&lt;p&gt; Le coût de l'expédition peut être entré comme un montant forfaitaire pour chaque bande, ou si «Coût en% du total" est sélectionné, le coût sera basé sur le taux que vous inscrivez en tant que% des utilisateurs subtotale. expédition par exemple les coûts de 5% du coût du montant de la charrette des utilisateurs. &lt;/p&gt;&lt;p&gt; Vous êtes également en mesure de définir une priorité vous permettant de créer différentes bandes pour, économiseur, le lendemain, les méthodes de prestation, etc pour chaque pays. &lt;/p&gt;&lt;p&gt; En sélectionnant un rôle DNN le client doit être dans ce rôle, afin de satisfaire aux critères de la bande, si aucune des bandes sont définies sans un rôle DNN utilisateurs anonymes ne seront pas en mesure à la caisse. &lt;/p&gt;&lt;p&gt; Notez que si une bande de livraison n'est pas spécifié pour un pays à l'utilisateur ne sera pas en mesure de passer leur commande, cependant, ils seront invités à contacter le magasin pour recevoir un devis d'expédition. &lt;/p&gt;</value>
  </data>
  <data name="lblCartSubtotal.Text" xml:space="preserve">
    <value>Sous-total panier</value>
  </data>
  <data name="lblCartWeight.Text" xml:space="preserve">
    <value>Poids du chariot</value>
  </data>
  <data name="lblChargeBy.Help" xml:space="preserve">
    <value>Soit le calcul d'expédition par le panier Sous-total ou le poids total des produits dans le panier.</value>
  </data>
  <data name="lblChargeBy.Text" xml:space="preserve">
    <value>Calculer Expédition par</value>
  </data>
  <data name="lblMaxSubtotalTitle.Text" xml:space="preserve">
    <value>Max. Sous-total</value>
  </data>
  <data name="lblMinSubtotalTitle.Text" xml:space="preserve">
    <value>Min. Sous-total</value>
  </data>
  <data name="rdShipBySubtotal.Text" xml:space="preserve">
    <value>Sous-total panier</value>
  </data>
  <data name="rdShipByWeight.Text" xml:space="preserve">
    <value>Poids du chariot</value>
  </data>
  <data name="lblCostAsPercentageTitle.Text" xml:space="preserve">
    <value>Coût en% du total</value>
  </data>
  <data name="lblDnnRoleTitle.Text" xml:space="preserve">
    <value>Rôle DNN</value>
  </data>
  <data name="lblDnnRoleNone.Text" xml:space="preserve">
    <value>- Aucun -</value>
  </data>
</root>