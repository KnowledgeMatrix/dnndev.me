<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSaveShippingFee.Text" xml:space="preserve">
    <value>Actualización</value>
  </data>
  <data name="ErrorCost.Text" xml:space="preserve">
    <value>Usted debe proporcionar un costo numérica válida (no incluyen los símbolos de moneda).</value>
  </data>
  <data name="ErrorMaxWeight.Text" xml:space="preserve">
    <value>Usted debe proporcionar un peso máximo válido numérico.</value>
  </data>
  <data name="ErrorMinWeight.Text" xml:space="preserve">
    <value>Usted debe proporcionar un peso mínimo válido numérico.</value>
  </data>
  <data name="lblCostTitle.Text" xml:space="preserve">
    <value>Velocidad</value>
  </data>
  <data name="lblDelete.Text" xml:space="preserve">
    <value>Borrar</value>
  </data>
  <data name="lblFee.Text" xml:space="preserve">
    <value>Gastos de envío</value>
  </data>
  <data name="lblMaxWeightTitle.Text" xml:space="preserve">
    <value>Max. Peso</value>
  </data>
  <data name="lblMinWeightTitle.Text" xml:space="preserve">
    <value>Min. Peso</value>
  </data>
  <data name="lnkAddNew.Text" xml:space="preserve">
    <value>Añadir</value>
  </data>
  <data name="lblFreeShipping.Help" xml:space="preserve">
    <value>Si el envío seleccionado no se cargará en cualquier orden independientemente del peso del carro o la dirección de envío de destino.</value>
  </data>
  <data name="lblFreeShipping.Text" xml:space="preserve">
    <value>Envío Gratis</value>
  </data>
  <data name="lblFreeShippingOver.Help" xml:space="preserve">
    <value>Introduzca un valor por lo que cuando el subtotal de la compra está sobre este envío monto será libre, de lo contrario de envío se cobrarán a las tarifas se definen a continuación. Esta es una configuración opcional.</value>
  </data>
  <data name="lblFreeShippingOver.Text" xml:space="preserve">
    <value>Envío Gratis En</value>
  </data>
  <data name="lblCountryTitle.Text" xml:space="preserve">
    <value>País</value>
  </data>
  <data name="lblShippingValues.Help" xml:space="preserve">
    <value>A continuación se presentan los costos de envío que se aplicarán a la compra en el punto de salida. Aquí puede especificar las tarifas de transporte que se basan en el peso de la cesta o el subtotal de la compra, usted puede agregar múltiples tasas por país. Si una tarifa de envío válidos no se introduce en un país y un usuario intenta obtener su orden no se tomarán medidas.</value>
  </data>
  <data name="lblShippingValues.Text" xml:space="preserve">
    <value>Tarifas de envío</value>
  </data>
  <data name="ErrorRatePriority.Text" xml:space="preserve">
    <value>Usted debe proporcionar un nivel de prioridad, por ejemplo</value>
  </data>
  <data name="lblShippingRatePriorityTitle.Text" xml:space="preserve">
    <value>Prioridad</value>
  </data>
  <data name="lblTextControlInfo.Text" xml:space="preserve">
    <value>&lt;p&gt; Usted es capaz de definir las bandas de envío por el peso total de la canasta o el subtotal de los artículos de la canasta y el destino del envío. &lt;/p&gt;&lt;p&gt; El costo del envío se puede introducir como una tarifa fija para cada banda, o si el "Costo como% del Subtotal" es seleccionado, el costo se basará en la tarifa que entrará en% de los usuarios de subtotal. por ejemplo, los costos de envío 5% del costo del subtotal de la cesta de los usuarios. &lt;/p&gt;&lt;p&gt; Usted también es capaz de definir una prioridad que le permite crear diferentes bandas para, protector, al día siguiente, los métodos de entrega, etc para cada país. &lt;/p&gt;&lt;p&gt; Al seleccionar una función DNN el cliente debe estar en este papel con el fin de cumplir con los criterios de la banda, si no se definen las bandas sin un papel DNN los usuarios anónimos no serán capaces de pagar. &lt;/p&gt;&lt;p&gt; Tenga en cuenta que si una banda de entrega no se especifica para un país que el usuario no podrá hacer su pedido, sin embargo, se le pedirá que contacte a la tienda para recibir una cotización del envío. &lt;/p&gt;</value>
  </data>
  <data name="lblCartSubtotal.Text" xml:space="preserve">
    <value>Subtotal carrito</value>
  </data>
  <data name="lblCartWeight.Text" xml:space="preserve">
    <value>Cesta de peso</value>
  </data>
  <data name="lblChargeBy.Help" xml:space="preserve">
    <value>O bien calcular el envío por el carrito de subtotal o el peso total de los productos en el carro.</value>
  </data>
  <data name="lblChargeBy.Text" xml:space="preserve">
    <value>Calcular el envío por</value>
  </data>
  <data name="lblMaxSubtotalTitle.Text" xml:space="preserve">
    <value>Max. Total parcial</value>
  </data>
  <data name="lblMinSubtotalTitle.Text" xml:space="preserve">
    <value>Min. Total parcial</value>
  </data>
  <data name="rdShipBySubtotal.Text" xml:space="preserve">
    <value>Subtotal carrito</value>
  </data>
  <data name="rdShipByWeight.Text" xml:space="preserve">
    <value>Cesta de peso</value>
  </data>
  <data name="lblCostAsPercentageTitle.Text" xml:space="preserve">
    <value>Costo como% del Subtotal</value>
  </data>
  <data name="lblDnnRoleTitle.Text" xml:space="preserve">
    <value>DNN papel</value>
  </data>
  <data name="lblDnnRoleNone.Text" xml:space="preserve">
    <value>- Ninguno -</value>
  </data>
</root>