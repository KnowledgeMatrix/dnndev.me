<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSave.Text" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="lblAccessLicenseNumber.Help" xml:space="preserve">
    <value>Le numéro de licence d'accès vous a été donné lors de votre inscription pour un compte UPS.</value>
  </data>
  <data name="lblAccessLicenseNumber.Text" xml:space="preserve">
    <value>Nombre UPS licence d'accès</value>
  </data>
  <data name="lblDefaultHeight.Help" xml:space="preserve">
    <value>Dans le cas d'un produit de ne pas avoir une hauteur spécifiée cette hauteur sera utilisé à la place.</value>
  </data>
  <data name="lblDefaultHeight.Text" xml:space="preserve">
    <value>Hauteur de package par défaut</value>
  </data>
  <data name="lblDefaultLength.Help" xml:space="preserve">
    <value>Dans le cas d'un produit de ne pas avoir une durée déterminée de cette longueur sera utilisé à la place.</value>
  </data>
  <data name="lblDefaultLength.Text" xml:space="preserve">
    <value>Longueur de paquet par défaut</value>
  </data>
  <data name="lblDefaultSizes.Text" xml:space="preserve">
    <value>Dans le cas d'un produit dans le panier des utilisateurs n'ayant pas une hauteur, largeur, longueur ou des biens de poids spécifiée ci-dessous par défaut sera utilisé au lieu de calculer l'emballage nécessaire au transport. L'unité de mesure est défini dans les paramètres du magasin admin.</value>
  </data>
  <data name="lblDefaultWeight.Help" xml:space="preserve">
    <value>Dans le cas d'un produit de ne pas avoir un poids spécifique de ce poids sera utilisé à la place.</value>
  </data>
  <data name="lblDefaultWeight.Text" xml:space="preserve">
    <value>Poids du colis par défaut</value>
  </data>
  <data name="lblDefaultWidth.Help" xml:space="preserve">
    <value>Dans le cas d'un produit de ne pas avoir une largeur spécifiée cette largeur sera utilisé à la place.</value>
  </data>
  <data name="lblDefaultWidth.Text" xml:space="preserve">
    <value>Largeur de paquet par défaut</value>
  </data>
  <data name="lblPassword.Help" xml:space="preserve">
    <value>Le mot de passe UPS vous a été fourni avec se connecter à leur API.</value>
  </data>
  <data name="lblPassword.Text" xml:space="preserve">
    <value>UPS Mot de passe</value>
  </data>
  <data name="lblProviderInfo.Text" xml:space="preserve">
    <value>Ce fournisseur d'expédition calcule les frais d'expédition en temps réel avec UPS, afin d'utiliser ce fournisseur d'expédition que vous devez vous inscrire pour un compte avec UPS à l'adresse suivante: https: / / www.ups.com/upsdeveloperkit?loc=en_US</value>
  </data>
  <data name="lblShippingFromAddress1.Help" xml:space="preserve">
    <value>La 1ère ligne de l'adresse de livraison, tous les coûts seront calculés à partir d'ici.</value>
  </data>
  <data name="lblShippingFromAddress1.Text" xml:space="preserve">
    <value>Livraison de l'adresse 1</value>
  </data>
  <data name="lblShippingFromCity.Help" xml:space="preserve">
    <value>La ville nous d'expédition.</value>
  </data>
  <data name="lblShippingFromCity.Text" xml:space="preserve">
    <value>Livraison à partir de la ville</value>
  </data>
  <data name="lblShippingFromCountry.Help" xml:space="preserve">
    <value>Le pays que nous expédions à partir de</value>
  </data>
  <data name="lblShippingFromCountry.Text" xml:space="preserve">
    <value>Livraison à partir du comté de</value>
  </data>
  <data name="lblShippingFromPostcode.Help" xml:space="preserve">
    <value>Le code postal nous sommes d'expédition de</value>
  </data>
  <data name="lblShippingFromPostcode.Text" xml:space="preserve">
    <value>Livraison à partir Code postal</value>
  </data>
  <data name="lblUsername.Help" xml:space="preserve">
    <value>Le nom d'utilisateur UPS que vous ont été fournis avec de se connecter à l'API UPS.</value>
  </data>
  <data name="lblUsername.Text" xml:space="preserve">
    <value>UPS Nom d'utilisateur</value>
  </data>
  <data name="rf.Text" xml:space="preserve">
    <value>Requis</value>
  </data>
</root>