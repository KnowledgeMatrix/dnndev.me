<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSave.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="lblAccountNumber.Help" xml:space="preserve">
    <value>The FedEx account number associated with your account.</value>
  </data>
  <data name="lblAccountNumber.Text" xml:space="preserve">
    <value>FedEx Account Number</value>
  </data>
  <data name="lblDefaultHeight.Help" xml:space="preserve">
    <value>In the event of a product not having a height specified this height will be used instead.</value>
  </data>
  <data name="lblDefaultHeight.Text" xml:space="preserve">
    <value>Default Package Height</value>
  </data>
  <data name="lblDefaultLength.Help" xml:space="preserve">
    <value>In the event of a product not having a length specified this length will be used instead.</value>
  </data>
  <data name="lblDefaultLength.Text" xml:space="preserve">
    <value>Default Package Length</value>
  </data>
  <data name="lblDefaultSizes.Text" xml:space="preserve">
    <value>In the event of a product in the users cart not having a height,width,length or weight property specified the below defaults will be used instead to calculate the package needed to transport. The unit of measurement is defined in the store admin settings.</value>
  </data>
  <data name="lblDefaultWeight.Help" xml:space="preserve">
    <value>In the event of a product not having a weight specified this weight will be used instead.</value>
  </data>
  <data name="lblDefaultWeight.Text" xml:space="preserve">
    <value>Default Package Weight</value>
  </data>
  <data name="lblDefaultWidth.Help" xml:space="preserve">
    <value>In the event of a product not having a width specified this width will be used instead.</value>
  </data>
  <data name="lblDefaultWidth.Text" xml:space="preserve">
    <value>Default Package Width</value>
  </data>
  <data name="lblInfo.Text" xml:space="preserve">
    <value>This shipping provider allows shipping to be calculated using FedEx delivery charges, the calculations are performed in real time. This shipping provider is subject to you signing up for an account with FedEx, at the following url: http://fedex.com/us/developer/</value>
  </data>
  <data name="lblKey.Help" xml:space="preserve">
    <value>The key associated with your account.</value>
  </data>
  <data name="lblKey.Text" xml:space="preserve">
    <value>FedEx Key</value>
  </data>
  <data name="lblMarkup.Help" xml:space="preserve">
    <value>Allows you to define a percentage to markup or discount the base shipping prices as returned from the FedEx webservice. To discount a price enter the percentage as a negative decimal, -0.1 would take 10% off the price</value>
  </data>
  <data name="lblMarkup.Text" xml:space="preserve">
    <value>FedEx Price Markup</value>
  </data>
  <data name="lblMarkupHelp.Text" xml:space="preserve">
    <value>Please enter the value as a percentage, so if you wanted to add 10% on the price please enter this as 0.10</value>
  </data>
  <data name="lblMeterNumber.Help" xml:space="preserve">
    <value>The meter number that is assoicated with your account.</value>
  </data>
  <data name="lblMeterNumber.Text" xml:space="preserve">
    <value>FedEx Meter Number</value>
  </data>
  <data name="lblPassword.Help" xml:space="preserve">
    <value>The password associated with your account.</value>
  </data>
  <data name="lblPassword.Text" xml:space="preserve">
    <value>FedEx Password</value>
  </data>
  <data name="lblSendAsSinglePackage.Help" xml:space="preserve">
    <value>When checked all the items in the customer's cart will be sent as a single page with FedEx, this will reduce the shipping cost for the order.</value>
  </data>
  <data name="lblSendAsSinglePackage.Text" xml:space="preserve">
    <value>Send Items as Single Package</value>
  </data>
  <data name="lblShippingFromAddress1.Help" xml:space="preserve">
    <value>The 1st line of the shipping address, all costing will be calculated from here.</value>
  </data>
  <data name="lblShippingFromAddress1.Text" xml:space="preserve">
    <value>Shipping From Address 1</value>
  </data>
  <data name="lblShippingFromCity.Help" xml:space="preserve">
    <value>The city we are shipping from.</value>
  </data>
  <data name="lblShippingFromCity.Text" xml:space="preserve">
    <value>Shipping From City</value>
  </data>
  <data name="lblShippingFromCountry.Help" xml:space="preserve">
    <value>The country that we are shipping from</value>
  </data>
  <data name="lblShippingFromCountry.Text" xml:space="preserve">
    <value>Shipping From County</value>
  </data>
  <data name="lblShippingFromPostcode.Help" xml:space="preserve">
    <value>The postcode we are shipping from</value>
  </data>
  <data name="lblShippingFromPostcode.Text" xml:space="preserve">
    <value>Shipping From Postcode</value>
  </data>
  <data name="lblTestMode.Help" xml:space="preserve">
    <value>If selected we will use the FedEx test servers, only unselect this once your account has been upgraded by FedEx to "live".</value>
  </data>
  <data name="lblTestMode.Text" xml:space="preserve">
    <value>Use Test Mode</value>
  </data>
  <data name="lblUnSupportedOptions.Help" xml:space="preserve">
    <value>Select the shipping options you want to support, if none as selected we will return all.</value>
  </data>
  <data name="lblUnSupportedOptions.Text" xml:space="preserve">
    <value>Supported Shipping Options</value>
  </data>
  <data name="rfAccountNumber.Text" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="rfKey.Text" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="rfMeterNumber.Text" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="rfPassword.Text" xml:space="preserve">
    <value>Required.</value>
  </data>
</root>