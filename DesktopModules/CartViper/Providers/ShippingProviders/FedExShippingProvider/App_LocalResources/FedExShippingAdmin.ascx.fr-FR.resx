<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSave.Text" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="lblAccountNumber.Help" xml:space="preserve">
    <value>Le numéro de compte FedEx associé à votre compte.</value>
  </data>
  <data name="lblAccountNumber.Text" xml:space="preserve">
    <value>Numéro de compte FedEx</value>
  </data>
  <data name="lblDefaultHeight.Help" xml:space="preserve">
    <value>Dans le cas d'un produit de ne pas avoir une hauteur spécifiée cette hauteur sera utilisée à la place.</value>
  </data>
  <data name="lblDefaultHeight.Text" xml:space="preserve">
    <value>Hauteur package par défaut</value>
  </data>
  <data name="lblDefaultLength.Help" xml:space="preserve">
    <value>Dans le cas d'un produit de ne pas avoir une durée déterminée de cette longueur sera utilisée à la place.</value>
  </data>
  <data name="lblDefaultLength.Text" xml:space="preserve">
    <value>Longueur package par défaut</value>
  </data>
  <data name="lblDefaultSizes.Text" xml:space="preserve">
    <value>Dans le cas d'un produit dans le panier utilisateurs de ne pas avoir une propriété hauteur, largeur, longueur ou le poids indiqué ci-dessous les valeurs par défaut sera utilisé au lieu de calculer les paquets nécessaires pour le transport. L'unité de mesure est défini dans les réglages administrateur magasin.</value>
  </data>
  <data name="lblDefaultWeight.Help" xml:space="preserve">
    <value>Dans le cas d'un produit de ne pas avoir un poids spécifié ce poids sera utilisé à la place.</value>
  </data>
  <data name="lblDefaultWeight.Text" xml:space="preserve">
    <value>Poids du colis par défaut</value>
  </data>
  <data name="lblDefaultWidth.Help" xml:space="preserve">
    <value>Dans le cas d'un produit de ne pas avoir une largeur spécifiée cette largeur sera utilisé à la place.</value>
  </data>
  <data name="lblDefaultWidth.Text" xml:space="preserve">
    <value>Largeur package par défaut</value>
  </data>
  <data name="lblInfo.Text" xml:space="preserve">
    <value>Ce fournisseur permet d'expédition maritime doit être calculé en utilisant les frais de livraison de FedEx, les calculs sont effectués en temps réel. Ce fournisseur d'expédition est soumise à votre signature pour un compte avec FedEx, à l'adresse suivante: http://fedex.com/us/developer/</value>
  </data>
  <data name="lblKey.Help" xml:space="preserve">
    <value>La clé associée à votre compte.</value>
  </data>
  <data name="lblKey.Text" xml:space="preserve">
    <value>FedEx clés</value>
  </data>
  <data name="lblMeterNumber.Help" xml:space="preserve">
    <value>Le numéro du compteur qui est associée à votre compte.</value>
  </data>
  <data name="lblMeterNumber.Text" xml:space="preserve">
    <value>FedEx compteur Nombre</value>
  </data>
  <data name="lblPassword.Help" xml:space="preserve">
    <value>Le mot de passe associé à votre compte.</value>
  </data>
  <data name="lblPassword.Text" xml:space="preserve">
    <value>FedEx Mot de passe</value>
  </data>
  <data name="lblShippingFromAddress1.Help" xml:space="preserve">
    <value>La 1ère ligne de l'adresse d'expédition, tous les coûts seront calculés à partir de là.</value>
  </data>
  <data name="lblShippingFromAddress1.Text" xml:space="preserve">
    <value>Livraison de l'adresse 1</value>
  </data>
  <data name="lblShippingFromCity.Help" xml:space="preserve">
    <value>La ville nous expédions à partir.</value>
  </data>
  <data name="lblShippingFromCity.Text" xml:space="preserve">
    <value>Livraison De Ville</value>
  </data>
  <data name="lblShippingFromCountry.Help" xml:space="preserve">
    <value>Le pays que nous sommes d'expédition de</value>
  </data>
  <data name="lblShippingFromCountry.Text" xml:space="preserve">
    <value>Livraison du comté</value>
  </data>
  <data name="lblShippingFromPostcode.Help" xml:space="preserve">
    <value>Le code postal nous sommes d'expédition de</value>
  </data>
  <data name="lblShippingFromPostcode.Text" xml:space="preserve">
    <value>Livraison De Code postal</value>
  </data>
  <data name="lblTestMode.Help" xml:space="preserve">
    <value>Si vous êtes sélectionné, nous allons utiliser les serveurs de test de FedEx, seule désélectionner cette fois que votre compte a été amélioré par FedEx de «vivre».</value>
  </data>
  <data name="lblTestMode.Text" xml:space="preserve">
    <value>Utilisez le mode test</value>
  </data>
  <data name="rfAccountNumber.Text" xml:space="preserve">
    <value>Obligatoires</value>
  </data>
  <data name="rfKey.Text" xml:space="preserve">
    <value>Obligatoires</value>
  </data>
  <data name="rfMeterNumber.Text" xml:space="preserve">
    <value>Obligatoires</value>
  </data>
  <data name="rfPassword.Text" xml:space="preserve">
    <value>Requis.</value>
  </data>
</root>