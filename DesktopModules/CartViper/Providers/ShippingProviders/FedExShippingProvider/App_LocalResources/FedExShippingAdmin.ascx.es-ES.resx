<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSave.Text" xml:space="preserve">
    <value>Ahorrar</value>
  </data>
  <data name="lblAccountNumber.Help" xml:space="preserve">
    <value>El número de cuenta FedEx asociada con su cuenta.</value>
  </data>
  <data name="lblAccountNumber.Text" xml:space="preserve">
    <value>Número de Cuenta FedEx</value>
  </data>
  <data name="lblDefaultHeight.Help" xml:space="preserve">
    <value>En el caso de un producto que no tengan una altura especificada esta altura se utilizará en su lugar.</value>
  </data>
  <data name="lblDefaultHeight.Text" xml:space="preserve">
    <value>Altura del paquete por defecto</value>
  </data>
  <data name="lblDefaultLength.Help" xml:space="preserve">
    <value>En el caso de un producto que no tengan una longitud especificada esta longitud se utilizará en su lugar.</value>
  </data>
  <data name="lblDefaultLength.Text" xml:space="preserve">
    <value>Longitud del paquete por defecto</value>
  </data>
  <data name="lblDefaultSizes.Text" xml:space="preserve">
    <value>En el caso de un producto en el carrito de los usuarios no tienen una propiedad de la altura, anchura, longitud o peso que se especifica a continuación los valores por defecto se utiliza en lugar de calcular el paquete necesario para el transporte. La unidad de medida se define en la configuración del almacén de administración.</value>
  </data>
  <data name="lblDefaultWeight.Help" xml:space="preserve">
    <value>En el caso de un producto que no tengan un peso determinado este peso se utilizará en su lugar.</value>
  </data>
  <data name="lblDefaultWeight.Text" xml:space="preserve">
    <value>Peso del paquete por defecto</value>
  </data>
  <data name="lblDefaultWidth.Help" xml:space="preserve">
    <value>En el caso de un producto que no tengan un ancho especificado esta anchura se utilizará en su lugar.</value>
  </data>
  <data name="lblDefaultWidth.Text" xml:space="preserve">
    <value>Ancho del paquete por defecto</value>
  </data>
  <data name="lblInfo.Text" xml:space="preserve">
    <value>Este proveedor de envío de envío permite que se calcula utilizando los cargos de entrega de FedEx, los cálculos se realizan en tiempo real. Este proveedor de transporte está sujeto a que usted firma para arriba para una cuenta con FedEx, en la siguiente dirección: http://fedex.com/us/developer/</value>
  </data>
  <data name="lblKey.Help" xml:space="preserve">
    <value>La clave asociada con su cuenta.</value>
  </data>
  <data name="lblKey.Text" xml:space="preserve">
    <value>FedEx clave</value>
  </data>
  <data name="lblMeterNumber.Help" xml:space="preserve">
    <value>El número de metros que está asociada con su cuenta.</value>
  </data>
  <data name="lblMeterNumber.Text" xml:space="preserve">
    <value>FedEx Meter Número</value>
  </data>
  <data name="lblPassword.Help" xml:space="preserve">
    <value>La contraseña asociada a su cuenta.</value>
  </data>
  <data name="lblPassword.Text" xml:space="preserve">
    <value>FedEx Contraseña</value>
  </data>
  <data name="lblShippingFromAddress1.Help" xml:space="preserve">
    <value>1 ª línea de la dirección de envío, todos los costos se calcularán a partir de aquí.</value>
  </data>
  <data name="lblShippingFromAddress1.Text" xml:space="preserve">
    <value>Dirección de envío de un</value>
  </data>
  <data name="lblShippingFromCity.Help" xml:space="preserve">
    <value>La ciudad se está enviando desde.</value>
  </data>
  <data name="lblShippingFromCity.Text" xml:space="preserve">
    <value>Envío de la Ciudad</value>
  </data>
  <data name="lblShippingFromCountry.Help" xml:space="preserve">
    <value>El país que estamos enviando a</value>
  </data>
  <data name="lblShippingFromCountry.Text" xml:space="preserve">
    <value>Desde el Condado de envío</value>
  </data>
  <data name="lblShippingFromPostcode.Help" xml:space="preserve">
    <value>El código postal que envío desde</value>
  </data>
  <data name="lblShippingFromPostcode.Text" xml:space="preserve">
    <value>Código postal de envío de</value>
  </data>
  <data name="lblTestMode.Help" xml:space="preserve">
    <value>Si se selecciona vamos a utilizar los servidores de prueba FedEx, sólo cancelar la selección de esta vez que su cuenta ha sido actualizada por FedEx a "vivir".</value>
  </data>
  <data name="lblTestMode.Text" xml:space="preserve">
    <value>Utilice el modo de prueba</value>
  </data>
  <data name="rfAccountNumber.Text" xml:space="preserve">
    <value>Necesario</value>
  </data>
  <data name="rfKey.Text" xml:space="preserve">
    <value>Necesario</value>
  </data>
  <data name="rfMeterNumber.Text" xml:space="preserve">
    <value>Necesario</value>
  </data>
  <data name="rfPassword.Text" xml:space="preserve">
    <value>Requiere.</value>
  </data>
</root>