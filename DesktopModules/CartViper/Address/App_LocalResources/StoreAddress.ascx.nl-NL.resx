<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="State.Text" xml:space="preserve">
    <value>Staat</value>
  </data>
  <data name="Province.Text" xml:space="preserve">
    <value>Provincie</value>
  </data>
  <data name="plStreet.Text" xml:space="preserve">
    <value>Adres 1</value>
  </data>
  <data name="plStreet.Help" xml:space="preserve">
    <value>Voer de Straat deel van uw adres (bijv. een Main Street).</value>
  </data>
  <data name="plUnit.Text" xml:space="preserve">
    <value>Adres 2</value>
  </data>
  <data name="plUnit.Help" xml:space="preserve">
    <value># Geef de Unit # of appartement.</value>
  </data>
  <data name="plCity.Text" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="plCity.Help" xml:space="preserve">
    <value>Geef de stad.</value>
  </data>
  <data name="plCountry.Text" xml:space="preserve">
    <value>Land</value>
  </data>
  <data name="plCountry.Help" xml:space="preserve">
    <value>Het land binnenkomen.</value>
  </data>
  <data name="StreetRequired.Text" xml:space="preserve">
    <value>&lt;br /&gt; Straat is vereist.</value>
  </data>
  <data name="CityRequired.Text" xml:space="preserve">
    <value>&lt;br /&gt; Plaats is verplicht.</value>
  </data>
  <data name="CountryRequired.Text" xml:space="preserve">
    <value>&lt;br /&gt; Land is verplicht.</value>
  </data>
  <data name="State.Help" xml:space="preserve">
    <value>Selecteer de staat van de lijst.</value>
  </data>
  <data name="Province.Help" xml:space="preserve">
    <value>Selecteer de provincie uit de lijst.</value>
  </data>
  <data name="StateRequired.Text" xml:space="preserve">
    <value>&lt;br /&gt; Staat verplicht is.</value>
  </data>
  <data name="ProvinceRequired.Text" xml:space="preserve">
    <value>&lt;br /&gt; Provincie is vereist.</value>
  </data>
  <data name="RegionRequired.Text" xml:space="preserve">
    <value>&lt;br /&gt; Regio nodig is.</value>
  </data>
  <data name="plRegion.Text" xml:space="preserve">
    <value>Staat / provincie / regio</value>
  </data>
  <data name="plRegion.Help" xml:space="preserve">
    <value>Geef de regio.</value>
  </data>
  <data name="plPostal.Text" xml:space="preserve">
    <value>Postcode</value>
  </data>
  <data name="plPostal.Help" xml:space="preserve">
    <value>Voer de postcode.</value>
  </data>
  <data name="Zip.Text" xml:space="preserve">
    <value>Postcode</value>
  </data>
  <data name="Zip.Help" xml:space="preserve">
    <value>Voer de postcode.</value>
  </data>
  <data name="PostalRequired.Text" xml:space="preserve">
    <value>&lt;br /&gt; Postal code is vereist.</value>
  </data>
  <data name="plTelephone.Text" xml:space="preserve">
    <value>Telefoon overdag</value>
  </data>
  <data name="plTelephone.Help" xml:space="preserve">
    <value>Dit is het telefoonnummer dat u kan worden bereikt op voor zeventien.</value>
  </data>
  <data name="TelephoneRequired.Text" xml:space="preserve">
    <value>&lt;br /&gt; Overdag nummer vereist.</value>
  </data>
  <data name="plCell.Text" xml:space="preserve">
    <value>Telefoon 's avonds</value>
  </data>
  <data name="plCell.Help" xml:space="preserve">
    <value>Dit is het telefoonnummer dat u kan worden bereikt door na zeventien.</value>
  </data>
  <data name="CellRequired.Text" xml:space="preserve">
    <value>&lt;br /&gt; Telefoonnummer 's avonds is vereist.</value>
  </data>
  <data name="plFax.Text" xml:space="preserve">
    <value>Fax</value>
  </data>
  <data name="plFax.Help" xml:space="preserve">
    <value>Geef Fax Nee.</value>
  </data>
  <data name="FaxRequired.Text" xml:space="preserve">
    <value>&lt;br /&gt; Faxnummer is vereist.</value>
  </data>
  <data name="plFirstName.Text" xml:space="preserve">
    <value>Voornaam</value>
  </data>
  <data name="plFirstName.Help" xml:space="preserve">
    <value>Geef uw voornaam.</value>
  </data>
  <data name="plDescription.Text" xml:space="preserve">
    <value>Beschrijving</value>
  </data>
  <data name="plDescription.Help" xml:space="preserve">
    <value>Familar naam voor dit adres. Bijvoorbeeld, Thuis, Werk of Shop.</value>
  </data>
  <data name="FirstNameRequired.Text" xml:space="preserve">
    <value>&lt;br /&gt; Voornaam is een verplicht.</value>
  </data>
  <data name="DescriptionRequired.Text" xml:space="preserve">
    <value>&lt;br /&gt; Beschrijving is vereist.</value>
  </data>
  <data name="LastNameRequired.Text" xml:space="preserve">
    <value>&lt;br /&gt; Achternaam is een verplicht.</value>
  </data>
  <data name="plLastName.Help" xml:space="preserve">
    <value>Geef uw achternaam.</value>
  </data>
  <data name="plLastName.Text" xml:space="preserve">
    <value>Achternaam</value>
  </data>
  <data name="plEmail.Text" xml:space="preserve">
    <value>E-mailadres</value>
  </data>
  <data name="revEmail.Text" xml:space="preserve">
    <value>&lt;br/&gt; E-mail adres is niet geldig</value>
  </data>
  <data name="rfvEmail.Text" xml:space="preserve">
    <value>&lt;br/&gt; E-mailadres is verplicht</value>
  </data>
  <data name="lblCompanyName.Text" xml:space="preserve">
    <value>Bedrijfsnaam</value>
  </data>
  <data name="lblVatNumber.Text" xml:space="preserve">
    <value>BTW-nummer</value>
  </data>
  <data name="CompanyNameRequired.Text" xml:space="preserve">
    <value>&lt;br /&gt; Bedrijf is verplicht.</value>
  </data>
  <data name="lblCounty.Text" xml:space="preserve">
    <value>Provincie</value>
  </data>
</root>