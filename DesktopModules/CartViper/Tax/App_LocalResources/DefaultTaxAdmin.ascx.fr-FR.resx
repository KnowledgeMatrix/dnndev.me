<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSaveTax.Text" xml:space="preserve">
    <value>Update Settings</value>
  </data>
  <data name="btnSaveTaxRate.Text" xml:space="preserve">
    <value>Enregistrer Taux d'imposition</value>
  </data>
  <data name="btnSaveVAT.Text" xml:space="preserve">
    <value>Enregistrer Taux de TVA</value>
  </data>
  <data name="lblErrorTax.Text" xml:space="preserve">
    <value>S'il vous plaît spécifier un valide, non-négatif, le taux d'imposition numérique dans &lt;/br&gt; pour cent (ne comprennent pas un signe pour cent)</value>
  </data>
  <data name="lblPercentage.Text" xml:space="preserve">
    <value>&lt;br/&gt; Par exemple, 10% doivent être entrés à 0,10 dans la zone de texte</value>
  </data>
  <data name="lblReducedVatRate.Help" xml:space="preserve">
    <value>Le taux de TVA à facturer les produits qui sont assignés à «taux de TVA réduit", par exemple 0,05 = 5%.</value>
  </data>
  <data name="lblReducedVatRate.Text" xml:space="preserve">
    <value>Taux réduits de TVA</value>
  </data>
  <data name="lblStandardTaxRate.Help" xml:space="preserve">
    <value>Le taux d'imposition qui seront appliqués à tous les produits: &lt;br /&gt; par exemple 0,06 = 6% &lt;br /&gt; Si vous utilisez le mode tax_tables vous devez également sélectionner l'état ce taux d'imposition s'applique.</value>
  </data>
  <data name="lblStandardTaxRate.Text" xml:space="preserve">
    <value>Taux d'imposition</value>
  </data>
  <data name="lblStandardVatRate.Help" xml:space="preserve">
    <value>Le taux de TVA à facturer les produits qui sont assignés à «taux normal de TVA", par exemple 0,20 = 20%.</value>
  </data>
  <data name="lblStandardVatRate.Text" xml:space="preserve">
    <value>Taux normal de TVA</value>
  </data>
  <data name="lblTaxOptions.Help" xml:space="preserve">
    <value>Les occasions que l'impôt doit être facturé.</value>
  </data>
  <data name="lblTaxOptions.Text" xml:space="preserve">
    <value>Options d'impôt</value>
  </data>
  <data name="lblTaxTable.Help" xml:space="preserve">
    <value>Les taxes d'état individuels qui ont été saisies, ici, vous pouvez éventuellement ajouter un taux d'imposition différents pour chaque état. Cette option est uniquement disponible si votre magasin est situé aux Etats-Unis</value>
  </data>
  <data name="lblTaxTable.Text" xml:space="preserve">
    <value>Impôts de l'État</value>
  </data>
  <data name="lblVatRates.Help" xml:space="preserve">
    <value>Le taux de TVA qui sont définis pour le magasin, la TVA sera perçue sur tous les produits au taux de TVA spécifié qui sont imputés à une adresse de facturation au sein de l'UE. Chaque taux de TVA est alors attribué à un produit et que le taux de TVA seront facturés pour ce produit.</value>
  </data>
  <data name="lblVatRates.Text" xml:space="preserve">
    <value>Taux de TVA</value>
  </data>
  <data name="lblZeroVatRate.Help" xml:space="preserve">
    <value>Le taux que nous devrions payer pour de zéro TVA produit coté, par exemple 0,0</value>
  </data>
  <data name="lblZeroVatRate.Text" xml:space="preserve">
    <value>Taux zéro de TVA</value>
  </data>
  <data name="RequiredFieldValidator1.Text" xml:space="preserve">
    <value>Obligatoires</value>
  </data>
  <data name="RequiredFieldValidator2.Text" xml:space="preserve">
    <value>Obligatoires</value>
  </data>
  <data name="RequiredFieldValidator3.Text" xml:space="preserve">
    <value>Obligatoires</value>
  </data>
  <data name="RequiredFieldValidator4.Text" xml:space="preserve">
    <value>Obligatoires</value>
  </data>
  <data name="lblInfo.Text" xml:space="preserve">
    <value>&lt;p&gt; De là, l'impôt ou TVA peut être configuré pour votre magasin. &lt;br/&gt;
De l'emplacement du magasin de paramètres que vous avez entré via la page d'info boutique Viper va déterminer si vous devez utiliser l'impôt ou de TVA. &lt;/p&gt;
&lt;p&gt;
Si vous utilisez l'impôt que vous devez ensuite configurer les options d'impôt que vous souhaitez utiliser par exemple des taux d'imposition standard, tables d'impôt etc &lt;br/&gt;
Si vous utilisez la TVA s'il vous plaît entrer des valeurs pour chacun des taux de TVA. Plus d'informations sur ces paramètres peuvent être trouvés dans le guide de l'utilisateur panier Viper. &lt;/p&gt;</value>
  </data>
  <data name="lblCountyRate.Help" xml:space="preserve">
    <value>Le taux d'imposition pour le comté individuels, ce taux sera ajouté sur le taux d'imposition standard pour New York.</value>
  </data>
  <data name="lblCountyRate.Text" xml:space="preserve">
    <value>Taux d'imposition Comté</value>
  </data>
  <data name="lblCountyTaxes.Help" xml:space="preserve">
    <value>Le taux d'imposition différents pour chacun des comtés de l'État de New York</value>
  </data>
  <data name="lblCountyTaxes.Text" xml:space="preserve">
    <value>Impôts Comté</value>
  </data>
</root>