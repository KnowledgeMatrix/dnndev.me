<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddHyperLink.Text" xml:space="preserve">
    <value>Add new</value>
  </data>
  <data name="BillingAddressHeaderUserPaymentGridView.Header" xml:space="preserve">
    <value>Billing address</value>
  </data>
  <data name="CashPaymentMethodListItem.Text" xml:space="preserve">
    <value>Cash</value>
  </data>
  <data name="CheckPaymentMethodListItem.Text" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="CityLabelControl.Text" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="CityRequiredFieldValidator.Text" xml:space="preserve">
    <value>City is required.</value>
  </data>
  <data name="CompanyLabelControl.Text" xml:space="preserve">
    <value>Company:</value>
  </data>
  <data name="CountryLabelControl.Text" xml:space="preserve">
    <value>Country:</value>
  </data>
  <data name="CreditCardExpiryLabelControl.Text" xml:space="preserve">
    <value>Expiry:</value>
  </data>
  <data name="CreditCardExpiryYearRegularExpressionValidator.Text" xml:space="preserve">
    <value>Credit card expiry is invalid.</value>
  </data>
  <data name="CreditCardExpiryYearRequiredFieldValidator.Text" xml:space="preserve">
    <value>Credit card expiry is required.</value>
  </data>
  <data name="CreditCardNumberLabelControl.Text" xml:space="preserve">
    <value>Credit card number:</value>
  </data>
  <data name="CreditCardNumberRegularExpressionValidator.Text" xml:space="preserve">
    <value>Credit card is invalid.</value>
  </data>
  <data name="CreditCardNumberRequiredFieldValidator.Text" xml:space="preserve">
    <value>Credit card is required.</value>
  </data>
  <data name="CreditCardPaymentMethodListItem.Text" xml:space="preserve">
    <value>Credit card</value>
  </data>
  <data name="EmailLabelControl.Text" xml:space="preserve">
    <value>Email:</value>
  </data>
  <data name="EmailRegularExpressionValidator.Text" xml:space="preserve">
    <value>Email is invalid.</value>
  </data>
  <data name="FirstNameLabelControl.Text" xml:space="preserve">
    <value>First name:</value>
  </data>
  <data name="FirstNameRequiredFieldValidator.Text" xml:space="preserve">
    <value>First name is required.</value>
  </data>
  <data name="LastNameLabelControl.Text" xml:space="preserve">
    <value>Last name:</value>
  </data>
  <data name="LastNameRequiredFieldValidator.Text" xml:space="preserve">
    <value>Last name is required.</value>
  </data>
  <data name="MoneyOrderPaymentMethodListItem.Text" xml:space="preserve">
    <value>Money order</value>
  </data>
  <data name="PaymentMethodHeaderUserPaymentGridView.Header" xml:space="preserve">
    <value>Payment method</value>
  </data>
  <data name="PaymentMethodLabelControl.Text" xml:space="preserve">
    <value>Payment method:</value>
  </data>
  <data name="PayPalPaymentMethodListItem.Text" xml:space="preserve">
    <value>PayPal</value>
  </data>
  <data name="PhoneLabelControl.Text" xml:space="preserve">
    <value>Phone:</value>
  </data>
  <data name="PhoneRequiredFieldValidator.Text" xml:space="preserve">
    <value>Phone is required.</value>
  </data>
  <data name="PostalCodeLabelControl.Text" xml:space="preserve">
    <value>Postal code:</value>
  </data>
  <data name="PostalCodeRequiredFieldValidator.Text" xml:space="preserve">
    <value>Postal code is required.</value>
  </data>
  <data name="SaveLinkButton.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="StreetLabelControl.Text" xml:space="preserve">
    <value>Street:</value>
  </data>
  <data name="StreetRegularExpressionValidator.Text" xml:space="preserve">
    <value>Street is invalid.</value>
  </data>
  <data name="StreetRequiredFieldValidator.Text" xml:space="preserve">
    <value>Street is required.</value>
  </data>
  <data name="SubdivisionLabelControl.Text" xml:space="preserve">
    <value>State/Province:</value>
  </data>
  <data name="UserAddressLabelControl.Text" xml:space="preserve">
    <value>Use address book:</value>
  </data>
  <data name="WireTransferPaymentMethodListItem.Text" xml:space="preserve">
    <value>Wire transfer</value>
  </data>
  <data name="PayFastPaymentMethodListItem.Text" xml:space="preserve">
    <value>PayFast</value>
  </data>
  <data name="NonePaymentMethodListItem.Text" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="TowahPaymentMethodListItem.Text" xml:space="preserve">
    <value>Towah</value>
  </data>
  <data name="VoucherPaymentMethodListItem.Text" xml:space="preserve">
    <value>Voucher</value>
  </data>
  <data name="VoucherCodeLabelControl.Text" xml:space="preserve">
    <value>Voucher code:</value>
  </data>
  <data name="VoucherCodeRequiredFieldValidator.Text" xml:space="preserve">
    <value>Voucher code is required.</value>
  </data>
  <data name="MolliePaymentMethodListItem.Text" xml:space="preserve">
    <value>Mollie</value>
  </data>
  <data name="InstitutionNumberLabelControl.Text" xml:space="preserve">
    <value>Routing number:</value>
  </data>
  <data name="InstitutionNumberRequiredFieldValidator.Text" xml:space="preserve">
    <value>Routing number is required.</value>
  </data>
  <data name="SuomenVerkkomaksutPaymentMethodListItem.Text" xml:space="preserve">
    <value>Suomen Verkkomaksut</value>
  </data>
  <data name="AuthorizeNetSIMPaymentMethodListItem.Text" xml:space="preserve">
    <value>Authorize.Net SIM</value>
  </data>
  <data name="MasterCardIGSHostedPaymentMethodListItem.Text" xml:space="preserve">
    <value>MasterCard virtual payment</value>
  </data>
  <data name="Paystation3PartyPaymentMethodListItem.Text" xml:space="preserve">
    <value>Paystation</value>
  </data>
  <data name="GeneralDetailsViewTabLabel.Text" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="SagePayFormPaymentMethodListItem.Text" xml:space="preserve">
    <value>Sage Pay</value>
  </data>
  <data name="AuthorizeNetCIMPaymentMethodListItem.Text" xml:space="preserve">
    <value>Authorize.Net CIM</value>
  </data>
  <data name="CreatePaymentLinkButton.Text" xml:space="preserve">
    <value>Add new</value>
  </data>
  <data name="DeletePaymentLinkButton.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="EditPaymentLinkButton.Text" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="PaymentProfileLabelControl.Text" xml:space="preserve">
    <value>Payment profile:</value>
  </data>
  <data name="PaymentProfileRequiredFieldValidator.Text" xml:space="preserve">
    <value>Payment profile is required.</value>
  </data>
  <data name="UpdatePaymentLinkButton.Text" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="PayUBusinessPaymentMethodListItem.Text" xml:space="preserve">
    <value>PayU Business</value>
  </data>
  <data name="CreditCardVerificationNumberLabelControl.Text" xml:space="preserve">
    <value>Security code:</value>
  </data>
  <data name="VirtualCardServicesPayPaymentMethodListItem.Text" xml:space="preserve">
    <value>Virtual Card Services Pay</value>
  </data>
  <data name="PaymentNumberLabelControl.Text" xml:space="preserve">
    <value>Payment number:</value>
  </data>
  <data name="ProfileNumberLabelControl.Text" xml:space="preserve">
    <value>Profile number:</value>
  </data>
  <data name="DotpayPaymentMethodListItem.Text" xml:space="preserve">
    <value>Dotpay</value>
  </data>
  <data name="BackControl.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CountryRequiredFieldValidator.Text" xml:space="preserve">
    <value>Country is required.</value>
  </data>
  <data name="PaymentExpressPaymentMethodListItem.Text" xml:space="preserve">
    <value>Payment Express</value>
  </data>
  <data name="ACHPaymentMethodListItem.Text" xml:space="preserve">
    <value>ACH</value>
  </data>
  <data name="AccountNumberLabelControl.Text" xml:space="preserve">
    <value>Account number:</value>
  </data>
  <data name="AccountNumberRegularExpressionValidator.Text" xml:space="preserve">
    <value>Account number is invalid.</value>
  </data>
  <data name="AccountNumberRequiredFieldValidator.Text" xml:space="preserve">
    <value>Account number is required.</value>
  </data>
  <data name="AccountTypeLabelControl.Text" xml:space="preserve">
    <value>Account type:</value>
  </data>
  <data name="InstitutionNameLabelControl.Text" xml:space="preserve">
    <value>Bank name:</value>
  </data>
  <data name="InstitutionNameRequiredFieldValidator.Text" xml:space="preserve">
    <value>Bank name is required.</value>
  </data>
  <data name="InstitutionNumberRegularExpressionValidator.Text" xml:space="preserve">
    <value>Routing number is invalid.</value>
  </data>
</root>