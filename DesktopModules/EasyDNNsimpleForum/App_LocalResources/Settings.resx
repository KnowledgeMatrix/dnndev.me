<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="advancedSettings.Text" xml:space="preserve">
    <value>Advanced settings</value>
  </data>
	<data name="categoryFilter.Text" xml:space="preserve">
    <value>Category filter</value>
  </data>
	<data name="categoryFilter.ValidationText" xml:space="preserve">
    <value>Please select at least one category!</value>
  </data>
	<data name="categoryListTemplateFolderName.Help" xml:space="preserve">
    <value>Toggles between the available category templates. Selecting a different template will have an overall impact on the category list's appearance</value>
  </data>
	<data name="categoryListTemplateFolderName.Text" xml:space="preserve">
    <value>Category list template:</value>
  </data>
	<data name="closeSettings.Text" xml:space="preserve">
    <value>Close</value>
  </data>
	<data name="commentsPerPage.Help" xml:space="preserve">
    <value>Enables the desired number of Facebook comments to be shown per page</value>
  </data>
	<data name="commentsPerPage.Text" xml:space="preserve">
    <value>Number of comments per page:</value>
  </data>
	<data name="commentsPerPage.ValidationText" xml:space="preserve">
    <value>"Number of comments per page" must be a number!</value>
  </data>
	<data name="commentsSettings.Text" xml:space="preserve">
    <value>Comments settings</value>
  </data>
	<data name="cssStyleFileName.Help" xml:space="preserve">
    <value>Toggles between the available CSS files. Different CSS styles enable you to change color schemes</value>
  </data>
	<data name="cssStyleFileName.Text" xml:space="preserve">
    <value>CSS style:</value>
  </data>
	<data name="defaultValue.Text" xml:space="preserve">
    <value>Default value</value>
  </data>
	<data name="displayAllCategories.Help" xml:space="preserve">
    <value>Enables all categories to be shown at once. This option is enabled by default, so if you wish to disable the "Display all categories" option, you can select a single category or multiple categories to display instead</value>
  </data>
	<data name="displayAllCategories.Text" xml:space="preserve">
    <value>Display all categories:</value>
  </data>
	<data name="displayRelatedTopics.Help" xml:space="preserve">
    <value>Toggles the visibility of related topics. Allows the related topics top be listed in the details of the original topic, if applicable.&lt;br /&gt;Related topics are shown depending on the tags provided in the original topic</value>
  </data>
	<data name="displayRelatedTopics.Text" xml:space="preserve">
    <value>Display related topics:</value>
  </data>
	<data name="displayType.Help" xml:space="preserve">
    <value>Toggles between the display types available. Choose amongst the following:&lt;ul&gt;&lt;li&gt;Categories &gt; Topics &gt; Details: A 3-level initial display. It shows the categories, which when selected show their respective topics, which in turn, once selected open the details of the topic in question&lt;/li&gt;&lt;li&gt;Topics &gt; Details: A 2-level initial display. It shows all topics regardless of the category, which when selected open the details of the topic in question&lt;/li&gt;&lt;/ul&gt;</value>
  </data>
	<data name="displayType.Text" xml:space="preserve">
    <value>Display type:</value>
  </data>
	<data name="editingModuleSettings.Text" xml:space="preserve">
    <value>Custom settings (instance)</value>
  </data>
	<data name="editingPortalSettings.Text" xml:space="preserve">
    <value>Default settings (portal)</value>
  </data>
	<data name="facebookAPPID.Help" xml:space="preserve">
    <value>Facebook API requires a valid ID key to work properly. The key is generated after creating a Facebook application</value>
  </data>
	<data name="facebookAPPID.Text" xml:space="preserve">
    <value>Facebook APP ID:</value>
  </data>
	<data name="facebookAppSecret.Help" xml:space="preserve">
    <value>Facebook API requires a valid secret key to work properly. The key is generated after creating a Facebook application</value>
  </data>
	<data name="facebookAppSecret.Text" xml:space="preserve">
    <value>Facebook App Secret:</value>
  </data>
	<data name="facebookColorScheme.Help" xml:space="preserve">
    <value>Toggles between the available facebook color schemes</value>
  </data>
	<data name="facebookColorScheme.Text" xml:space="preserve">
    <value>Color sheme:</value>
  </data>
	<data name="facebookOrderBy.Help" xml:space="preserve">
    <value>Toggles between the available sorting methods. The following options are available:&lt;ul&gt;&lt;li&gt;Social - Orders Facebook comments by popularity&lt;/li&gt;&lt;li&gt;Time - Orders Facebook comments so that oldest comments show first&lt;/li&gt;&lt;li&gt;Reverse time - Orders Facebook comments so that latest comments show first&lt;/li&gt;&lt;/ul&gt;</value>
  </data>
	<data name="facebookOrderBy.Text" xml:space="preserve">
    <value>Order by:</value>
  </data>
	<data name="mainDisplaySettings.Text" xml:space="preserve">
    <value>Main display settings</value>
  </data>
	<data name="module.Help" xml:space="preserve">
    <value>Module help</value>
  </data>
	<data name="module.Text" xml:space="preserve">
    <value>Module</value>
  </data>
	<data name="moduleInstanceSettingsChoice.Text" xml:space="preserve">
    <value>Edit settings:</value>
  </data>
	<data name="paginationType.Help" xml:space="preserve">
    <value>Choice of pagination type. Choose amongst the following:&lt;ul&gt;&lt;li&gt;Infinite scroll - Topics are loaded automatically as the page is being scrolled, until all the topics have been loaded&lt;/li&gt;&lt;li&gt;Infinite scroll on button click - Topics are loaded by clicking the "Load more" button&lt;/li&gt;&lt;li&gt;Classic - Paging with page numbers, topics are listed by selecting the page numbers&lt;/li&gt;&lt;/ul&gt;</value>
  </data>
	<data name="paginationType.Text" xml:space="preserve">
    <value>Pagination type:</value>
  </data>
	<data name="portal.Help" xml:space="preserve">
    <value>Portal help</value>
  </data>
	<data name="portal.Text" xml:space="preserve">
    <value>Portal</value>
  </data>
	<data name="saveAndCloseSettings.Text" xml:space="preserve">
    <value>Save and close</value>
  </data>
	<data name="saveSettings.Text" xml:space="preserve">
    <value>Save</value>
  </data>
	<data name="saveSettingsSuccess.Text" xml:space="preserve">
    <value>Settings saved successfully!</value>
  </data>
	<data name="settingsBaseTitle.Text" xml:space="preserve">
    <value>Settings</value>
  </data>
	<data name="theme.Help" xml:space="preserve">
    <value>Toggles between the available themes. Selecting a different theme will have an overall impact on the forum's appearance</value>
  </data>
	<data name="theme.Text" xml:space="preserve">
    <value>Theme:</value>
  </data>
	<data name="themeAndTemplateSelection.Text" xml:space="preserve">
    <value>Theme and template selection</value>
  </data>
	<data name="topicDetailsTemplateFolderName.Help" xml:space="preserve">
    <value>Toggles between the available topic details templates. Selecting a different template will have an overall impact on the topic details' appearance</value>
  </data>
	<data name="topicDetailsTemplateFolderName.Text" xml:space="preserve">
    <value>Topic details template:</value>
  </data>
	<data name="topicListTemplateFolderName.Help" xml:space="preserve">
    <value>Toggles between the available topic templates. Selecting a different template will have an overall impact on the topic list's appearance</value>
  </data>
	<data name="topicListTemplateFolderName.Text" xml:space="preserve">
    <value>Topic list template:</value>
  </data>
	<data name="topicsPerPage.Help" xml:space="preserve">
    <value>Enables the desired number of topics to be shown per page. Defines the paging page size</value>
  </data>
	<data name="topicsPerPage.Text" xml:space="preserve">
    <value>Number of topics per page:</value>
  </data>
	<data name="topicsPerPage.ValidationText" xml:space="preserve">
    <value>"Number of topics per page" must be a number!</value>
  </data>
	<data name="useCategoryPermissions.Help" xml:space="preserve">
    <value>Toggles the category permissions</value>
  </data>
	<data name="useCategoryPermissions.Text" xml:space="preserve">
    <value>Category permissions:</value>
  </data>
	<data name="usePermissionsPerTopic.Help" xml:space="preserve">
    <value>Toggles the topic permissions</value>
  </data>
	<data name="usePermissionsPerTopic.Text" xml:space="preserve">
    <value>Permissions per topic:</value>
  </data>
	<data name="openFacebookConnect.Text" xml:space="preserve">
		<value>Setup Facebook autoposting:</value>
	</data>
	<data name="openFacebookConnect.Help" xml:space="preserve">
		<value>Open form to setup Facebook autoposting. Make sure you have entered correct Facebook APP ID and Facebook App Secret.</value>
	</data>
	<data name="facebookConnectSelectPage.Text" xml:space="preserve">
		<value>Select page:</value>
	</data>
	<data name="facebookConnectSelectPage.Help" xml:space="preserve">
		<value>Select Facebook page where new topics will be posted.</value>
	</data>
	<data name="facebookAutoPostingIsSet.Text" xml:space="preserve">
		<value>Facbook autoposting is set to:</value>
	</data>
	<data name="facebookAutoPostingIsNotSet.Text" xml:space="preserve">
		<value>Autoposting to Facebook is not set</value>
	</data>
	<data name="connectToFacebookAccount.Text" xml:space="preserve">
		<value>Connect to your Facebook account.</value>
	</data>
	<data name="facebookConnectLoginCanceled.Text" xml:space="preserve">
		<value>Error. Login to Facebook canceled.</value>
	</data>
	<data name="facebookConnectNoPages.Text" xml:space="preserve">
		<value>Error while retrieving your account pages or you don't have any pages connected to your account.</value>
	</data>
	<data name="facebookConnectErrorGettingPageAccess.Text" xml:space="preserve">
		<value>Error while getting page access token.</value>
	</data>
	<data name="replaceFacebookAutoPosting.Text" xml:space="preserve">
		<value>Replace</value>
	</data>
</root>