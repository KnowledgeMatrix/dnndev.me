<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApprovedPost.Text" xml:space="preserve">
    <value>Approved Post</value>
  </data>
  <data name="ApprovedPost_desc.Text" xml:space="preserve">
    <value>When a post is approved</value>
  </data>
  <data name="CommentedPost.Text" xml:space="preserve">
    <value>Commented Post</value>
  </data>
  <data name="CommentedPost_desc.Text" xml:space="preserve">
    <value>When a post gets a comment</value>
  </data>
  <data name="CreatedDeletedPost.Text" xml:space="preserve">
    <value>Created Deleted Post</value>
  </data>
  <data name="CreatedDeletedPost_desc.Text" xml:space="preserve">
    <value>When user created a post that is deleted</value>
  </data>
  <data name="CreatedPost.Text" xml:space="preserve">
    <value>Created Post</value>
  </data>
  <data name="CreatedPost_desc.Text" xml:space="preserve">
    <value>When a post is created</value>
  </data>
  <data name="DeletedPost.Text" xml:space="preserve">
    <value>Deleted Post</value>
  </data>
  <data name="DeletedPost_desc.Text" xml:space="preserve">
    <value>When a post is deleted</value>
  </data>
  <data name="EditedPost.Text" xml:space="preserve">
    <value>Edited Post</value>
  </data>
  <data name="EditedPost_desc.Text" xml:space="preserve">
    <value>When a post is edited</value>
  </data>
  <data name="InvalidRevisionStateException.Text" xml:space="preserve">
    <value>The revision of this post is not in the correct state. It should be pending to be approved.</value>
  </data>
  <data name="PostBodyIsRequired.Text" xml:space="preserve">
    <value>Body is required</value>
  </data>
  <data name="PostDoesNotExistException.Text" xml:space="preserve">
    <value>Post does not exist</value>
  </data>
  <data name="PostIsNotValidException.Text" xml:space="preserve">
    <value>The Post cannot be saved as it is not valid</value>
  </data>
  <data name="PostMetadataTitleIsRequired.Text" xml:space="preserve">
    <value>Title is required</value>
  </data>
  <data name="PostTitleIsRequired.Text" xml:space="preserve">
    <value>Title is required</value>
  </data>
  <data name="PublishAPostIncompatibleState.Text" xml:space="preserve">
    <value>The current post cannot be published since it has an incompatible state. Please, refresh the page.</value>
  </data>
  <data name="PublisherApprovePostNotificationComment.Text" xml:space="preserve">
    <value>The post titled '{0}' requires your review and approval. View the changes &lt;a  href="{1}"&gt;here&lt;/a&gt;.</value>
  </data>
  <data name="PublisherApprovePostNotificationSubject.Text" xml:space="preserve">
    <value>Post Approval</value>
  </data>
  <data name="PublisherDiscardPostNotificationComment.Text" xml:space="preserve">
    <value>The post titled '{0}' submitted by you has been discarded.</value>
  </data>
  <data name="PublisherDiscardPostNotificationSubject.Text" xml:space="preserve">
    <value>Post Discarded</value>
  </data>
  <data name="PublisherPublishPostNotificationComment.Text" xml:space="preserve">
    <value>The post titled '{0}' has been approved. Click &lt;a href="{1}"&gt;here&lt;/a&gt; to open the post.</value>
  </data>
  <data name="PublisherPublishPostNotificationSubject.Text" xml:space="preserve">
    <value>Your post has been published.</value>
  </data>
  <data name="PublisherRejectPostNotificationComment.Text" xml:space="preserve">
    <value>Changes for the post titled '{0}' has been rejected. It is now in state '{1}'. View the changes &lt;a href="{2}"&gt;here&lt;/a&gt;.</value>
  </data>
  <data name="PublisherRejectPostNotificationSubject.Text" xml:space="preserve">
    <value>Post Changes Rejected</value>
  </data>
  <data name="PublisherSubmitPostNotificationComment.Text" xml:space="preserve">
    <value>The post titled '{0}' is in status waiting submission. View the changes &lt;a  href="{1}"&gt;here&lt;/a&gt;.</value>
  </data>
  <data name="PublisherSubmitPostNotificationSubject.Text" xml:space="preserve">
    <value>Post Submission</value>
  </data>
  <data name="RejectAPostIncompatibleState.Text" xml:space="preserve">
    <value>The current post cannot be rejected since it has an incompatible state. Please, refresh the page.</value>
  </data>
  <data name="RejectedPost.Text" xml:space="preserve">
    <value>Rejected Post</value>
  </data>
  <data name="RejectedPost_desc.Text" xml:space="preserve">
    <value>When a post is rejected</value>
  </data>
  <data name="SaveAPostIncompatibleState.Text" xml:space="preserve">
    <value>The current post cannot be saved since it has an incompatible state. Please, refresh the page.</value>
  </data>
  <data name="ViewedPost.Text" xml:space="preserve">
    <value>Viewed Post</value>
  </data>
  <data name="ViewedPost_desc.Text" xml:space="preserve">
    <value>When the post is viewed</value>
  </data>
  <data name="WorkflowDoesNotExistException.Text" xml:space="preserve">
    <value>The workflow configured for the publisher does not longer exist. Please go to the the publisher settings panel and change the default workflow.</value>
  </data>
  <data name="Authors.Permission" xml:space="preserve">
    <value>Authors</value>
  </data>
  <data name="PostSlugIsNotValid.Text" xml:space="preserve">
    <value>URL is not valid</value>
  </data>
  <data name="PostSlugIsRequired.Text" xml:space="preserve">
    <value>URL is required</value>
  </data>
  <data name="DiscartedPostByDeletion.Text" xml:space="preserve">
    <value>The post has been discarted and deleted</value>
  </data>
  <data name="DiscardAPostIncompatibleState.Text" xml:space="preserve">
    <value>The current post cannot be discarded since it has an incompatible state. Please, refresh the page.</value>
  </data>
  <data name="TitleEmptyAfterStrippingOutHtml.Text" xml:space="preserve">
    <value>Please add some valid content to the title. The system sanitizes the title stripping out any html tags. The result of this process cannot be an empty title.</value>
  </data>
  <data name="PostSlugIsInUse.Text" xml:space="preserve">
    <value>URL is in use</value>
  </data>
  <data name="ContentTypeNotFound.Text" xml:space="preserve">
    <value>Content Type '{0}' cannot be found in the list of created Content Types.</value>
  </data>
</root>