<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Answer.Text" xml:space="preserve">
    <value>Answer</value>
  </data>
  <data name="Answers.Text" xml:space="preserve">
    <value>Answers</value>
  </data>
  <data name="by.Text" xml:space="preserve">
    <value>by</value>
  </data>
  <data name="cmdSave.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="cmdSubscribe.Text" xml:space="preserve">
    <value>Subscribe</value>
  </data>
  <data name="cmdUnsubscribe.Text" xml:space="preserve">
    <value>Unsubscribe</value>
  </data>
  <data name="hlAddQuestion.Text" xml:space="preserve">
    <value>Ask Question</value>
  </data>
  <data name="hlHome.Text" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="hlTags.Text" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="YourAnswer.Text" xml:space="preserve">
    <value>Your answer</value>
  </data>
  <data name="AcceptAnswer.Text" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="AcceptedAnswer.Text" xml:space="preserve">
    <value>This answer has been selected by the question author as the best answer.</value>
  </data>
  <data name="hlActive.Text" xml:space="preserve">
    <value>active</value>
  </data>
  <data name="hlVotes.Text" xml:space="preserve">
    <value>votes</value>
  </data>
  <data name="Remove.Text" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Report.Text" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="hlEdit.Text" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="close.Text" xml:space="preserve">
    <value>close</value>
  </data>
  <data name="closeTitle.Text" xml:space="preserve">
    <value>Close this question from further answers.</value>
  </data>
  <data name="edit.Text" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="editTitle.Text" xml:space="preserve">
    <value>Edit this post to make it more clear.</value>
  </data>
  <data name="flagTitle.Text" xml:space="preserve">
    <value>Flag this post for moderator attention.</value>
  </data>
  <data name="protect.Text" xml:space="preserve">
    <value>protect</value>
  </data>
  <data name="protectTitle.Text" xml:space="preserve">
    <value>Protect this question from further edits.</value>
  </data>
  <data name="accept.Text" xml:space="preserve">
    <value>accept</value>
  </data>
  <data name="acceptTitle.Text" xml:space="preserve">
    <value>Accept this as the answer for the original question.</value>
  </data>
  <data name="DoesntBelong.Text" xml:space="preserve">
    <value>it doesn't belong here</value>
  </data>
  <data name="editATitle.Text" xml:space="preserve">
    <value>Edit this answer to make it more clear.</value>
  </data>
  <data name="FlagAPopupHeader.Text" xml:space="preserve">
    <value>I am flagging this answer because...</value>
  </data>
  <data name="FlagQPopupHeader.Text" xml:space="preserve">
    <value>I am flagging this question because...</value>
  </data>
  <data name="LowQuality.Text" xml:space="preserve">
    <value>very low quality</value>
  </data>
  <data name="Other.Text" xml:space="preserve">
    <value>other</value>
  </data>
  <data name="Spam.Text" xml:space="preserve">
    <value>it is spam</value>
  </data>
  <data name="FlagADialogTitle.Text" xml:space="preserve">
    <value>Flag Answer</value>
  </data>
  <data name="FlagQDialogTitle.Text" xml:space="preserve">
    <value>Flag Question</value>
  </data>
  <data name="cmdDelete.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="cmdFlag.Text" xml:space="preserve">
    <value>Flag</value>
  </data>
  <data name="RemainingFlags.Text" xml:space="preserve">
    <value>inform moderator flags remaining</value>
  </data>
  <data name="hlOldest.Text" xml:space="preserve">
    <value>oldest</value>
  </data>
  <data name="InvalidPost.Text" xml:space="preserve">
    <value>You have attempted to view a question or answer that is no longer available. </value>
  </data>
  <data name="cmdAccept.Text" xml:space="preserve">
    <value>accept</value>
  </data>
  <data name="answered.Text" xml:space="preserve">
    <value>answered </value>
  </data>
  <data name="asked.Text" xml:space="preserve">
    <value>asked </value>
  </data>
  <data name="cmdBack.Text" xml:space="preserve">
    <value>Prev</value>
  </data>
  <data name="cmdMore.Text" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="AnswerLogin.Text" xml:space="preserve">
    <value>In order to provide an answer to this question, you must  </value>
  </data>
  <data name="hlLogin.Text" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="AlreadyFlaggedPopupHeader.Text" xml:space="preserve">
    <value>Flagging a Post</value>
  </data>
  <data name="cmdUndoFlag.Text" xml:space="preserve">
    <value>Remove Flag</value>
  </data>
  <data name="AlreadyFlagged.Text" xml:space="preserve">
    <value>You have already flagged this post. Clicking "Remove Flag" below will remove your flag, thus reducing the count by one as well. </value>
  </data>
  <data name="AnswerOwnQuestion.Text" xml:space="preserve">
    <value>Users are not permitted to answer their own questions. </value>
  </data>
  <data name="edited.Text" xml:space="preserve">
    <value>edited </value>
  </data>
  <data name="Refresh.Text" xml:space="preserve">
    <value>A new answer has been provided.  &lt;a href=\"javascript:location.reload(true)\"&gt;Click to refresh&lt;/a&gt;</value>
  </data>
  <data name="hlReturn.Text" xml:space="preserve">
    <value>Return to previous page</value>
  </data>
  <data name="LastActivity.Text" xml:space="preserve">
    <value>Last Activity:</value>
  </data>
  <data name="Views.Text" xml:space="preserve">
    <value>Views</value>
  </data>
  <data name="TopAnswer.Text" xml:space="preserve">
    <value>Top Answer:</value>
  </data>
  <data name="Tags.Text" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="Like.Text" xml:space="preserve">
    <value>Like</value>
  </data>
  <data name="Unlike.Text" xml:space="preserve">
    <value>Unlike</value>
  </data>
  <data name="Reply.Text" xml:space="preserve">
    <value>Reply</value>
  </data>
  <data name="Question.Text" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="AddAnswer.Text" xml:space="preserve">
    <value>Add an Answer</value>
  </data>
  <data name="DownVotedAnswer.Text" xml:space="preserve">
    <value>You have down-voted this answer</value>
  </data>
  <data name="DownVotedQuestion.Text" xml:space="preserve">
    <value>You have down-voted this question</value>
  </data>
  <data name="NoDownVotePriv.Text" xml:space="preserve">
    <value>You have not yet been granted the privilege for down-voting.</value>
  </data>
  <data name="NoUpVotePriv.Text" xml:space="preserve">
    <value>You have not yet been granted the privilege for up-voting.</value>
  </data>
  <data name="UpVotedAnswer.Text" xml:space="preserve">
    <value>You have up-voted this answer</value>
  </data>
  <data name="UpVotedQuestion.Text" xml:space="preserve">
    <value>You have up-voted this question</value>
  </data>
  <data name="VoteDownAnswer.Text" xml:space="preserve">
    <value>This answer is not useful</value>
  </data>
  <data name="VoteDownQuestion.Text" xml:space="preserve">
    <value>This question does not show research effort; it is a duplicate or unclear</value>
  </data>
  <data name="VoteOwnPost.Text" xml:space="preserve">
    <value>Users are not permitted to vote on their own questions or answers.</value>
  </data>
  <data name="VoteUpAnswer.Text" xml:space="preserve">
    <value>This answer is useful</value>
  </data>
  <data name="VoteUpQuestion.Text" xml:space="preserve">
    <value>This question shows research effort; it is useful and clear</value>
  </data>
  <data name="AnswerError.Text" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="AnswerErrorText.Text" xml:space="preserve">
    <value>There was an error submitting your answer: {0}</value>
  </data>
  <data name="NoAnswer.Text" xml:space="preserve">
    <value>You must enter an answer before pressing Reply.</value>
  </data>
  <data name="NoAnswers.Text" xml:space="preserve">
    <value>There are no answers to this question yet. Post one!</value>
  </data>
  <data name="NoAnswerTitle.Text" xml:space="preserve">
    <value>Nothing entered</value>
  </data>
  <data name="AnswerResultCount.Text" xml:space="preserve">
    <value>&lt;strong&gt;{0}&lt;/strong&gt; Answers</value>
  </data>
  <data name="SingleAnswerResultCount.Text" xml:space="preserve">
    <value>&lt;strong&gt;{0}&lt;/strong&gt; Answer</value>
  </data>
  <data name="View.Text" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Comment.Text" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="GroupModeWarning.Text" xml:space="preserve">
    <value>No valid group was found to associate with Question</value>
  </data>
  <data name="ViewMore.Text" xml:space="preserve">
    <value>View More</value>
  </data>
  <data name="Accepted.Text" xml:space="preserve">
    <value>Accepted</value>
  </data>
  <data name="UnderModeration.Text" xml:space="preserve">
    <value>This question is currently awaiting moderation. </value>
  </data>
  <data name="VoteNotLogin.Text" xml:space="preserve">
    <value>You are not logged in for voting</value>
  </data>
</root>