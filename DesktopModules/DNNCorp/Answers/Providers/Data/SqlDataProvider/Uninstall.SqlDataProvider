
if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_ContentItem_GetByTypeAndCreated') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_ContentItem_GetByTypeAndCreated
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Post_AcceptAnswer') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Post_AcceptAnswer
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Post_Add') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Post_Add
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Post_Delete') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Post_Delete
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Post_Get') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Post_Get
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Post_GetAnswers') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Post_GetAnswers
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Post_GetAnswersByDate') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Post_GetAnswersByDate
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Post_SoftDelete') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Post_SoftDelete
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Post_Update') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Post_Update
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Post_UpdateViewCount') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Post_UpdateViewCount
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Question_GetByContentItem') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Question_GetByContentItem
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Question_GetSitemap') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Question_GetSitemap
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_UpdateScheduleItemSetting') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_UpdateScheduleItemSetting
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Vote_Add') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Vote_Add
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Vote_GetPost') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Vote_GetPost
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Vote_GetTerm') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Vote_GetTerm
GO

IF EXISTS (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Question_Search') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Question_Search
GO

IF EXISTS (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Question_Search_ByTags') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Question_Search_ByTags
GO

IF EXISTS (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_GetPostIdFromContentItemId') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_GetPostIdFromContentItemId
GO

IF EXISTS (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Question_GetSearchable') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Question_GetSearchable
GO

IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}Answers_IsSearchMatch]', N'FN') IS NOT NULL
	DROP FUNCTION {databaseOwner}[{objectQualifier}Answers_IsSearchMatch]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}vw_Answers_Posts') and OBJECTPROPERTY(id, N'IsView') = 1)
	DROP VIEW {databaseOwner}{objectQualifier}vw_Answers_Posts
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Vote') and OBJECTPROPERTY(id, N'IsTable') = 1)
	DROP TABLE {databaseOwner}{objectQualifier}Answers_Vote
GO

if exists (select * from dbo.sysobjects where id = object_id(N'FK_{objectQualifier}Answers_Post_{objectQualifier}Portals') and OBJECTPROPERTY(id, N'IsConstraint') = 1)
	ALTER TABLE {databaseOwner}{objectQualifier}Answers_Post DROP CONSTRAINT FK_{objectQualifier}Answers_Post_{objectQualifier}Portals
GO

if exists (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Post') and OBJECTPROPERTY(id, N'IsTable') = 1)
	DROP TABLE {databaseOwner}{objectQualifier}Answers_Post
GO

IF EXISTS (select * from dbo.sysobjects where id = object_id(N'{databaseOwner}{objectQualifier}Answers_Post_GetPostsByUserId') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_Post_GetPostsByUserId
GO

/* Content Item */
DECLARE @ContentTypeID INT
SET @ContentTypeID = ( SELECT   ContentTypeID
					   FROM     {databaseOwner}{objectQualifier}ContentTypes
					   WHERE    ContentType = 'DNNCorp_Answers_Question'
					 )

DELETE FROM {databaseOwner}{objectQualifier}ContentItems
	WHERE   ContentTypeID = @ContentTypeID

DELETE FROM  {databaseOwner}{objectQualifier}ContentTypes
	WHERE ContentTypeID = @ContentTypeID
GO

/* Notifications */
DECLARE @NotificationTypeId INT
 SET @NotificationTypeId = (SELECT NotificationTypeID from {databaseOwner}[{objectQualifier}CoreMessaging_NotificationTypes] WHERE Name = N'DNNCorp_Answers_Post_Approval')
 DELETE FROM  {databaseOwner}[{objectQualifier}CoreMessaging_Messages] 
	WHERE NotificationTypeId = @NotificationTypeId

 DELETE FROM {databaseOwner}[{objectQualifier}CoreMessaging_NotificationTypeActions] 
	WHERE NotificationTypeId = @NotificationTypeId

DELETE FROM {databaseOwner}[{objectQualifier}CoreMessaging_NotificationTypes] 
	WHERE NotificationTypeId = @NotificationTypeId

SET @NotificationTypeId = (SELECT NotificationTypeID from {databaseOwner}[{objectQualifier}CoreMessaging_NotificationTypes] WHERE Name = N'DNNCorp_Answers_Post_Flagged')
DELETE FROM  {databaseOwner}[{objectQualifier}CoreMessaging_Messages] 
	WHERE NotificationTypeId = @NotificationTypeId

DELETE FROM {databaseOwner}[{objectQualifier}CoreMessaging_NotificationTypeActions] 
WHERE NotificationTypeId = @NotificationTypeId

DELETE FROM {databaseOwner}[{objectQualifier}CoreMessaging_NotificationTypes] 
	WHERE NotificationTypeId = @NotificationTypeId
GO

/* Subscriptions */
DECLARE @SubscriptionTypeId INT
SET @SubscriptionTypeId = ( SELECT   SubscriptionTypeId
					   FROM     {databaseOwner}{objectQualifier}CoreMessaging_SubscriptionTypes
					   WHERE    SubscriptionName = 'DNNCorp_Answers_Question'
					 )

DELETE FROM {databaseOwner}{objectQualifier}CoreMessaging_SubscriptionTypes
	WHERE   SubscriptionTypeId = @SubscriptionTypeId
GO

IF OBJECT_ID(N'{databaseOwner}{objectQualifier}Answers_GetItemsToCreateZendeskTickets', 'P') IS NOT NULL
	DROP PROCEDURE {databaseOwner}{objectQualifier}Answers_GetItemsToCreateZendeskTickets
GO      