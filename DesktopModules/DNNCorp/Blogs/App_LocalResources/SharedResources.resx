<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Categories.Text" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="Category.Text" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="More.Text" xml:space="preserve">
    <value>More ...</value>
  </data>
  <data name="Tag.Text" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="posts.text" xml:space="preserve">
    <value>posts</value>
  </data>
  <data name="GhostWriter.Permission" xml:space="preserve">
    <value>Ghost Writer</value>
  </data>
  <data name="Blogger.Permission" xml:space="preserve">
    <value>Blogger</value>
  </data>
  <data name="ApproveComment.Text" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="ApproveComment_Desc.Text" xml:space="preserve">
    <value>Approve the comment and make it available for immediate viewing.</value>
  </data>
  <data name="ApproveEntry.Text" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="ApproveEntry_Desc.Text" xml:space="preserve">
    <value>Approve the blog post, it will be viewable online once the publish date has been reached (if it is in the future, live immediately if in the past).</value>
  </data>
  <data name="ApprovePostNotifyBody.Text" xml:space="preserve">
    <value>A new blog entry is pending approval</value>
  </data>
  <data name="CommentAddedNotify.Text" xml:space="preserve">
    <value>A new comment has been added</value>
  </data>
  <data name="CommentPendingApproval.Text" xml:space="preserve">
    <value>Thanks, your comment has been received and is pending approval.</value>
  </data>
  <data name="CommentPendingNotify.Text" xml:space="preserve">
    <value>A new comment is pending approval</value>
  </data>
  <data name="DeleteComment.Text" xml:space="preserve">
    <value>Delete Comment</value>
  </data>
  <data name="DeleteComment_Desc.Text" xml:space="preserve">
    <value>Delete the comment, it will not be published and will not be available for future edits.</value>
  </data>
  <data name="DeleteEntry.Text" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteEntry_Desc.Text" xml:space="preserve">
    <value>Delete the blog post, it will not be published and will not be available for future edits.</value>
  </data>
  <data name="ApprovedBlogEntry.Text" xml:space="preserve">
    <value>Approved blog entry</value>
  </data>
  <data name="ApprovedBlogEntry_desc.Text" xml:space="preserve">
    <value>Approved a blog entry to be published</value>
  </data>
  <data name="AuthoredBlogEntry.Text" xml:space="preserve">
    <value>Authored blog entry</value>
  </data>
  <data name="AuthoredBlogEntry_desc.Text" xml:space="preserve">
    <value>Authored a blog entry that was published</value>
  </data>
  <data name="BookmarkedBlogEntry.Text" xml:space="preserve">
    <value>Bookmarked blog entry</value>
  </data>
  <data name="BookmarkedBlogEntry_desc.Text" xml:space="preserve">
    <value>Bookmarked a blog entry</value>
  </data>
  <data name="EditedBlogEntry.Text" xml:space="preserve">
    <value>Edited blog entry</value>
  </data>
  <data name="EditedBlogEntry_desc.Text" xml:space="preserve">
    <value>Edited a blog entry</value>
  </data>
  <data name="LikedBlogEntry.Text" xml:space="preserve">
    <value>Liked blog entry</value>
  </data>
  <data name="LikedBlogEntry_desc.Text" xml:space="preserve">
    <value>Liked a blog entry</value>
  </data>
  <data name="UnLikedBlogEntry.Text" xml:space="preserve">
    <value>Unliked blog entry</value>
  </data>
  <data name="UnLikedBlogEntry_desc.Text" xml:space="preserve">
    <value>Unliked a blog entry</value>
  </data>
  <data name="LikedBlogEntryComment.Text" xml:space="preserve">
    <value>Liked comment</value>
  </data>
  <data name="LikedBlogEntryComment_desc.Text" xml:space="preserve">
    <value>Liked a comment</value>
  </data>
  <data name="UnLikedBlogEntryComment.Text" xml:space="preserve">
    <value>Unliked comment</value>
  </data>
  <data name="UnLikedBlogEntryComment_desc.Text" xml:space="preserve">
    <value>Unliked a comment</value>
  </data>
  <data name="ProvidedLikedBlogEntry.Text" xml:space="preserve">
    <value>Provided liked blog entry</value>
  </data>
  <data name="ProvidedLikedBlogEntry_desc.Text" xml:space="preserve">
    <value>Provided a blog entry that was liked</value>
  </data>
  <data name="ProvidedUnLikedBlogEntry.Text" xml:space="preserve">
    <value>Provided unliked blog entry</value>
  </data>
  <data name="ProvidedUnLikedBlogEntry_desc.Text" xml:space="preserve">
    <value>Provided a blog entry that was unliked</value>
  </data>
  <data name="ProvidedLikedBlogEntryComment.Text" xml:space="preserve">
    <value>Provided liked comment</value>
  </data>
  <data name="ProvidedLikedBlogEntryComment_desc.Text" xml:space="preserve">
    <value>Provided a omment that was liked</value>
  </data>
  <data name="ProvidedUnLikedBlogEntryComment.Text" xml:space="preserve">
    <value>Provided unliked comment</value>
  </data>
  <data name="ProvidedUnLikedBlogEntryComment_desc.Text" xml:space="preserve">
    <value>Provided a comment that was unliked</value>
  </data>
  <data name="SubscribedToAllBlogs.Text" xml:space="preserve">
    <value>Subscribed to new blog entries</value>
  </data>
  <data name="SubscribedToAllBlogs_desc.Text" xml:space="preserve">
    <value>Subscribed to receive notifications for all new blog entries</value>
  </data>
  <data name="ViewedBlogEntry.Text" xml:space="preserve">
    <value>Viewed blog entry</value>
  </data>
  <data name="ViewedBlogEntry_desc.Text" xml:space="preserve">
    <value>Viewed a blog entry</value>
  </data>
  <data name="AddFilterTag.Text" xml:space="preserve">
    <value>Filter by tag</value>
  </data>
  <data name="CannotFindTerm.Text" xml:space="preserve">
    <value>Cannot find Term ID {0}</value>
  </data>
  <data name="InternalError.Text" xml:space="preserve">
    <value>Internal error</value>
  </data>
  <data name="AddBookmark.Text" xml:space="preserve">
    <value>Bookmark this</value>
  </data>
  <data name="BookmarkFailure.Text" xml:space="preserve">
    <value>Failed to bookmark</value>
  </data>
  <data name="LikeFailure.Text" xml:space="preserve">
    <value>Like failed</value>
  </data>
  <data name="LikeThis.Text" xml:space="preserve">
    <value>Like this</value>
  </data>
  <data name="RemoveBookmark.Text" xml:space="preserve">
    <value>Remove bookmark</value>
  </data>
  <data name="Subscribe.Text" xml:space="preserve">
    <value>Subscribe to this</value>
  </data>
  <data name="SubscribeFailure.Text" xml:space="preserve">
    <value>Failed to subscribe</value>
  </data>
  <data name="UnbookmarkFailure.Text" xml:space="preserve">
    <value>Failed to remove bookmark</value>
  </data>
  <data name="UnlikeFailure.Text" xml:space="preserve">
    <value>Failed to unlike</value>
  </data>
  <data name="UnlikeThis.Text" xml:space="preserve">
    <value>Unlike this</value>
  </data>
  <data name="Unsubscribe.Text" xml:space="preserve">
    <value>Unsubscribe</value>
  </data>
  <data name="UnsubscribeFailure.Text" xml:space="preserve">
    <value>Failed to unsubscribe</value>
  </data>
  <data name="CannotFindBlogEntry.Text" xml:space="preserve">
    <value>Cannot find Blog entry ID {0}</value>
  </data>
  <data name="CannotFindUser.Text" xml:space="preserve">
    <value>Cannot find user ID {0}</value>
  </data>
  <data name="UnknownError.Text" xml:space="preserve">
    <value>Unknown error</value>
  </data>
  <data name="CannotFindModule.Text" xml:space="preserve">
    <value>Cannot find Blogs module</value>
  </data>
  <data name="NotLoggedIn.Text" xml:space="preserve">
    <value>You must be logged in to perform this action.</value>
  </data>
  <data name="CannotFindAuthor.Text" xml:space="preserve">
    <value>Cannot find author of this post (User ID {0})</value>
  </data>
  <data name="ErrorPostingReply.Text" xml:space="preserve">
    <value>Unable to post this reply: {0}</value>
  </data>
  <data name="ErrorPostingReplyTitle.Text" xml:space="preserve">
    <value>Reply error</value>
  </data>
  <data name="NOTIFY_CommentFlagged.Subject" xml:space="preserve">
    <value>Comment Reported: [TITLE]</value>
  </data>
  <data name="DeletedBlogEntry.Text" xml:space="preserve">
    <value>Deleted entry</value>
  </data>
  <data name="DeletedBlogEntry_desc.Text" xml:space="preserve">
    <value>Deleted a blog entry</value>
  </data>
  <data name="DeletedComment.Text" xml:space="preserve">
    <value>Deleted comment</value>
  </data>
  <data name="DeletedComment_desc.Text" xml:space="preserve">
    <value>Deleted a comment</value>
  </data>
  <data name="FlaggedComment.Text" xml:space="preserve">
    <value>Flagged comment</value>
  </data>
  <data name="FlaggedComment_desc.Text" xml:space="preserve">
    <value>Reported a comment for moderator attention</value>
  </data>
  <data name="ProvidedDeletedComment.Text" xml:space="preserve">
    <value>Provided deleted comment</value>
  </data>
  <data name="ProvidedDeletedComment_desc.Text" xml:space="preserve">
    <value>Provided a comment that was deleted</value>
  </data>
  <data name="ProvidedFlaggedComment.Text" xml:space="preserve">
    <value>Provided flagged comment</value>
  </data>
  <data name="ProvidedFlaggedComment_desc.Text" xml:space="preserve">
    <value>Provided a comment that was flagged for moderator attention</value>
  </data>
  <data name="AllowComments.Text" xml:space="preserve">
    <value>Allow Comments</value>
  </data>
  <data name="AuthorMode.Text" xml:space="preserve">
    <value>Authoring Mode</value>
  </data>
  <data name="AuthorMode.Blogger" xml:space="preserve">
    <value>All Bloggers</value>
  </data>
  <data name="BlogTitle.Text" xml:space="preserve">
    <value>Title</value>
    <comment>.</comment>
  </data>
  <data name="Cancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Create.Text" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="AuthorMode.Ghost" xml:space="preserve">
    <value>Ghost Writer</value>
  </data>
  <data name="MetaWebBlogUrl.Text" xml:space="preserve">
    <value>MetaWeblog URL</value>
  </data>
  <data name="AuthorMode.Personal" xml:space="preserve">
    <value>Personal</value>
  </data>
  <data name="PublicBlog.Text" xml:space="preserve">
    <value>Visibility</value>
  </data>
  <data name="Syndicate.Text" xml:space="preserve">
    <value>Syndicate Blog</value>
  </data>
  <data name="Update.Text" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="CannotFindBlog.Text" xml:space="preserve">
    <value>Cannot find Blog ID {0}</value>
  </data>
  <data name="SaveBlogFailed.Text" xml:space="preserve">
    <value>Unable to save blog: {0}</value>
  </data>
  <data name="SaveBlogFailedTitle.Text" xml:space="preserve">
    <value>Save Failed</value>
  </data>
  <data name="DeleteBlog.Text" xml:space="preserve">
    <value>Delete This Blog</value>
  </data>
  <data name="DeleteBlogError.Text" xml:space="preserve">
    <value>Unable to delete blog: {0}</value>
  </data>
  <data name="DeleteBlogErrorTitle.Text" xml:space="preserve">
    <value>Error Deleting Blog</value>
  </data>
  <data name="DeleteBlog_Desc.Text" xml:space="preserve">
    <value>Are you sure you want to delete this blog?</value>
  </data>
  <data name="CreateBlog.Text" xml:space="preserve">
    <value>Create Blog</value>
  </data>
  <data name="EditBlog.Text" xml:space="preserve">
    <value>Edit Blog</value>
  </data>
  <data name="NewBlog.Text" xml:space="preserve">
    <value>Create New Blog</value>
  </data>
  <data name="NewEntry.Text" xml:space="preserve">
    <value>Add Entry</value>
  </data>
  <data name="ViewBlog.Text" xml:space="preserve">
    <value>View More Blogs</value>
  </data>
  <data name="ViewMore.Text" xml:space="preserve">
    <value>view more</value>
  </data>
  <data name="MostRecentEntries.Text" xml:space="preserve">
    <value>Most recent blog entries</value>
  </data>
  <data name="BlogArchive.Text" xml:space="preserve">
    <value>Blog archive</value>
  </data>
  <data name="BlogTitle.Help" xml:space="preserve">
    <value>The name of your blog that will be displayed when viewing the specific blog or within the Blogs 'roster' companion module.</value>
  </data>
  <data name="NOTIFY_NewEntryTitle.Text" xml:space="preserve">
    <value>Blog Entry: [TITLE]</value>
  </data>
  <data name="Moderators.Permission" xml:space="preserve">
    <value>Moderators</value>
  </data>
  <data name="PostedComment.Text" xml:space="preserve">
    <value>Posted comment</value>
  </data>
  <data name="PostedComment_desc.Text" xml:space="preserve">
    <value>Posted a comment to a blog entry</value>
  </data>
  <data name="UserHasNoBiography.Text" xml:space="preserve">
    <value>This user has not provided a biography</value>
  </data>
  <data name="Comment.Text" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Comments.Text" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="ApprovedBlogComment.Text" xml:space="preserve">
    <value>Approved blog comment</value>
  </data>
  <data name="ApprovedBlogComment_desc.Text" xml:space="preserve">
    <value>Approved a blog comment that was moderated prior to public display</value>
  </data>
  <data name="SubscribedToEntry.Text" xml:space="preserve">
    <value>Subscribed to a blog entry</value>
  </data>
  <data name="SubscribedToEntry_desc.Text" xml:space="preserve">
    <value>Subscribed to receive notifications when new comments or activity happens on a specific blog entry</value>
  </data>
  <data name="UnsubscribedFromAllBlogs.Text" xml:space="preserve">
    <value>Unsubscribed from new entries</value>
  </data>
  <data name="UnsubscribedFromAllBlogs_desc.Text" xml:space="preserve">
    <value>Unsubscribed from receiving notifications of new blog entries</value>
  </data>
  <data name="UnsubscribedFromEntry.Text" xml:space="preserve">
    <value>Unsubscribed from a blog entry</value>
  </data>
  <data name="UnsubscribedFromEntry_desc.Text" xml:space="preserve">
    <value>Unsubscribed from receiving notifications of new comments or activity on a specific blog entry</value>
  </data>
  <data name="NOTIFY_NewCommentTitle.Text" xml:space="preserve">
    <value>Blog Comment: [TITLE]</value>
  </data>
  <data name="EditBlogSettings.Text" xml:space="preserve">
    <value>Blog Settings</value>
  </data>
  <data name="DescriptionBlogAuthorMode.Text" xml:space="preserve">
    <value>&lt;p&gt;
                        &lt;b&gt;Personal: &lt;/b&gt;Only the blog owner can publish blog entries.
                    &lt;/p&gt;
                    &lt;p&gt;
                        &lt;b&gt;Ghost Writer: &lt;/b&gt;The blog owner and any ghost writers can publish entries; blog owner is the displayed author.
                    &lt;/p&gt;
                    &lt;p&gt;
                        &lt;b&gt;All Bloggers: &lt;/b&gt;Any user who can blog can publish blog entries to this blog and the person publishing the entry is credited as the author.
                    &lt;/p&gt;</value>
  </data>
  <data name="DescriptionBlogSyndicate.Text" xml:space="preserve">
    <value>Posts are available for others to use on their websites or to access through a newsfeed reader program</value>
  </data>
  <data name="DescriptionBlogVisibility.Text" xml:space="preserve">
    <value>&lt;p&gt;
                        &lt;b&gt;Public: &lt;/b&gt;Content is viewable to anyone who can see the blog page.
                    &lt;/p&gt;
                    &lt;p&gt;
                        &lt;b&gt;Private: &lt;/b&gt;Content is only viewable by you.
                    &lt;/p&gt;</value>
  </data>
  <data name="PublishingAuthor.Text" xml:space="preserve">
    <value>Publishing as {0} to the &lt;b&gt;{1}&lt;/b&gt; blog</value>
  </data>
  <data name="RemovedBlogBookmark.Text" xml:space="preserve">
    <value>Removed blog bookmark</value>
  </data>
  <data name="RemovedBlogBookmark_desc.Text" xml:space="preserve">
    <value>Removed a blog bookmark</value>
  </data>
  <data name="SearchedBlogs.Text" xml:space="preserve">
    <value>Searched blogs</value>
  </data>
  <data name="SearchedBlogs_desc.Text" xml:space="preserve">
    <value>Performed a search within the blogs area</value>
  </data>
  <data name="RejectCommentReportNotifications.Text" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="RejectCommentReportNotifications_Desc.Text" xml:space="preserve">
    <value>Reject a comment. It will not be published and will not be available for future edits.</value>
  </data>
  <data name="Anonymous.Text" xml:space="preserve">
    <value>Anonymous</value>
  </data>
  <data name="Ghost Writer.Permission" xml:space="preserve">
    <value>Ghost Writer</value>
  </data>
  <data name="NOTIFY_EntryRemovedTitle.Text" xml:space="preserve">
    <value>Blog Entry Removed: [TITLE]</value>
  </data>
  <data name="NOTIFY_EntryRemoved.Text" xml:space="preserve">
    <value>&lt;b&gt;Your following blog entry has been removed:&lt;/b&gt;&lt;br/&gt;
&lt;div class='dnnClear'&gt;&lt;label&gt;Blog:&lt;/label&gt;&amp;nbsp;&amp;nbsp;[BLOG_TITLE]
&lt;label&gt;Entry Title: &lt;/label&gt;&amp;nbsp;&amp;nbsp;[ENTRY_TITLE]&lt;br /&gt;&lt;/div&gt;[SUMMARY]</value>
  </data>
  <data name="NoEntryFound.Text" xml:space="preserve">
    <value>No entry found.</value>
  </data>
  <data name="ConfirmTitle.Text" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="DeleteEntryConfirm.Text" xml:space="preserve">
    <value>Are you sure you wish to delete this item?</value>
  </data>
  <data name="DeleteFailure.Text" xml:space="preserve">
    <value>Sorry, we were unable to delete this entry.</value>
  </data>
  <data name="DeleteFailureTitle.Text" xml:space="preserve">
    <value>Unable to delete</value>
  </data>
  <data name="UnknownError.Text1" xml:space="preserve">
    <value>Unknown error</value>
  </data>
  <data name="ApproveFailure.Text" xml:space="preserve">
    <value>Sorry, we were unable to approve this entry.</value>
  </data>
  <data name="ApproveFailureTitle.Text" xml:space="preserve">
    <value>Unable to approve</value>
  </data>
  <data name="EditOwnItem.Text" xml:space="preserve">
    <value>Edit own blog/comments</value>
  </data>
  <data name="EditOwnItem_desc.Text" xml:space="preserve">
    <value>The ability to edit your blog and comments posted in your blog</value>
  </data>
  <data name="EditedComment.Text" xml:space="preserve">
    <value>Edited comment</value>
  </data>
  <data name="EditedComment_desc.Text" xml:space="preserve">
    <value>Edited a comment on a blog entry</value>
  </data>
  <data name="Share.Text" xml:space="preserve">
    <value>Shared a link</value>
  </data>
  <data name="Share_desc.Text" xml:space="preserve">
    <value>Shared a link to content on the site using a social share service</value>
  </data>
  <data name="TransformingUrl.Text" xml:space="preserve">
    <value>Transforming URL...</value>
  </data>
  <data name="FacebookShare.Text" xml:space="preserve">
    <value>Facebook Share</value>
  </data>
  <data name="FacebookShare_desc.Text" xml:space="preserve">
    <value>Shared a link to content on the site using the Facebook share service</value>
  </data>
  <data name="GoogleShare.Text" xml:space="preserve">
    <value>Google Share</value>
  </data>
  <data name="GoogleShare_desc.Text" xml:space="preserve">
    <value>Shared a link to content on the site using the Google share service</value>
  </data>
  <data name="LinkedInShare.Text" xml:space="preserve">
    <value>LinkedIn Share</value>
  </data>
  <data name="LinkedInShare_desc.Text" xml:space="preserve">
    <value>Shared a link to content on the site using the LinkedIn share service</value>
  </data>
  <data name="TwitterShare.Text" xml:space="preserve">
    <value>Twitter Share</value>
  </data>
  <data name="TwitterShare_desc.Text" xml:space="preserve">
    <value>Shared a link to content on the site using the Twitter share service</value>
  </data>
  <data name="SubsBlogEntryActivity.Text" xml:space="preserve">
    <value>Blog Entry Activity</value>
  </data>
  <data name="SubsNewBlogEntries.Text" xml:space="preserve">
    <value>New Blog Entries</value>
  </data>
  <data name="BlogNumberOfEntriesOne.Text" xml:space="preserve">
    <value>This Blog has {0} entry</value>
  </data>
  <data name="BlogNumberOfEntriesMany.Text" xml:space="preserve">
    <value>This Blog has {0} entries</value>
  </data>
</root>