
/* Update mechanics action types (for upgrades) */
DECLARE @DesktopModuleId INT
SET @DesktopModuleId = ( SELECT DesktopModuleID FROM {databaseOwner}[{objectQualifier}DesktopModules] WHERE  ModuleName = 'Ideas' AND FolderName = 'DNNCorp/Ideas')

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 12
	WHERE ActionName = 'ProvidedIdeaVotedOn' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 9
	WHERE ActionName = 'ProvidedIdeaResponse' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 12
	WHERE ActionName = 'ProvidedAcceptedIdea' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 5
	WHERE ActionName = 'ProvidedFlaggedComment' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 4
	WHERE ActionName = 'ProvidedDeletedComment' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 7
	WHERE ActionName = 'VotedOnIdea' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 9
	WHERE ActionName = 'ApprovedIdea' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 7
	WHERE ActionName = 'BookmarkedIdea' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 7
	WHERE ActionName = 'SubscribedToAnIdea' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 9
	WHERE ActionName = 'DeletedIdea' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 4
	WHERE ActionName = 'DeletedComment' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 3
	WHERE ActionName = 'PostedComment' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 8
	WHERE ActionName = 'RemovedVotes' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 7
	WHERE ActionName = 'SubscribedToAllIdeas' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 8
	WHERE ActionName = 'UnsubscribedFromAllIdeas' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 8
	WHERE ActionName = 'UnsubscribedFromIdea' AND DesktopModuleId = @DesktopModuleId

	UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 7
	WHERE ActionName = 'LikedIdea' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 8
	WHERE ActionName = 'UnLikedIdea' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 7
	WHERE ActionName = 'LikedIdeaComment' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 8
	WHERE ActionName = 'UnLikedIdeaComment' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 12
	WHERE ActionName = 'ProvidedLikedIdea' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 13
	WHERE ActionName = 'ProvidedUnLikedIdea' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 12
	WHERE ActionName = 'ProvidedLikedIdeaComment' AND DesktopModuleId = @DesktopModuleId

UPDATE {databaseOwner}[{objectQualifier}Mechanics_ScoringActionDefinition]
	SET ActionType = 13
	WHERE ActionName = 'ProvidedUnLikedIdeaComment' AND DesktopModuleId = @DesktopModuleId
GO

/********************************************************
 * SPROC: Ideas_Idea_GetByUserId
 ********************************************************/
IF EXISTS (SELECT * FROM {databaseOwner}SYSOBJECTS WHERE id = object_id(N'{databaseOwner}[{objectQualifier}Ideas_Idea_GetByUserId]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Ideas_Idea_GetByUserId]
GO	

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Ideas_Idea_GetByUserId]
	@PortalId INT ,
	@UserId INT
AS 
	SELECT  [IdeaId] ,
			[GroupId],
			[Authorized] ,
			[Views] ,
			[Votes] ,
			[Comments] ,
			[Supporters] ,
			[Status] ,
			[Protected],
			[Custom1] ,
			[Custom2] ,
			[Custom3] ,
			[Custom4] ,
			[AcceptedOnDate] ,
			[ScheduledOnDate] ,
			[DeliveredOnDate] ,
			CI.ContentItemID ,
			CI.Content ,
			CI.ContentTypeID ,
			CI.TabID ,
			CI.ModuleID ,
			CI.ContentKey ,
			CI.Indexed ,
			CI.CreatedByUserID ,
			CI.CreatedOnDate ,
			CI.LastModifiedByUserID ,
			CI.LastModifiedOnDate ,
			TB.[PortalID],
			CIMD.MetaDataValue AS [ContentTitle]
	FROM    {databaseOwner}{objectQualifier}Ideas_Idea AS I
			INNER JOIN {databaseOwner}{objectQualifier}ContentItems CI ON I.ContentItemId = CI.ContentItemID
			INNER JOIN {databaseOwner}{objectQualifier}Tabs TB ON TB.[TabID] = CI.TabID
			LEFT OUTER JOIN {databaseOwner}{objectQualifier}ContentItems_MetaData CIMD ON CIMD.ContentItemID = CI.[ContentItemID]
															  AND CIMD.MetaDataID = ( SELECT
															  MetaDataID
															  FROM
															  {databaseOwner}[{objectQualifier}MetaData]
															  WHERE
															  MetaDataName = 'Title'
															  )
	WHERE   TB.[PortalId] = @PortalId
			AND CI.CreatedByUserID = @UserId
GO


/********************************************************
* SPROC: Ideas_Vote_GetVotesByUserId
********************************************************/
IF EXISTS (SELECT * FROM {databaseOwner}SYSOBJECTS WHERE id = object_id(N'{databaseOwner}[{objectQualifier}Ideas_Vote_GetVotesByUserId]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Ideas_Vote_GetVotesByUserId]
GO	

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Ideas_Vote_GetVotesByUserId]
	@PortalId INT,
	@UserId INT	
AS
BEGIN
	SELECT * FROM {databaseOwner}{objectQualifier}Ideas_Vote AS V
			 INNER JOIN {databaseOwner}{objectQualifier}Ideas_Idea AS I ON I.IdeaId = V.IdeaId
			 INNER JOIN {databaseOwner}{objectQualifier}ContentItems AS CI ON I.ContentItemId = CI.ContentItemId
			 INNER JOIN {databaseOwner}{objectQualifier}Tabs TB ON CI.TabID = TB.TabId
	WHERE TB.PortalId = @PortalId AND V.UserId = @UserId
END
GO