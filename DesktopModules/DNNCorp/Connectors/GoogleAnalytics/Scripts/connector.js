
﻿"use strict";define(['jquery','knockout','templatePath/scripts/PersonaBarDialog','knockout.validation.min','dnn.servicesframework','dnn.jquery','dnn.extensions','dnn.jquery.extensions','dnn.DataStructures','jquery.mousewheel','dnn.jScrollBar','dnn.TreeView','dnn.DynamicTreeView','dnn.DropDownList','css.DropDownList','css.jScrollBar'],function($,ko,PersonaBarDialog){var bindViewModel,advancedViewModel,rootFolder,utility,helper,rules,tempRules,pagePickerOptions,allRoles,pagesDropDowns=[],advancedDialog;var init=function(koObject,connectionHelper,pluginFolder,util){bindViewModel=koObject;rootFolder=pluginFolder;utility=util;helper=connectionHelper;$(document.body).on('click','#connector-GoogleAnalytics .advancedSetting',onAdvancedClick);initBindViewModel();initRequiredResources();splitRuleSettings();getAdvancedViewModel();ko.validation.localize({required:bindViewModel.resx.Validation_Required});ko.validation.init({errorMessageClass:'validationMessage'},true);loadPlugins();}
var initBindViewModel=function(){bindViewModel.trackForAdminChanged=function(viewModel,e){viewModel.trackForAdmins(viewModel.trackForAdmins()==="true"?"false":"true");return true;}}
var initializePlugins=function(plugins){for(var i=0;i<plugins.length;i++){require(['rootPath'+rootFolder+'scripts/'+plugins[i]],function(plugin){if(typeof plugin["init"]==="function"){plugin["init"].call(plugin,bindViewModel,helper,rootFolder,utility);}});}}
var loadPlugins=function(){utility.sf.moduleRoot='dnncorp/GoogleAnalyticsConnector';utility.sf.controller='Services';utility.sf.get('GetPlugins',{},function(data){initializePlugins(data);});}
var onSave=function(koObject){mergeRuleSettings();}
var initRequiredResources=function(){if(typeof dnn==='undefined'){window.Sys=!window.Sys?window.top.Sys:window.Sys;window.dnn=!window.dnn?window.top.dnn:window.dnn;window.String=!window.String?window.top.String:window.String;window.String.format=!window.String.format?window.top.String.format:window.String.format;}}
var splitRuleSettings=function(){rules=[];for(var i=bindViewModel.configurations.length-1;i>=0;i--){var config=bindViewModel.configurations[i];if(config.name!=='TrackingId'&&config.name!=='DomainName'&&config.name!=='TrackForAdmin'&&config.name!=='ServiceUrl'){bindViewModel.configurations.splice(i,1);if(config.name.indexOf('rule-')===0){var id=config.name.substr(5);var valueParts=config.value().split('$$$');var pageValue=valueParts[2].split(',');var pageId=pageValue[0];var pageName=pageValue[1];var roleValue=valueParts[3].split(',');var roleId=roleValue[0];var roleName=roleValue[1];rules.splice(0,0,{id:id,label:valueParts[0],value:valueParts[1],page:pageId,role:roleId,pageName:pageName,roleName:roleName});}}}}
var mergeRuleSettings=function(){for(var i=0;i<rules.length;i++){var rule=rules[i];if(rule.page===''){rule.page='-1';}
if(rule.role===''){rule.role='-1';}
var value=rule.label+'$$$'+rule.value+'$$$'+rule.page+'$$$'+rule.role;bindViewModel.configurations.push({name:'rule-'+(i+1),value:ko.protectedObservable(value)});}}
var onAfterBind=function(){if(!pagePickerOptions){utility.sf.moduleRoot='dnncorp/GoogleAnalyticsConnector';utility.sf.controller='Services';utility.sf.get('GetPagePickerOptions',{},function(data){pagePickerOptions=data;pagePickerOptions.onSelectionChangedBackScript=onPageSelectionChanged;createPagesDropDowns();});}else{createPagesDropDowns();}
if(!pagePickerOptions){utility.sf.moduleRoot='dnncorp/GoogleAnalyticsConnector';utility.sf.controller='Services';utility.sf.get('GetRoles',{},function(data){allRoles=data;createRolesDropDown();});}else{createRolesDropDown();}
var $rulesGrid=$('.conn-ga-advancedSetting .rule-grid .items');$rulesGrid.jScrollPane();}
var createPagesDropDowns=function(){pagesDropDowns=[];var dd=new dnn.DropDownList(null,pagePickerOptions);pagesDropDowns.push(dd);$('.conn-ga-advancedSetting .pagesDropDown.-1').empty();$('.conn-ga-advancedSetting .pagesDropDown.-1').append(dd.$element);for(var i=0;i<rules.length;i++){dd=new dnn.DropDownList(null,pagePickerOptions);$('.conn-ga-advancedSetting .pagesDropDown.'+(rules[i].id)).empty();$('.conn-ga-advancedSetting .pagesDropDown.'+(rules[i].id)).append(dd.$element);pagesDropDowns.push(dd);}}
var onPageSelectionChanged=function(e){var itemId=parseInt(this.$element.parent()[0].className.replace("pagesDropDown ",""));if(itemId===-1)itemId=0;var pageId=pagesDropDowns[itemId].selectedItem().key;advancedViewModel.editModel.page(pageId);}
var createRolesDropDown=function(){if(advancedViewModel&&advancedViewModel.roleData().length===0){for(var i=0;i<allRoles.length;i++){advancedViewModel.roleData.push(allRoles[i]);}}}
var getAdvancedViewModel=function(){if(!advancedViewModel){advancedViewModel={that:this,domainName:ko.observable(bindViewModel.configurations[1].value()),trackForAdmins:ko.observable(bindViewModel.configurations[2].value()),addingRule:ko.observable(false),editModel:{id:ko.observable(-1),label:ko.observable('').extend({required:true}),value:ko.observable('').extend({required:true}),page:ko.observable(''),role:ko.observable('-1')},rules:ko.observableArray(rules),roleData:ko.observableArray([]),resx:bindViewModel.resx,editRule:onEditRule,deleteRule:onDeleteRule,moveUp:onMoveUp,moveDown:onMoveDown,trackForAdminChanged:bindViewModel.trackForAdminChanged,addRule:onAddingRule,saveRule:onSaveRule,cancelAddRule:onCancelAddRule,isEditingRule:isEditingRule,cancelEditRule:onCancelEditRule,saveEditRule:onSaveEditRule};}else{resetEditModel();}
return advancedViewModel;}
var isEditingRule=function(id){return advancedViewModel.editModel.id()===id;}
var resetEditModel=function(item){if(!item){item={id:-1,label:'',value:'',page:'',role:'-1',pageName:bindViewModel.resx.AnyPage,roleName:bindViewModel.resx.AnyRole}}
advancedViewModel.editModel.id(item.id);advancedViewModel.editModel.label(item.label);advancedViewModel.editModel.label.isModified(false);advancedViewModel.editModel.value(item.value);advancedViewModel.editModel.value.isModified(false);advancedViewModel.editModel.page(item.page);advancedViewModel.editModel.role(item.role);if(pagesDropDowns.length>0){if(item.id===-1){pagesDropDowns[0].selectedItem({key:item.page,value:item.pageName});}
else{pagesDropDowns[item.id].selectedItem({key:item.page,value:item.pageName});}}
$('#gaEditRolesDropDown .'+item.id).val(item.role);}
var onAdvancedSettingAccept=function(e){if(advancedViewModel.addingRule()||advancedViewModel.editModel.id()!==-1){onSaveRule(e);}else{bindViewModel.configurations[1].value(advancedViewModel.domainName());bindViewModel.configurations[2].value(advancedViewModel.trackForAdmins());helper.saveConnection(bindViewModel,onSaveComplete,true);advancedDialog.close();}}
var resizeJspContainer=function(){setTimeout(function(){var $rulesGrid=$('.conn-ga-advancedSetting .rule-grid .items');var h=0;if($rulesGrid.length>0&&advancedViewModel.rules().length>0){h=advancedViewModel.rules().length*40+2;if(advancedViewModel.editModel.id()!==-1){h+=200;}}
$rulesGrid.css("height",h+"px");if($rulesGrid.length>0&&advancedViewModel.rules().length===0){$rulesGrid.find('.jspContainer').remove();}else{$rulesGrid.jScrollPane();}},0);}
var onEditRule=function(item,e){advancedViewModel.addingRule(false);createPagesDropDowns();resetEditModel(item);resizeJspContainer();};var onAddingRule=function(e){resetEditModel();advancedViewModel.addingRule(true);}
var onCancelEditRule=function(e){resetEditModel();resizeJspContainer();}
var onSaveEditRule=function(e){onSaveRule(e);}
var onCancelAddRule=function(e){advancedViewModel.addingRule(false);resetEditModel();resizeJspContainer();}
var onSaveRule=function(e){var editModel=advancedViewModel.editModel;var result=ko.validation.group(editModel,{deep:true});if(!editModel.isValid()){result.showAllMessages(true);return;}
advancedViewModel.addingRule(false);if(editModel.id()===-1){rules.push({id:rules.length+1,label:editModel.label(),value:editModel.value(),page:editModel.page(),role:editModel.role()});}else{rules.splice(editModel.id()-1,1,{id:editModel.id(),label:editModel.label(),value:editModel.value(),page:editModel.page(),role:editModel.role()});}
helper.saveConnection(bindViewModel,onSaveComplete,true);}
var onDeleteRule=function(item,e){utility.confirm(bindViewModel.resx.DeleteConfirm,bindViewModel.resx.Delete,bindViewModel.resx.Cancel,function(){doDeleteRule(item);});}
var doDeleteRule=function(item){rules.splice(item.id-1,1);helper.saveConnection(bindViewModel,onSaveComplete,true);}
var onMoveUp=function(item,e){if(item.id===1){return;}
var currentIndex=item.id-1;var rule=rules[currentIndex];rules.splice(currentIndex,1);rules.splice(currentIndex-1,0,rule);helper.saveConnection(bindViewModel,onSaveComplete,true);}
var onMoveDown=function(item,e){if(item.id===rules.length){return;}
var currentIndex=item.id-1;var rule=rules[currentIndex];rules.splice(currentIndex,1);rules.splice(currentIndex+1,0,rule);helper.saveConnection(bindViewModel,onSaveComplete,true);}
var onSaveComplete=function(){copyTempRules();splitRuleSettings();setTimeout(function(){advancedViewModel.rules.removeAll();for(var i=0;i<rules.length;i++){if(!rules[i].pageName){rules[i].pageName=i<tempRules.length&&tempRules[i].pageName?tempRules[i].pageName:getSelectedPageName(rules[i].id);}
if(!rules[i].roleName){var roleName=$.grep(advancedViewModel.roleData(),function(e){return e.RoleId==rules[i].role;});rules[i].roleName=roleName.length===0?"":roleName[0].RoleName;}
advancedViewModel.rules.push(rules[i]);}
resetEditModel();resizeJspContainer();},0);}
var copyTempRules=function(){tempRules=[];for(var i=0;i<rules.length;i++){tempRules.push(rules[i]);};}
var getSelectedPageName=function(i){i=parseInt(i);if(i>=pagesDropDowns.length)i=0;return pagesDropDowns[i].selectedItem().value;}
var onAdvancedSettingCancel=function(){advancedViewModel.addingRule(false);}
var onAdvancedClick=function(){require(['text!rootPath'+rootFolder+'advanced.htm'],function(html){advancedDialog=new PersonaBarDialog({inObject:$('body'),width:771,title:bindViewModel.resx.AdvancedSettings,cancelBtnLbl:'Cancel',acceptBtnLbl:'Save',onAcceptCallback:onAdvancedSettingAccept,closeOnAccept:false,onCloseCallback:onAdvancedSettingCancel,},html,getAdvancedViewModel,onAfterBind);});}
var getActionButtons=function(){return[{className:'primarybtn',text:bindViewModel.resx.Save,action:function(conn,e){saveConnection(conn,e);}}];}
var saveConnection=function(conn,e){conn.save(conn,e,function(success){onSaveComplete();});}
return{init:init,onSave:onSave,getActionButtons:getActionButtons}});